//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<179>;
	.reg .b16 	%rs<182>;
	.reg .f32 	%f<1689>;
	.reg .b32 	%r<521>;
	.reg .b64 	%rd<312>;


	mov.u64 	%rd311, __local_depot0;
	cvta.local.u64 	%SP, %rd311;
	ld.global.v2.u32 	{%r115, %r116}, [pixelID];
	cvt.u64.u32	%rd29, %r115;
	cvt.u64.u32	%rd30, %r116;
	mov.u64 	%rd33, uvnormal;
	cvta.global.u64 	%rd28, %rd33;
	mov.u32 	%r113, 2;
	mov.u32 	%r114, 4;
	mov.u64 	%rd32, 0;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r113, %r114, %rd29, %rd30, %rd32, %rd32);
	// inline asm
	ld.u32 	%r1, [%rd27];
	shr.u32 	%r119, %r1, 16;
	cvt.u16.u32	%rs1, %r119;
	and.b16  	%rs14, %rs1, 255;
	cvt.u16.u32	%rs15, %r1;
	or.b16  	%rs16, %rs15, %rs14;
	setp.eq.s16	%p6, %rs16, 0;
	mov.f32 	%f1623, 0f00000000;
	mov.f32 	%f1624, %f1623;
	mov.f32 	%f1625, %f1623;
	@%p6 bra 	BB0_2;

	ld.u8 	%rs17, [%rd27+1];
	and.b16  	%rs19, %rs15, 255;
	cvt.rn.f32.u16	%f258, %rs19;
	div.rn.f32 	%f259, %f258, 0f437F0000;
	fma.rn.f32 	%f260, %f259, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f261, %rs17;
	div.rn.f32 	%f262, %f261, 0f437F0000;
	fma.rn.f32 	%f263, %f262, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f264, %rs14;
	div.rn.f32 	%f265, %f264, 0f437F0000;
	fma.rn.f32 	%f266, %f265, 0f40000000, 0fBF800000;
	mul.f32 	%f267, %f263, %f263;
	fma.rn.f32 	%f268, %f260, %f260, %f267;
	fma.rn.f32 	%f269, %f266, %f266, %f268;
	sqrt.rn.f32 	%f270, %f269;
	rcp.rn.f32 	%f271, %f270;
	mul.f32 	%f1623, %f260, %f271;
	mul.f32 	%f1624, %f263, %f271;
	mul.f32 	%f1625, %f266, %f271;

BB0_2:
	ld.global.v2.u32 	{%r120, %r121}, [pixelID];
	ld.global.v2.u32 	{%r123, %r124}, [tileInfo];
	add.s32 	%r2, %r120, %r123;
	add.s32 	%r3, %r121, %r124;
	setp.eq.f32	%p7, %f1624, 0f00000000;
	setp.eq.f32	%p8, %f1623, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	setp.eq.f32	%p10, %f1625, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB0_154;
	bra.uni 	BB0_3;

BB0_154:
	ld.global.u32 	%r520, [imageEnabled];
	and.b32  	%r453, %r520, 1;
	setp.eq.b32	%p172, %r453, 1;
	@!%p172 bra 	BB0_156;
	bra.uni 	BB0_155;

BB0_155:
	cvt.u64.u32	%rd215, %r2;
	cvt.u64.u32	%rd216, %r3;
	mov.u64 	%rd219, image;
	cvta.global.u64 	%rd214, %rd219;
	mov.u64 	%rd218, 0;
	// inline asm
	call (%rd213), _rt_buffer_get_64, (%rd214, %r113, %r114, %rd215, %rd216, %rd218, %rd218);
	// inline asm
	mov.u16 	%rs119, 0;
	st.v4.u8 	[%rd213], {%rs119, %rs119, %rs119, %rs119};
	ld.global.u32 	%r520, [imageEnabled];

BB0_156:
	and.b32  	%r456, %r520, 8;
	setp.eq.s32	%p173, %r456, 0;
	@%p173 bra 	BB0_158;

	cvt.u64.u32	%rd223, %r3;
	cvt.u64.u32	%rd222, %r2;
	mov.u64 	%rd226, image_Mask;
	cvta.global.u64 	%rd221, %rd226;
	mov.u64 	%rd225, 0;
	// inline asm
	call (%rd220), _rt_buffer_get_64, (%rd221, %r113, %r113, %rd222, %rd223, %rd225, %rd225);
	// inline asm
	mov.f32 	%f1592, 0f00000000;
	cvt.rzi.u32.f32	%r459, %f1592;
	cvt.u16.u32	%rs120, %r459;
	mov.u16 	%rs121, 0;
	st.v2.u8 	[%rd220], {%rs120, %rs121};
	ld.global.u32 	%r520, [imageEnabled];

BB0_158:
	cvt.u64.u32	%rd25, %r2;
	cvt.u64.u32	%rd26, %r3;
	and.b32  	%r460, %r520, 4;
	setp.eq.s32	%p174, %r460, 0;
	@%p174 bra 	BB0_162;

	ld.global.u32 	%r461, [additive];
	setp.eq.s32	%p175, %r461, 0;
	@%p175 bra 	BB0_161;

	mov.u64 	%rd239, image_HDR;
	cvta.global.u64 	%rd228, %rd239;
	mov.u32 	%r465, 8;
	mov.u64 	%rd238, 0;
	// inline asm
	call (%rd227), _rt_buffer_get_64, (%rd228, %r113, %r465, %rd25, %rd26, %rd238, %rd238);
	// inline asm
	ld.v4.u16 	{%rs128, %rs129, %rs130, %rs131}, [%rd227];
	// inline asm
	{  cvt.f32.f16 %f1593, %rs128;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1594, %rs129;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1595, %rs130;}

	// inline asm
	// inline asm
	call (%rd233), _rt_buffer_get_64, (%rd228, %r113, %r465, %rd25, %rd26, %rd238, %rd238);
	// inline asm
	add.f32 	%f1596, %f1593, 0f00000000;
	add.f32 	%f1597, %f1594, 0f00000000;
	add.f32 	%f1598, %f1595, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs127, %f1598;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs126, %f1597;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs125, %f1596;}

	// inline asm
	mov.u16 	%rs132, 0;
	st.v4.u16 	[%rd233], {%rs125, %rs126, %rs127, %rs132};
	bra.uni 	BB0_162;

BB0_3:
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f7, [directDir];
	ld.global.v2.u32 	{%r136, %r137}, [pixelID];
	cvt.u64.u32	%rd36, %r136;
	cvt.u64.u32	%rd37, %r137;
	mov.u64 	%rd58, uvpos;
	cvta.global.u64 	%rd35, %rd58;
	mov.u32 	%r133, 12;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r113, %r133, %rd36, %rd37, %rd32, %rd32);
	// inline asm
	ld.f32 	%f274, [%rd34+8];
	ld.f32 	%f275, [%rd34+4];
	ld.f32 	%f276, [%rd34];
	mul.f32 	%f277, %f276, 0f3456BF95;
	mul.f32 	%f278, %f275, 0f3456BF95;
	mul.f32 	%f279, %f274, 0f3456BF95;
	abs.f32 	%f280, %f1623;
	div.rn.f32 	%f281, %f277, %f280;
	abs.f32 	%f282, %f1624;
	div.rn.f32 	%f283, %f278, %f282;
	abs.f32 	%f284, %f1625;
	div.rn.f32 	%f285, %f279, %f284;
	abs.f32 	%f286, %f281;
	abs.f32 	%f287, %f283;
	abs.f32 	%f288, %f285;
	mov.f32 	%f289, 0f38D1B717;
	max.f32 	%f290, %f286, %f289;
	max.f32 	%f291, %f287, %f289;
	max.f32 	%f292, %f288, %f289;
	fma.rn.f32 	%f10, %f1623, %f290, %f276;
	fma.rn.f32 	%f11, %f1624, %f291, %f275;
	fma.rn.f32 	%f12, %f1625, %f292, %f274;
	setp.gt.f32	%p12, %f280, %f284;
	neg.f32 	%f293, %f1624;
	selp.f32	%f294, %f293, 0f00000000, %p12;
	neg.f32 	%f295, %f1625;
	selp.f32	%f296, %f1623, %f295, %p12;
	selp.f32	%f297, 0f00000000, %f1624, %p12;
	mul.f32 	%f298, %f296, %f296;
	fma.rn.f32 	%f299, %f294, %f294, %f298;
	fma.rn.f32 	%f300, %f297, %f297, %f299;
	sqrt.rn.f32 	%f301, %f300;
	rcp.rn.f32 	%f302, %f301;
	mul.f32 	%f13, %f294, %f302;
	mul.f32 	%f14, %f296, %f302;
	mul.f32 	%f15, %f297, %f302;
	mul.f32 	%f303, %f1625, %f14;
	mul.f32 	%f304, %f1624, %f15;
	sub.f32 	%f16, %f303, %f304;
	mul.f32 	%f305, %f1623, %f15;
	mul.f32 	%f306, %f1625, %f13;
	sub.f32 	%f17, %f305, %f306;
	mul.f32 	%f307, %f1624, %f13;
	mul.f32 	%f308, %f1623, %f14;
	sub.f32 	%f18, %f307, %f308;
	ld.global.v2.u32 	{%r140, %r141}, [pixelID];
	cvt.u64.u32	%rd43, %r141;
	add.s32 	%r144, %r140, 1;
	ld.global.u32 	%r145, [resolution];
	add.s32 	%r146, %r145, -1;
	min.u32 	%r147, %r144, %r146;
	cvt.u64.u32	%rd42, %r147;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd35, %r113, %r133, %rd42, %rd43, %rd32, %rd32);
	// inline asm
	ld.f32 	%f309, [%rd40+8];
	ld.f32 	%f310, [%rd40+4];
	ld.f32 	%f311, [%rd40];
	setp.eq.f32	%p13, %f311, 0f00000000;
	setp.eq.f32	%p14, %f310, 0f00000000;
	and.pred  	%p15, %p13, %p14;
	setp.eq.f32	%p16, %f309, 0f00000000;
	and.pred  	%p17, %p15, %p16;
	selp.f32	%f312, %f276, %f311, %p17;
	selp.f32	%f313, %f275, %f310, %p17;
	selp.f32	%f314, %f274, %f309, %p17;
	ld.global.v2.u32 	{%r148, %r149}, [pixelID];
	add.s32 	%r152, %r149, 1;
	ld.global.u32 	%r153, [resolution+4];
	add.s32 	%r154, %r153, -1;
	min.u32 	%r155, %r152, %r154;
	cvt.u64.u32	%rd48, %r148;
	cvt.u64.u32	%rd49, %r155;
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd35, %r113, %r133, %rd48, %rd49, %rd32, %rd32);
	// inline asm
	ld.f32 	%f315, [%rd46+8];
	ld.f32 	%f316, [%rd46+4];
	ld.f32 	%f317, [%rd46];
	setp.eq.f32	%p18, %f317, 0f00000000;
	setp.eq.f32	%p19, %f316, 0f00000000;
	and.pred  	%p20, %p18, %p19;
	setp.eq.f32	%p21, %f315, 0f00000000;
	and.pred  	%p22, %p20, %p21;
	selp.f32	%f318, %f276, %f317, %p22;
	selp.f32	%f319, %f275, %f316, %p22;
	selp.f32	%f320, %f274, %f315, %p22;
	sub.f32 	%f321, %f312, %f276;
	sub.f32 	%f322, %f313, %f275;
	sub.f32 	%f323, %f314, %f274;
	sub.f32 	%f324, %f318, %f276;
	sub.f32 	%f325, %f319, %f275;
	sub.f32 	%f326, %f320, %f274;
	abs.f32 	%f327, %f321;
	abs.f32 	%f328, %f324;
	max.f32 	%f329, %f327, %f328;
	abs.f32 	%f330, %f322;
	abs.f32 	%f331, %f325;
	max.f32 	%f332, %f330, %f331;
	abs.f32 	%f333, %f323;
	abs.f32 	%f334, %f326;
	max.f32 	%f335, %f333, %f334;
	max.f32 	%f336, %f329, %f332;
	max.f32 	%f337, %f336, %f335;
	setp.neu.f32	%p23, %f321, 0f00000000;
	setp.neu.f32	%p24, %f322, 0f00000000;
	or.pred  	%p25, %p23, %p24;
	setp.neu.f32	%p26, %f323, 0f00000000;
	setp.neu.f32	%p27, %f324, 0f00000000;
	setp.neu.f32	%p28, %f325, 0f00000000;
	or.pred  	%p29, %p27, %p28;
	setp.neu.f32	%p30, %f326, 0f00000000;
	or.pred  	%p31, %p29, %p30;
	or.pred  	%p32, %p25, %p26;
	and.pred  	%p33, %p32, %p31;
	selp.f32	%f19, %f337, 0f00000000, %p33;
	abs.f32 	%f338, %f7;
	abs.f32 	%f339, %f9;
	setp.gt.f32	%p34, %f338, %f339;
	neg.f32 	%f340, %f8;
	neg.f32 	%f341, %f9;
	selp.f32	%f342, %f340, 0f00000000, %p34;
	selp.f32	%f343, %f7, %f341, %p34;
	selp.f32	%f344, 0f00000000, %f8, %p34;
	mul.f32 	%f345, %f343, %f343;
	fma.rn.f32 	%f346, %f342, %f342, %f345;
	fma.rn.f32 	%f347, %f344, %f344, %f346;
	sqrt.rn.f32 	%f348, %f347;
	rcp.rn.f32 	%f349, %f348;
	mul.f32 	%f20, %f342, %f349;
	mul.f32 	%f21, %f343, %f349;
	mul.f32 	%f22, %f344, %f349;
	ld.global.v2.u32 	{%r156, %r157}, [pixelID];
	cvt.u64.u32	%rd54, %r156;
	cvt.u64.u32	%rd55, %r157;
	mov.u64 	%rd59, rnd_seeds;
	cvta.global.u64 	%rd53, %rd59;
	// inline asm
	call (%rd52), _rt_buffer_get_64, (%rd53, %r113, %r114, %rd54, %rd55, %rd32, %rd32);
	// inline asm
	ld.global.u32 	%r489, [samples];
	mov.f32 	%f1628, 0f00000000;
	setp.lt.s32	%p35, %r489, 1;
	@%p35 bra 	BB0_4;

	cvt.rn.f32.s32	%f352, %r489;
	rcp.rn.f32 	%f23, %f352;
	ld.u32 	%r515, [%rd52];
	mul.f32 	%f24, %f10, 0f3456BF95;
	mul.f32 	%f25, %f11, 0f3456BF95;
	mul.f32 	%f26, %f12, 0f3456BF95;
	mul.f32 	%f353, %f7, %f21;
	mul.f32 	%f354, %f8, %f20;
	sub.f32 	%f27, %f354, %f353;
	mul.f32 	%f355, %f9, %f20;
	mul.f32 	%f356, %f7, %f22;
	sub.f32 	%f28, %f356, %f355;
	mul.f32 	%f357, %f8, %f22;
	mul.f32 	%f358, %f9, %f21;
	sub.f32 	%f29, %f358, %f357;
	mov.f32 	%f1628, 0f00000000;
	mov.u32 	%r490, 0;
	abs.f32 	%f359, %f25;
	abs.f32 	%f360, %f24;
	max.f32 	%f361, %f360, %f359;
	abs.f32 	%f362, %f26;
	max.f32 	%f363, %f361, %f362;
	mov.f32 	%f1629, %f1628;

BB0_6:
	setp.lt.s32	%p36, %r489, 1;
	@%p36 bra 	BB0_73;

	mov.u32 	%r492, 0;

BB0_8:
	cvt.rn.f32.s32	%f1621, %r490;
	mad.lo.s32 	%r162, %r515, 1664525, 1013904223;
	and.b32  	%r163, %r162, 16777215;
	cvt.rn.f32.u32	%f365, %r163;
	fma.rn.f32 	%f366, %f365, 0f33800000, %f1621;
	mul.f32 	%f367, %f23, %f366;
	mad.lo.s32 	%r11, %r162, 1664525, 1013904223;
	and.b32  	%r164, %r11, 16777215;
	cvt.rn.f32.u32	%f368, %r164;
	cvt.rn.f32.s32	%f369, %r492;
	fma.rn.f32 	%f370, %f368, 0f33800000, %f369;
	mul.f32 	%f371, %f23, %f370;
	sqrt.rn.f32 	%f36, %f367;
	mul.f32 	%f1636, %f371, 0f40C90FDB;
	abs.f32 	%f38, %f1636;
	setp.neu.f32	%p37, %f38, 0f7F800000;
	mov.f32 	%f1630, %f1636;
	@%p37 bra 	BB0_10;

	mov.f32 	%f372, 0f00000000;
	mul.rn.f32 	%f1630, %f1636, %f372;

BB0_10:
	mul.f32 	%f373, %f1630, 0f3F22F983;
	cvt.rni.s32.f32	%r503, %f373;
	cvt.rn.f32.s32	%f374, %r503;
	neg.f32 	%f375, %f374;
	mov.f32 	%f376, 0f3FC90FDA;
	fma.rn.f32 	%f377, %f375, %f376, %f1630;
	mov.f32 	%f378, 0f33A22168;
	fma.rn.f32 	%f379, %f375, %f378, %f377;
	mov.f32 	%f380, 0f27C234C5;
	fma.rn.f32 	%f1631, %f375, %f380, %f379;
	abs.f32 	%f381, %f1630;
	setp.leu.f32	%p38, %f381, 0f47CE4780;
	@%p38 bra 	BB0_21;

	add.u64 	%rd61, %SP, 8;
	cvta.to.local.u64 	%rd3, %rd61;
	mov.b32 	 %r13, %f1630;
	shr.u32 	%r14, %r13, 23;
	shl.b32 	%r167, %r13, 8;
	or.b32  	%r15, %r167, -2147483648;
	mov.u32 	%r494, 0;
	mov.u64 	%rd308, 0;
	mov.u64 	%rd307, %rd3;
	mov.u32 	%r495, %r494;

BB0_12:
	.pragma "nounroll";
	shl.b64 	%rd62, %rd308, 2;
	mov.u64 	%rd63, __cudart_i2opi_f;
	add.s64 	%rd64, %rd63, %rd62;
	ld.const.u32 	%r170, [%rd64];
	// inline asm
	{
	mad.lo.cc.u32   %r168, %r170, %r15, %r495;
	madc.hi.u32     %r495, %r170, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd307], %r168;
	add.s32 	%r494, %r494, 1;
	cvt.s64.s32	%rd308, %r494;
	mul.wide.s32 	%rd67, %r494, 4;
	add.s64 	%rd307, %rd3, %rd67;
	setp.ne.s32	%p39, %r494, 6;
	@%p39 bra 	BB0_12;

	and.b32  	%r173, %r14, 255;
	add.s32 	%r174, %r173, -128;
	shr.u32 	%r175, %r174, 5;
	and.b32  	%r20, %r13, -2147483648;
	cvta.to.local.u64 	%rd69, %rd61;
	st.local.u32 	[%rd69+24], %r495;
	mov.u32 	%r176, 6;
	sub.s32 	%r177, %r176, %r175;
	mul.wide.s32 	%rd70, %r177, 4;
	add.s64 	%rd8, %rd69, %rd70;
	ld.local.u32 	%r496, [%rd8];
	ld.local.u32 	%r497, [%rd8+-4];
	and.b32  	%r23, %r14, 31;
	setp.eq.s32	%p40, %r23, 0;
	@%p40 bra 	BB0_15;

	mov.u32 	%r178, 32;
	sub.s32 	%r179, %r178, %r23;
	shr.u32 	%r180, %r497, %r179;
	shl.b32 	%r181, %r496, %r23;
	add.s32 	%r496, %r180, %r181;
	ld.local.u32 	%r182, [%rd8+-8];
	shr.u32 	%r183, %r182, %r179;
	shl.b32 	%r184, %r497, %r23;
	add.s32 	%r497, %r183, %r184;

BB0_15:
	shr.u32 	%r185, %r497, 30;
	shl.b32 	%r186, %r496, 2;
	add.s32 	%r498, %r185, %r186;
	shl.b32 	%r29, %r497, 2;
	shr.u32 	%r187, %r498, 31;
	shr.u32 	%r188, %r496, 30;
	add.s32 	%r30, %r187, %r188;
	setp.eq.s32	%p41, %r187, 0;
	@%p41 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r499, %r20;
	mov.u32 	%r500, %r29;
	bra.uni 	BB0_18;

BB0_17:
	not.b32 	%r189, %r498;
	neg.s32 	%r500, %r29;
	setp.eq.s32	%p42, %r29, 0;
	selp.u32	%r190, 1, 0, %p42;
	add.s32 	%r498, %r190, %r189;
	xor.b32  	%r499, %r20, -2147483648;

BB0_18:
	clz.b32 	%r502, %r498;
	setp.eq.s32	%p43, %r502, 0;
	shl.b32 	%r191, %r498, %r502;
	mov.u32 	%r192, 32;
	sub.s32 	%r193, %r192, %r502;
	shr.u32 	%r194, %r500, %r193;
	add.s32 	%r195, %r194, %r191;
	selp.b32	%r38, %r498, %r195, %p43;
	mov.u32 	%r196, -921707870;
	mul.hi.u32 	%r501, %r38, %r196;
	setp.eq.s32	%p44, %r20, 0;
	neg.s32 	%r197, %r30;
	selp.b32	%r503, %r30, %r197, %p44;
	setp.lt.s32	%p45, %r501, 1;
	@%p45 bra 	BB0_20;

	mul.lo.s32 	%r198, %r38, -921707870;
	shr.u32 	%r199, %r198, 31;
	shl.b32 	%r200, %r501, 1;
	add.s32 	%r501, %r199, %r200;
	add.s32 	%r502, %r502, 1;

BB0_20:
	mov.u32 	%r201, 126;
	sub.s32 	%r202, %r201, %r502;
	shl.b32 	%r203, %r202, 23;
	add.s32 	%r204, %r501, 1;
	shr.u32 	%r205, %r204, 7;
	add.s32 	%r206, %r205, 1;
	shr.u32 	%r207, %r206, 1;
	add.s32 	%r208, %r207, %r203;
	or.b32  	%r209, %r208, %r499;
	mov.b32 	 %f1631, %r209;

BB0_21:
	mul.rn.f32 	%f44, %f1631, %f1631;
	add.s32 	%r46, %r503, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p46, %r47, 0;
	@%p46 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f384, 0f3C08839E;
	mov.f32 	%f385, 0fB94CA1F9;
	fma.rn.f32 	%f1632, %f385, %f44, %f384;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f382, 0fBAB6061A;
	mov.f32 	%f383, 0f37CCF5CE;
	fma.rn.f32 	%f1632, %f383, %f44, %f382;

BB0_24:
	@%p46 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f389, 0fBE2AAAA3;
	fma.rn.f32 	%f390, %f1632, %f44, %f389;
	mov.f32 	%f391, 0f00000000;
	fma.rn.f32 	%f1633, %f390, %f44, %f391;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f386, 0f3D2AAAA5;
	fma.rn.f32 	%f387, %f1632, %f44, %f386;
	mov.f32 	%f388, 0fBF000000;
	fma.rn.f32 	%f1633, %f387, %f44, %f388;

BB0_27:
	fma.rn.f32 	%f1634, %f1633, %f1631, %f1631;
	@%p46 bra 	BB0_29;

	mov.f32 	%f392, 0f3F800000;
	fma.rn.f32 	%f1634, %f1633, %f44, %f392;

BB0_29:
	and.b32  	%r210, %r46, 2;
	setp.eq.s32	%p49, %r210, 0;
	@%p49 bra 	BB0_31;

	mov.f32 	%f393, 0f00000000;
	mov.f32 	%f394, 0fBF800000;
	fma.rn.f32 	%f1634, %f1634, %f394, %f393;

BB0_31:
	@%p37 bra 	BB0_33;

	mov.f32 	%f395, 0f00000000;
	mul.rn.f32 	%f1636, %f1636, %f395;

BB0_33:
	mul.f32 	%f396, %f1636, 0f3F22F983;
	cvt.rni.s32.f32	%r513, %f396;
	cvt.rn.f32.s32	%f397, %r513;
	neg.f32 	%f398, %f397;
	fma.rn.f32 	%f400, %f398, %f376, %f1636;
	fma.rn.f32 	%f402, %f398, %f378, %f400;
	fma.rn.f32 	%f1637, %f398, %f380, %f402;
	abs.f32 	%f404, %f1636;
	setp.leu.f32	%p51, %f404, 0f47CE4780;
	@%p51 bra 	BB0_44;

	add.u64 	%rd72, %SP, 8;
	cvta.to.local.u64 	%rd9, %rd72;
	mov.b32 	 %r49, %f1636;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r213, %r49, 8;
	or.b32  	%r51, %r213, -2147483648;
	mov.u32 	%r504, 0;
	mov.u64 	%rd309, %rd9;
	mov.u64 	%rd310, %rd32;
	mov.u32 	%r505, %r504;

BB0_35:
	.pragma "nounroll";
	shl.b64 	%rd73, %rd310, 2;
	mov.u64 	%rd74, __cudart_i2opi_f;
	add.s64 	%rd75, %rd74, %rd73;
	ld.const.u32 	%r216, [%rd75];
	// inline asm
	{
	mad.lo.cc.u32   %r214, %r216, %r51, %r505;
	madc.hi.u32     %r505, %r216, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd309], %r214;
	add.s32 	%r504, %r504, 1;
	cvt.s64.s32	%rd310, %r504;
	mul.wide.s32 	%rd76, %r504, 4;
	add.s64 	%rd309, %rd9, %rd76;
	setp.ne.s32	%p52, %r504, 6;
	@%p52 bra 	BB0_35;

	and.b32  	%r219, %r50, 255;
	add.s32 	%r220, %r219, -128;
	shr.u32 	%r221, %r220, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd78, %rd72;
	st.local.u32 	[%rd78+24], %r505;
	mov.u32 	%r222, 6;
	sub.s32 	%r223, %r222, %r221;
	mul.wide.s32 	%rd79, %r223, 4;
	add.s64 	%rd15, %rd78, %rd79;
	ld.local.u32 	%r506, [%rd15];
	ld.local.u32 	%r507, [%rd15+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p53, %r59, 0;
	@%p53 bra 	BB0_38;

	mov.u32 	%r224, 32;
	sub.s32 	%r225, %r224, %r59;
	shr.u32 	%r226, %r507, %r225;
	shl.b32 	%r227, %r506, %r59;
	add.s32 	%r506, %r226, %r227;
	ld.local.u32 	%r228, [%rd15+-8];
	shr.u32 	%r229, %r228, %r225;
	shl.b32 	%r230, %r507, %r59;
	add.s32 	%r507, %r229, %r230;

BB0_38:
	shr.u32 	%r231, %r507, 30;
	shl.b32 	%r232, %r506, 2;
	add.s32 	%r508, %r231, %r232;
	shl.b32 	%r65, %r507, 2;
	shr.u32 	%r233, %r508, 31;
	shr.u32 	%r234, %r506, 30;
	add.s32 	%r66, %r233, %r234;
	setp.eq.s32	%p54, %r233, 0;
	@%p54 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r509, %r56;
	mov.u32 	%r510, %r65;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r235, %r508;
	neg.s32 	%r510, %r65;
	setp.eq.s32	%p55, %r65, 0;
	selp.u32	%r236, 1, 0, %p55;
	add.s32 	%r508, %r236, %r235;
	xor.b32  	%r509, %r56, -2147483648;

BB0_41:
	clz.b32 	%r512, %r508;
	setp.eq.s32	%p56, %r512, 0;
	shl.b32 	%r237, %r508, %r512;
	mov.u32 	%r238, 32;
	sub.s32 	%r239, %r238, %r512;
	shr.u32 	%r240, %r510, %r239;
	add.s32 	%r241, %r240, %r237;
	selp.b32	%r74, %r508, %r241, %p56;
	mov.u32 	%r242, -921707870;
	mul.hi.u32 	%r511, %r74, %r242;
	setp.eq.s32	%p57, %r56, 0;
	neg.s32 	%r243, %r66;
	selp.b32	%r513, %r66, %r243, %p57;
	setp.lt.s32	%p58, %r511, 1;
	@%p58 bra 	BB0_43;

	mul.lo.s32 	%r244, %r74, -921707870;
	shr.u32 	%r245, %r244, 31;
	shl.b32 	%r246, %r511, 1;
	add.s32 	%r511, %r245, %r246;
	add.s32 	%r512, %r512, 1;

BB0_43:
	mov.u32 	%r247, 126;
	sub.s32 	%r248, %r247, %r512;
	shl.b32 	%r249, %r248, 23;
	add.s32 	%r250, %r511, 1;
	shr.u32 	%r251, %r250, 7;
	add.s32 	%r252, %r251, 1;
	shr.u32 	%r253, %r252, 1;
	add.s32 	%r254, %r253, %r249;
	or.b32  	%r255, %r254, %r509;
	mov.b32 	 %f1637, %r255;

BB0_44:
	mul.rn.f32 	%f61, %f1637, %f1637;
	and.b32  	%r82, %r513, 1;
	setp.eq.s32	%p59, %r82, 0;
	@%p59 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f407, 0f3C08839E;
	mov.f32 	%f408, 0fB94CA1F9;
	fma.rn.f32 	%f1638, %f408, %f61, %f407;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f405, 0fBAB6061A;
	mov.f32 	%f406, 0f37CCF5CE;
	fma.rn.f32 	%f1638, %f406, %f61, %f405;

BB0_47:
	@%p59 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f412, 0fBE2AAAA3;
	fma.rn.f32 	%f413, %f1638, %f61, %f412;
	mov.f32 	%f414, 0f00000000;
	fma.rn.f32 	%f1639, %f413, %f61, %f414;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f409, 0f3D2AAAA5;
	fma.rn.f32 	%f410, %f1638, %f61, %f409;
	mov.f32 	%f411, 0fBF000000;
	fma.rn.f32 	%f1639, %f410, %f61, %f411;

BB0_50:
	fma.rn.f32 	%f1640, %f1639, %f1637, %f1637;
	@%p59 bra 	BB0_52;

	mov.f32 	%f415, 0f3F800000;
	fma.rn.f32 	%f1640, %f1639, %f61, %f415;

BB0_52:
	and.b32  	%r256, %r513, 2;
	setp.eq.s32	%p62, %r256, 0;
	@%p62 bra 	BB0_54;

	mov.f32 	%f416, 0f00000000;
	mov.f32 	%f417, 0fBF800000;
	fma.rn.f32 	%f1640, %f1640, %f417, %f416;

BB0_54:
	max.f32 	%f1622, %f363, %f289;
	mul.f32 	%f426, %f36, %f1634;
	add.u64 	%rd80, %SP, 4;
	cvta.to.local.u64 	%rd16, %rd80;
	mul.f32 	%f427, %f426, %f426;
	mov.f32 	%f428, 0f3F800000;
	sub.f32 	%f429, %f428, %f427;
	mul.f32 	%f430, %f36, %f1640;
	mul.f32 	%f431, %f430, %f430;
	sub.f32 	%f432, %f429, %f431;
	mov.f32 	%f433, 0f00000000;
	max.f32 	%f434, %f433, %f432;
	sqrt.rn.f32 	%f435, %f434;
	mul.f32 	%f436, %f20, %f430;
	mul.f32 	%f437, %f21, %f430;
	mul.f32 	%f438, %f22, %f430;
	fma.rn.f32 	%f439, %f29, %f426, %f436;
	fma.rn.f32 	%f440, %f28, %f426, %f437;
	fma.rn.f32 	%f441, %f27, %f426, %f438;
	fma.rn.f32 	%f442, %f7, %f435, %f439;
	fma.rn.f32 	%f443, %f8, %f435, %f440;
	fma.rn.f32 	%f444, %f9, %f435, %f441;
	add.f32 	%f445, %f7, %f442;
	add.f32 	%f446, %f8, %f443;
	add.f32 	%f447, %f9, %f444;
	ld.global.f32 	%f448, [shadowSpread];
	mul.f32 	%f449, %f448, %f445;
	mul.f32 	%f450, %f448, %f446;
	mul.f32 	%f451, %f448, %f447;
	sub.f32 	%f452, %f449, %f7;
	sub.f32 	%f453, %f450, %f8;
	sub.f32 	%f454, %f451, %f9;
	mul.f32 	%f455, %f453, %f453;
	fma.rn.f32 	%f456, %f452, %f452, %f455;
	fma.rn.f32 	%f457, %f454, %f454, %f456;
	sqrt.rn.f32 	%f458, %f457;
	rcp.rn.f32 	%f459, %f458;
	mul.f32 	%f73, %f459, %f452;
	mul.f32 	%f74, %f459, %f453;
	mul.f32 	%f75, %f459, %f454;
	ld.global.u32 	%r260, [imageEnabled];
	and.b32  	%r261, %r260, 32;
	setp.eq.s32	%p63, %r261, 0;
	selp.f32	%f460, 0f3F800000, 0f41200000, %p63;
	mul.f32 	%f424, %f460, %f1622;
	mad.lo.s32 	%r262, %r11, 1664525, 1013904223;
	and.b32  	%r263, %r262, 16777215;
	cvt.rn.f32.u32	%f461, %r263;
	mul.f32 	%f462, %f461, 0f33800000;
	fma.rn.f32 	%f463, %f462, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r83, %r262, 1664525, 1013904223;
	and.b32  	%r264, %r83, 16777215;
	cvt.rn.f32.u32	%f464, %r264;
	mul.f32 	%f465, %f464, 0f33800000;
	fma.rn.f32 	%f466, %f465, 0f40000000, 0fBF800000;
	mul.f32 	%f467, %f13, %f466;
	mul.f32 	%f468, %f14, %f466;
	mul.f32 	%f469, %f15, %f466;
	fma.rn.f32 	%f470, %f16, %f463, %f467;
	fma.rn.f32 	%f471, %f17, %f463, %f468;
	fma.rn.f32 	%f472, %f18, %f463, %f469;
	mul.f32 	%f473, %f471, %f471;
	fma.rn.f32 	%f474, %f470, %f470, %f473;
	fma.rn.f32 	%f475, %f472, %f472, %f474;
	sqrt.rn.f32 	%f476, %f475;
	rcp.rn.f32 	%f477, %f476;
	mul.f32 	%f478, %f470, %f477;
	mul.f32 	%f479, %f471, %f477;
	mul.f32 	%f480, %f472, %f477;
	mul.f32 	%f481, %f1624, %f480;
	mul.f32 	%f482, %f1625, %f479;
	sub.f32 	%f483, %f481, %f482;
	mul.f32 	%f484, %f1625, %f478;
	mul.f32 	%f485, %f1623, %f480;
	sub.f32 	%f486, %f484, %f485;
	mul.f32 	%f487, %f1623, %f479;
	mul.f32 	%f488, %f1624, %f478;
	sub.f32 	%f489, %f487, %f488;
	mul.f32 	%f490, %f478, 0f3E24A490;
	mul.f32 	%f491, %f479, 0f3E24A490;
	mul.f32 	%f492, %f480, 0f3E24A490;
	fma.rn.f32 	%f493, %f19, %f490, %f10;
	fma.rn.f32 	%f494, %f19, %f491, %f11;
	fma.rn.f32 	%f495, %f19, %f492, %f12;
	mul.f32 	%f496, %f483, 0fBECECEDE;
	mul.f32 	%f497, %f486, 0fBECECEDE;
	mul.f32 	%f498, %f489, 0fBECECEDE;
	fma.rn.f32 	%f77, %f19, %f496, %f493;
	fma.rn.f32 	%f78, %f19, %f497, %f494;
	fma.rn.f32 	%f79, %f19, %f498, %f495;
	sub.f32 	%f499, %f77, %f10;
	sub.f32 	%f500, %f78, %f11;
	sub.f32 	%f501, %f79, %f12;
	mul.f32 	%f502, %f500, %f500;
	fma.rn.f32 	%f503, %f499, %f499, %f502;
	fma.rn.f32 	%f504, %f501, %f501, %f503;
	sqrt.rn.f32 	%f425, %f504;
	rcp.rn.f32 	%f505, %f425;
	mul.f32 	%f421, %f505, %f499;
	mul.f32 	%f422, %f505, %f500;
	mul.f32 	%f423, %f505, %f501;
	mov.u32 	%r265, 1065353216;
	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r257, [root];
	mov.u32 	%r258, 1;
	// inline asm
	call _rt_trace_64, (%r257, %f10, %f11, %f12, %f421, %f422, %f423, %r258, %f424, %f425, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f506, [%rd16];
	mov.u16 	%rs175, 0;
	setp.neu.f32	%p64, %f506, 0f3F800000;
	@%p64 bra 	BB0_56;

	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r266, [root];
	mov.f32 	%f514, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r266, %f77, %f78, %f79, %f73, %f74, %f75, %r258, %f424, %f514, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f515, [%rd16];
	add.f32 	%f1629, %f1629, %f515;
	add.f32 	%f1628, %f1628, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_56:
	mad.lo.s32 	%r273, %r83, 1664525, 1013904223;
	and.b32  	%r274, %r273, 16777215;
	cvt.rn.f32.u32	%f524, %r274;
	mul.f32 	%f525, %f524, 0f33800000;
	fma.rn.f32 	%f526, %f525, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r84, %r273, 1664525, 1013904223;
	and.b32  	%r275, %r84, 16777215;
	cvt.rn.f32.u32	%f527, %r275;
	mul.f32 	%f528, %f527, 0f33800000;
	fma.rn.f32 	%f529, %f528, 0f40000000, 0fBF800000;
	mul.f32 	%f530, %f13, %f529;
	mul.f32 	%f531, %f14, %f529;
	mul.f32 	%f532, %f15, %f529;
	fma.rn.f32 	%f533, %f16, %f526, %f530;
	fma.rn.f32 	%f534, %f17, %f526, %f531;
	fma.rn.f32 	%f535, %f18, %f526, %f532;
	mul.f32 	%f536, %f534, %f534;
	fma.rn.f32 	%f537, %f533, %f533, %f536;
	fma.rn.f32 	%f538, %f535, %f535, %f537;
	sqrt.rn.f32 	%f539, %f538;
	rcp.rn.f32 	%f540, %f539;
	mul.f32 	%f541, %f533, %f540;
	mul.f32 	%f542, %f534, %f540;
	mul.f32 	%f543, %f535, %f540;
	mul.f32 	%f544, %f1624, %f543;
	mul.f32 	%f545, %f1625, %f542;
	sub.f32 	%f546, %f544, %f545;
	mul.f32 	%f547, %f1625, %f541;
	mul.f32 	%f548, %f1623, %f543;
	sub.f32 	%f549, %f547, %f548;
	mul.f32 	%f550, %f1623, %f542;
	mul.f32 	%f551, %f1624, %f541;
	sub.f32 	%f552, %f550, %f551;
	mul.f32 	%f553, %f541, 0fBE24A490;
	mul.f32 	%f554, %f542, 0fBE24A490;
	mul.f32 	%f555, %f543, 0fBE24A490;
	fma.rn.f32 	%f556, %f19, %f553, %f10;
	fma.rn.f32 	%f557, %f19, %f554, %f11;
	fma.rn.f32 	%f558, %f19, %f555, %f12;
	mul.f32 	%f559, %f546, 0f3ECACABC;
	mul.f32 	%f560, %f549, 0f3ECACABC;
	mul.f32 	%f561, %f552, 0f3ECACABC;
	fma.rn.f32 	%f84, %f19, %f559, %f556;
	fma.rn.f32 	%f85, %f19, %f560, %f557;
	fma.rn.f32 	%f86, %f19, %f561, %f558;
	sub.f32 	%f562, %f84, %f10;
	sub.f32 	%f563, %f85, %f11;
	sub.f32 	%f564, %f86, %f12;
	mul.f32 	%f565, %f563, %f563;
	fma.rn.f32 	%f566, %f562, %f562, %f565;
	fma.rn.f32 	%f567, %f564, %f564, %f566;
	sqrt.rn.f32 	%f523, %f567;
	rcp.rn.f32 	%f568, %f523;
	mul.f32 	%f519, %f568, %f562;
	mul.f32 	%f520, %f568, %f563;
	mul.f32 	%f521, %f568, %f564;
	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r270, [root];
	// inline asm
	call _rt_trace_64, (%r270, %f10, %f11, %f12, %f519, %f520, %f521, %r258, %f424, %f523, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f569, [%rd16];
	setp.neu.f32	%p65, %f569, 0f3F800000;
	@%p65 bra 	BB0_58;

	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r277, [root];
	mov.f32 	%f577, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r277, %f84, %f85, %f86, %f73, %f74, %f75, %r258, %f424, %f577, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f578, [%rd16];
	add.f32 	%f1629, %f1629, %f578;
	add.f32 	%f1628, %f1628, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_58:
	mad.lo.s32 	%r284, %r84, 1664525, 1013904223;
	and.b32  	%r285, %r284, 16777215;
	cvt.rn.f32.u32	%f587, %r285;
	mul.f32 	%f588, %f587, 0f33800000;
	fma.rn.f32 	%f589, %f588, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r85, %r284, 1664525, 1013904223;
	and.b32  	%r286, %r85, 16777215;
	cvt.rn.f32.u32	%f590, %r286;
	mul.f32 	%f591, %f590, 0f33800000;
	fma.rn.f32 	%f592, %f591, 0f40000000, 0fBF800000;
	mul.f32 	%f593, %f13, %f592;
	mul.f32 	%f594, %f14, %f592;
	mul.f32 	%f595, %f15, %f592;
	fma.rn.f32 	%f596, %f16, %f589, %f593;
	fma.rn.f32 	%f597, %f17, %f589, %f594;
	fma.rn.f32 	%f598, %f18, %f589, %f595;
	mul.f32 	%f599, %f597, %f597;
	fma.rn.f32 	%f600, %f596, %f596, %f599;
	fma.rn.f32 	%f601, %f598, %f598, %f600;
	sqrt.rn.f32 	%f602, %f601;
	rcp.rn.f32 	%f603, %f602;
	mul.f32 	%f604, %f596, %f603;
	mul.f32 	%f605, %f597, %f603;
	mul.f32 	%f606, %f598, %f603;
	mul.f32 	%f607, %f1624, %f606;
	mul.f32 	%f608, %f1625, %f605;
	sub.f32 	%f609, %f607, %f608;
	mul.f32 	%f610, %f1625, %f604;
	mul.f32 	%f611, %f1623, %f606;
	sub.f32 	%f612, %f610, %f611;
	mul.f32 	%f613, %f1623, %f605;
	mul.f32 	%f614, %f1624, %f604;
	sub.f32 	%f615, %f613, %f614;
	mul.f32 	%f616, %f604, 0f3F23A3A8;
	mul.f32 	%f617, %f605, 0f3F23A3A8;
	mul.f32 	%f618, %f606, 0f3F23A3A8;
	fma.rn.f32 	%f619, %f19, %f616, %f10;
	fma.rn.f32 	%f620, %f19, %f617, %f11;
	fma.rn.f32 	%f621, %f19, %f618, %f12;
	mul.f32 	%f622, %f609, 0f3E24A490;
	mul.f32 	%f623, %f612, 0f3E24A490;
	mul.f32 	%f624, %f615, 0f3E24A490;
	fma.rn.f32 	%f91, %f19, %f622, %f619;
	fma.rn.f32 	%f92, %f19, %f623, %f620;
	fma.rn.f32 	%f93, %f19, %f624, %f621;
	sub.f32 	%f625, %f91, %f10;
	sub.f32 	%f626, %f92, %f11;
	sub.f32 	%f627, %f93, %f12;
	mul.f32 	%f628, %f626, %f626;
	fma.rn.f32 	%f629, %f625, %f625, %f628;
	fma.rn.f32 	%f630, %f627, %f627, %f629;
	sqrt.rn.f32 	%f586, %f630;
	rcp.rn.f32 	%f631, %f586;
	mul.f32 	%f582, %f631, %f625;
	mul.f32 	%f583, %f631, %f626;
	mul.f32 	%f584, %f631, %f627;
	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r281, [root];
	// inline asm
	call _rt_trace_64, (%r281, %f10, %f11, %f12, %f582, %f583, %f584, %r258, %f424, %f586, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f632, [%rd16];
	setp.neu.f32	%p66, %f632, 0f3F800000;
	@%p66 bra 	BB0_60;

	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r288, [root];
	mov.f32 	%f640, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r288, %f91, %f92, %f93, %f73, %f74, %f75, %r258, %f424, %f640, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f641, [%rd16];
	add.f32 	%f1629, %f1629, %f641;
	add.f32 	%f1628, %f1628, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_60:
	mad.lo.s32 	%r295, %r85, 1664525, 1013904223;
	and.b32  	%r296, %r295, 16777215;
	cvt.rn.f32.u32	%f650, %r296;
	mul.f32 	%f651, %f650, 0f33800000;
	fma.rn.f32 	%f652, %f651, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r86, %r295, 1664525, 1013904223;
	and.b32  	%r297, %r86, 16777215;
	cvt.rn.f32.u32	%f653, %r297;
	mul.f32 	%f654, %f653, 0f33800000;
	fma.rn.f32 	%f655, %f654, 0f40000000, 0fBF800000;
	mul.f32 	%f656, %f13, %f655;
	mul.f32 	%f657, %f14, %f655;
	mul.f32 	%f658, %f15, %f655;
	fma.rn.f32 	%f659, %f16, %f652, %f656;
	fma.rn.f32 	%f660, %f17, %f652, %f657;
	fma.rn.f32 	%f661, %f18, %f652, %f658;
	mul.f32 	%f662, %f660, %f660;
	fma.rn.f32 	%f663, %f659, %f659, %f662;
	fma.rn.f32 	%f664, %f661, %f661, %f663;
	sqrt.rn.f32 	%f665, %f664;
	rcp.rn.f32 	%f666, %f665;
	mul.f32 	%f667, %f659, %f666;
	mul.f32 	%f668, %f660, %f666;
	mul.f32 	%f669, %f661, %f666;
	mul.f32 	%f670, %f1624, %f669;
	mul.f32 	%f671, %f1625, %f668;
	sub.f32 	%f672, %f670, %f671;
	mul.f32 	%f673, %f1625, %f667;
	mul.f32 	%f674, %f1623, %f669;
	sub.f32 	%f675, %f673, %f674;
	mul.f32 	%f676, %f1623, %f668;
	mul.f32 	%f677, %f1624, %f667;
	sub.f32 	%f678, %f676, %f677;
	mul.f32 	%f679, %f667, 0fBECECEDE;
	mul.f32 	%f680, %f668, 0fBECECEDE;
	mul.f32 	%f681, %f669, 0fBECECEDE;
	fma.rn.f32 	%f682, %f19, %f679, %f10;
	fma.rn.f32 	%f683, %f19, %f680, %f11;
	fma.rn.f32 	%f684, %f19, %f681, %f12;
	mul.f32 	%f685, %f672, 0fBF23A3A9;
	mul.f32 	%f686, %f675, 0fBF23A3A9;
	mul.f32 	%f687, %f678, 0fBF23A3A9;
	fma.rn.f32 	%f98, %f19, %f685, %f682;
	fma.rn.f32 	%f99, %f19, %f686, %f683;
	fma.rn.f32 	%f100, %f19, %f687, %f684;
	sub.f32 	%f688, %f98, %f10;
	sub.f32 	%f689, %f99, %f11;
	sub.f32 	%f690, %f100, %f12;
	mul.f32 	%f691, %f689, %f689;
	fma.rn.f32 	%f692, %f688, %f688, %f691;
	fma.rn.f32 	%f693, %f690, %f690, %f692;
	sqrt.rn.f32 	%f649, %f693;
	rcp.rn.f32 	%f694, %f649;
	mul.f32 	%f645, %f694, %f688;
	mul.f32 	%f646, %f694, %f689;
	mul.f32 	%f647, %f694, %f690;
	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r292, [root];
	// inline asm
	call _rt_trace_64, (%r292, %f10, %f11, %f12, %f645, %f646, %f647, %r258, %f424, %f649, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f695, [%rd16];
	setp.neu.f32	%p67, %f695, 0f3F800000;
	@%p67 bra 	BB0_62;

	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r299, [root];
	mov.f32 	%f703, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r299, %f98, %f99, %f100, %f73, %f74, %f75, %r258, %f424, %f703, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f704, [%rd16];
	add.f32 	%f1629, %f1629, %f704;
	add.f32 	%f1628, %f1628, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_62:
	mad.lo.s32 	%r306, %r86, 1664525, 1013904223;
	and.b32  	%r307, %r306, 16777215;
	cvt.rn.f32.u32	%f713, %r307;
	mul.f32 	%f714, %f713, 0f33800000;
	fma.rn.f32 	%f715, %f714, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r87, %r306, 1664525, 1013904223;
	and.b32  	%r308, %r87, 16777215;
	cvt.rn.f32.u32	%f716, %r308;
	mul.f32 	%f717, %f716, 0f33800000;
	fma.rn.f32 	%f718, %f717, 0f40000000, 0fBF800000;
	mul.f32 	%f719, %f13, %f718;
	mul.f32 	%f720, %f14, %f718;
	mul.f32 	%f721, %f15, %f718;
	fma.rn.f32 	%f722, %f16, %f715, %f719;
	fma.rn.f32 	%f723, %f17, %f715, %f720;
	fma.rn.f32 	%f724, %f18, %f715, %f721;
	mul.f32 	%f725, %f723, %f723;
	fma.rn.f32 	%f726, %f722, %f722, %f725;
	fma.rn.f32 	%f727, %f724, %f724, %f726;
	sqrt.rn.f32 	%f728, %f727;
	rcp.rn.f32 	%f729, %f728;
	mul.f32 	%f730, %f722, %f729;
	mul.f32 	%f731, %f723, %f729;
	mul.f32 	%f732, %f724, %f729;
	mul.f32 	%f733, %f1624, %f732;
	mul.f32 	%f734, %f1625, %f731;
	sub.f32 	%f735, %f733, %f734;
	mul.f32 	%f736, %f1625, %f730;
	mul.f32 	%f737, %f1623, %f732;
	sub.f32 	%f738, %f736, %f737;
	mul.f32 	%f739, %f1623, %f731;
	mul.f32 	%f740, %f1624, %f730;
	sub.f32 	%f741, %f739, %f740;
	mul.f32 	%f742, %f730, 0fBF23A3A9;
	mul.f32 	%f743, %f731, 0fBF23A3A9;
	mul.f32 	%f744, %f732, 0fBF23A3A9;
	fma.rn.f32 	%f745, %f19, %f742, %f10;
	fma.rn.f32 	%f746, %f19, %f743, %f11;
	fma.rn.f32 	%f747, %f19, %f744, %f12;
	mul.f32 	%f748, %f735, 0f3F23A3A8;
	mul.f32 	%f749, %f738, 0f3F23A3A8;
	mul.f32 	%f750, %f741, 0f3F23A3A8;
	fma.rn.f32 	%f105, %f19, %f748, %f745;
	fma.rn.f32 	%f106, %f19, %f749, %f746;
	fma.rn.f32 	%f107, %f19, %f750, %f747;
	sub.f32 	%f751, %f105, %f10;
	sub.f32 	%f752, %f106, %f11;
	sub.f32 	%f753, %f107, %f12;
	mul.f32 	%f754, %f752, %f752;
	fma.rn.f32 	%f755, %f751, %f751, %f754;
	fma.rn.f32 	%f756, %f753, %f753, %f755;
	sqrt.rn.f32 	%f712, %f756;
	rcp.rn.f32 	%f757, %f712;
	mul.f32 	%f708, %f757, %f751;
	mul.f32 	%f709, %f757, %f752;
	mul.f32 	%f710, %f757, %f753;
	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r303, [root];
	// inline asm
	call _rt_trace_64, (%r303, %f10, %f11, %f12, %f708, %f709, %f710, %r258, %f424, %f712, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f758, [%rd16];
	setp.neu.f32	%p68, %f758, 0f3F800000;
	@%p68 bra 	BB0_64;

	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r310, [root];
	mov.f32 	%f766, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r310, %f105, %f106, %f107, %f73, %f74, %f75, %r258, %f424, %f766, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f767, [%rd16];
	add.f32 	%f1629, %f1629, %f767;
	add.f32 	%f1628, %f1628, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_64:
	mad.lo.s32 	%r317, %r87, 1664525, 1013904223;
	and.b32  	%r318, %r317, 16777215;
	cvt.rn.f32.u32	%f776, %r318;
	mul.f32 	%f777, %f776, 0f33800000;
	fma.rn.f32 	%f778, %f777, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r88, %r317, 1664525, 1013904223;
	and.b32  	%r319, %r88, 16777215;
	cvt.rn.f32.u32	%f779, %r319;
	mul.f32 	%f780, %f779, 0f33800000;
	fma.rn.f32 	%f781, %f780, 0f40000000, 0fBF800000;
	mul.f32 	%f782, %f13, %f781;
	mul.f32 	%f783, %f14, %f781;
	mul.f32 	%f784, %f15, %f781;
	fma.rn.f32 	%f785, %f16, %f778, %f782;
	fma.rn.f32 	%f786, %f17, %f778, %f783;
	fma.rn.f32 	%f787, %f18, %f778, %f784;
	mul.f32 	%f788, %f786, %f786;
	fma.rn.f32 	%f789, %f785, %f785, %f788;
	fma.rn.f32 	%f790, %f787, %f787, %f789;
	sqrt.rn.f32 	%f791, %f790;
	rcp.rn.f32 	%f792, %f791;
	mul.f32 	%f793, %f785, %f792;
	mul.f32 	%f794, %f786, %f792;
	mul.f32 	%f795, %f787, %f792;
	mul.f32 	%f796, %f1624, %f795;
	mul.f32 	%f797, %f1625, %f794;
	sub.f32 	%f798, %f796, %f797;
	mul.f32 	%f799, %f1625, %f793;
	mul.f32 	%f800, %f1623, %f795;
	sub.f32 	%f801, %f799, %f800;
	mul.f32 	%f802, %f1623, %f794;
	mul.f32 	%f803, %f1624, %f793;
	sub.f32 	%f804, %f802, %f803;
	mul.f32 	%f805, %f793, 0fBF61E1E3;
	mul.f32 	%f806, %f794, 0fBF61E1E3;
	mul.f32 	%f807, %f795, 0fBF61E1E3;
	fma.rn.f32 	%f808, %f19, %f805, %f10;
	fma.rn.f32 	%f809, %f19, %f806, %f11;
	fma.rn.f32 	%f810, %f19, %f807, %f12;
	mul.f32 	%f811, %f798, 0fBE24A490;
	mul.f32 	%f812, %f801, 0fBE24A490;
	mul.f32 	%f813, %f804, 0fBE24A490;
	fma.rn.f32 	%f112, %f19, %f811, %f808;
	fma.rn.f32 	%f113, %f19, %f812, %f809;
	fma.rn.f32 	%f114, %f19, %f813, %f810;
	sub.f32 	%f814, %f112, %f10;
	sub.f32 	%f815, %f113, %f11;
	sub.f32 	%f816, %f114, %f12;
	mul.f32 	%f817, %f815, %f815;
	fma.rn.f32 	%f818, %f814, %f814, %f817;
	fma.rn.f32 	%f819, %f816, %f816, %f818;
	sqrt.rn.f32 	%f775, %f819;
	rcp.rn.f32 	%f820, %f775;
	mul.f32 	%f771, %f820, %f814;
	mul.f32 	%f772, %f820, %f815;
	mul.f32 	%f773, %f820, %f816;
	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r314, [root];
	// inline asm
	call _rt_trace_64, (%r314, %f10, %f11, %f12, %f771, %f772, %f773, %r258, %f424, %f775, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f821, [%rd16];
	setp.neu.f32	%p69, %f821, 0f3F800000;
	@%p69 bra 	BB0_66;

	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r321, [root];
	mov.f32 	%f829, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r321, %f112, %f113, %f114, %f73, %f74, %f75, %r258, %f424, %f829, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f830, [%rd16];
	add.f32 	%f1629, %f1629, %f830;
	add.f32 	%f1628, %f1628, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_66:
	mad.lo.s32 	%r328, %r88, 1664525, 1013904223;
	and.b32  	%r329, %r328, 16777215;
	cvt.rn.f32.u32	%f839, %r329;
	mul.f32 	%f840, %f839, 0f33800000;
	fma.rn.f32 	%f841, %f840, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r89, %r328, 1664525, 1013904223;
	and.b32  	%r330, %r89, 16777215;
	cvt.rn.f32.u32	%f842, %r330;
	mul.f32 	%f843, %f842, 0f33800000;
	fma.rn.f32 	%f844, %f843, 0f40000000, 0fBF800000;
	mul.f32 	%f845, %f13, %f844;
	mul.f32 	%f846, %f14, %f844;
	mul.f32 	%f847, %f15, %f844;
	fma.rn.f32 	%f848, %f16, %f841, %f845;
	fma.rn.f32 	%f849, %f17, %f841, %f846;
	fma.rn.f32 	%f850, %f18, %f841, %f847;
	mul.f32 	%f851, %f849, %f849;
	fma.rn.f32 	%f852, %f848, %f848, %f851;
	fma.rn.f32 	%f853, %f850, %f850, %f852;
	sqrt.rn.f32 	%f854, %f853;
	rcp.rn.f32 	%f855, %f854;
	mul.f32 	%f856, %f848, %f855;
	mul.f32 	%f857, %f849, %f855;
	mul.f32 	%f858, %f850, %f855;
	mul.f32 	%f859, %f1624, %f858;
	mul.f32 	%f860, %f1625, %f857;
	sub.f32 	%f861, %f859, %f860;
	mul.f32 	%f862, %f1625, %f856;
	mul.f32 	%f863, %f1623, %f858;
	sub.f32 	%f864, %f862, %f863;
	mul.f32 	%f865, %f1623, %f857;
	mul.f32 	%f866, %f1624, %f856;
	sub.f32 	%f867, %f865, %f866;
	mul.f32 	%f868, %f856, 0f3ECACABC;
	mul.f32 	%f869, %f857, 0f3ECACABC;
	mul.f32 	%f870, %f858, 0f3ECACABC;
	fma.rn.f32 	%f871, %f19, %f868, %f10;
	fma.rn.f32 	%f872, %f19, %f869, %f11;
	fma.rn.f32 	%f873, %f19, %f870, %f12;
	mul.f32 	%f874, %f861, 0f3F61E1D2;
	mul.f32 	%f875, %f864, 0f3F61E1D2;
	mul.f32 	%f876, %f867, 0f3F61E1D2;
	fma.rn.f32 	%f119, %f19, %f874, %f871;
	fma.rn.f32 	%f120, %f19, %f875, %f872;
	fma.rn.f32 	%f121, %f19, %f876, %f873;
	sub.f32 	%f877, %f119, %f10;
	sub.f32 	%f878, %f120, %f11;
	sub.f32 	%f879, %f121, %f12;
	mul.f32 	%f880, %f878, %f878;
	fma.rn.f32 	%f881, %f877, %f877, %f880;
	fma.rn.f32 	%f882, %f879, %f879, %f881;
	sqrt.rn.f32 	%f838, %f882;
	rcp.rn.f32 	%f883, %f838;
	mul.f32 	%f834, %f883, %f877;
	mul.f32 	%f835, %f883, %f878;
	mul.f32 	%f836, %f883, %f879;
	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r325, [root];
	// inline asm
	call _rt_trace_64, (%r325, %f10, %f11, %f12, %f834, %f835, %f836, %r258, %f424, %f838, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f884, [%rd16];
	setp.neu.f32	%p70, %f884, 0f3F800000;
	@%p70 bra 	BB0_68;

	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r332, [root];
	mov.f32 	%f892, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r332, %f119, %f120, %f121, %f73, %f74, %f75, %r258, %f424, %f892, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f893, [%rd16];
	add.f32 	%f1629, %f1629, %f893;
	add.f32 	%f1628, %f1628, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_68:
	mad.lo.s32 	%r339, %r89, 1664525, 1013904223;
	and.b32  	%r340, %r339, 16777215;
	cvt.rn.f32.u32	%f902, %r340;
	mul.f32 	%f903, %f902, 0f33800000;
	fma.rn.f32 	%f904, %f903, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r515, %r339, 1664525, 1013904223;
	and.b32  	%r341, %r515, 16777215;
	cvt.rn.f32.u32	%f905, %r341;
	mul.f32 	%f906, %f905, 0f33800000;
	fma.rn.f32 	%f907, %f906, 0f40000000, 0fBF800000;
	mul.f32 	%f908, %f13, %f907;
	mul.f32 	%f909, %f14, %f907;
	mul.f32 	%f910, %f15, %f907;
	fma.rn.f32 	%f911, %f16, %f904, %f908;
	fma.rn.f32 	%f912, %f17, %f904, %f909;
	fma.rn.f32 	%f913, %f18, %f904, %f910;
	mul.f32 	%f914, %f912, %f912;
	fma.rn.f32 	%f915, %f911, %f911, %f914;
	fma.rn.f32 	%f916, %f913, %f913, %f915;
	sqrt.rn.f32 	%f917, %f916;
	rcp.rn.f32 	%f918, %f917;
	mul.f32 	%f919, %f911, %f918;
	mul.f32 	%f920, %f912, %f918;
	mul.f32 	%f921, %f913, %f918;
	mul.f32 	%f922, %f1624, %f921;
	mul.f32 	%f923, %f1625, %f920;
	sub.f32 	%f924, %f922, %f923;
	mul.f32 	%f925, %f1625, %f919;
	mul.f32 	%f926, %f1623, %f921;
	sub.f32 	%f927, %f925, %f926;
	mul.f32 	%f928, %f1623, %f920;
	mul.f32 	%f929, %f1624, %f919;
	sub.f32 	%f930, %f928, %f929;
	mul.f32 	%f931, %f919, 0f3F61E1D2;
	mul.f32 	%f932, %f920, 0f3F61E1D2;
	mul.f32 	%f933, %f921, 0f3F61E1D2;
	fma.rn.f32 	%f934, %f19, %f931, %f10;
	fma.rn.f32 	%f935, %f19, %f932, %f11;
	fma.rn.f32 	%f936, %f19, %f933, %f12;
	mul.f32 	%f937, %f924, 0fBF61E1E3;
	mul.f32 	%f938, %f927, 0fBF61E1E3;
	mul.f32 	%f939, %f930, 0fBF61E1E3;
	fma.rn.f32 	%f126, %f19, %f937, %f934;
	fma.rn.f32 	%f127, %f19, %f938, %f935;
	fma.rn.f32 	%f128, %f19, %f939, %f936;
	sub.f32 	%f940, %f126, %f10;
	sub.f32 	%f941, %f127, %f11;
	sub.f32 	%f942, %f128, %f12;
	mul.f32 	%f943, %f941, %f941;
	fma.rn.f32 	%f944, %f940, %f940, %f943;
	fma.rn.f32 	%f945, %f942, %f942, %f944;
	sqrt.rn.f32 	%f901, %f945;
	rcp.rn.f32 	%f946, %f901;
	mul.f32 	%f897, %f946, %f940;
	mul.f32 	%f898, %f946, %f941;
	mul.f32 	%f899, %f946, %f942;
	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r336, [root];
	// inline asm
	call _rt_trace_64, (%r336, %f10, %f11, %f12, %f897, %f898, %f899, %r258, %f424, %f901, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f947, [%rd16];
	setp.neu.f32	%p71, %f947, 0f3F800000;
	@%p71 bra 	BB0_70;

	st.local.u32 	[%rd16], %r265;
	ld.global.u32 	%r343, [root];
	mov.f32 	%f955, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r343, %f126, %f127, %f128, %f73, %f74, %f75, %r258, %f424, %f955, %rd80, %r114);
	// inline asm
	ld.local.f32 	%f956, [%rd16];
	add.f32 	%f1629, %f1629, %f956;
	add.f32 	%f1628, %f1628, 0f3F800000;
	mov.u16 	%rs175, 1;

BB0_70:
	setp.ne.s16	%p72, %rs175, 0;
	@%p72 bra 	BB0_72;

	add.u64 	%rd96, %SP, 0;
	cvta.to.local.u64 	%rd97, %rd96;
	st.local.u32 	[%rd97], %r265;
	ld.global.u32 	%r347, [root];
	mov.f32 	%f964, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r347, %f10, %f11, %f12, %f73, %f74, %f75, %r258, %f424, %f964, %rd96, %r114);
	// inline asm
	ld.local.f32 	%f965, [%rd97];
	add.f32 	%f1629, %f1629, %f965;
	add.f32 	%f1628, %f1628, 0f3F800000;

BB0_72:
	ld.global.u32 	%r489, [samples];
	add.s32 	%r492, %r492, 1;
	setp.lt.s32	%p73, %r492, %r489;
	@%p73 bra 	BB0_8;

BB0_73:
	add.s32 	%r490, %r490, 1;
	setp.lt.s32	%p74, %r490, %r489;
	@%p74 bra 	BB0_6;
	bra.uni 	BB0_74;

BB0_4:
	mov.f32 	%f1629, %f1628;

BB0_74:
	mul.f32 	%f967, %f1625, %f9;
	mul.f32 	%f968, %f1624, %f8;
	neg.f32 	%f969, %f968;
	mul.f32 	%f970, %f1623, %f7;
	sub.f32 	%f971, %f969, %f970;
	sub.f32 	%f141, %f971, %f967;
	setp.eq.s32	%p75, %r489, 0;
	mov.f32 	%f1664, 0f3F800000;
	@%p75 bra 	BB0_76;

	mov.f32 	%f972, 0f3F800000;
	max.f32 	%f973, %f1628, %f972;
	div.rn.f32 	%f1664, %f1629, %f973;

BB0_76:
	ld.global.f32 	%f976, [directColor];
	mul.f32 	%f144, %f1664, %f976;
	ld.global.f32 	%f977, [directColor+4];
	mul.f32 	%f145, %f1664, %f977;
	ld.global.f32 	%f978, [directColor+8];
	mul.f32 	%f146, %f1664, %f978;
	cvt.sat.f32.f32	%f979, %f141;
	mul.f32 	%f147, %f144, %f979;
	mul.f32 	%f148, %f145, %f979;
	mul.f32 	%f149, %f146, %f979;
	fma.rn.f32 	%f980, %f141, 0f3F000000, 0f3F000000;
	cvt.sat.f32.f32	%f981, %f980;
	add.f32 	%f150, %f981, %f981;
	mov.f32 	%f982, 0f41200000;
	cvt.rzi.f32.f32	%f983, %f982;
	add.f32 	%f984, %f983, %f983;
	mov.f32 	%f985, 0f41A00000;
	sub.f32 	%f986, %f985, %f984;
	abs.f32 	%f151, %f986;
	abs.f32 	%f152, %f150;
	setp.lt.f32	%p76, %f152, 0f00800000;
	mul.f32 	%f987, %f152, 0f4B800000;
	selp.f32	%f988, 0fC3170000, 0fC2FE0000, %p76;
	selp.f32	%f989, %f987, %f152, %p76;
	mov.b32 	 %r351, %f989;
	and.b32  	%r352, %r351, 8388607;
	or.b32  	%r353, %r352, 1065353216;
	mov.b32 	 %f990, %r353;
	shr.u32 	%r354, %r351, 23;
	cvt.rn.f32.u32	%f991, %r354;
	add.f32 	%f992, %f988, %f991;
	setp.gt.f32	%p77, %f990, 0f3FB504F3;
	mul.f32 	%f993, %f990, 0f3F000000;
	add.f32 	%f994, %f992, 0f3F800000;
	selp.f32	%f995, %f993, %f990, %p77;
	selp.f32	%f996, %f994, %f992, %p77;
	add.f32 	%f997, %f995, 0fBF800000;
	add.f32 	%f975, %f995, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f974,%f975;
	// inline asm
	add.f32 	%f998, %f997, %f997;
	mul.f32 	%f999, %f974, %f998;
	mul.f32 	%f1000, %f999, %f999;
	mov.f32 	%f1001, 0f3C4CAF63;
	mov.f32 	%f1002, 0f3B18F0FE;
	fma.rn.f32 	%f1003, %f1002, %f1000, %f1001;
	mov.f32 	%f1004, 0f3DAAAABD;
	fma.rn.f32 	%f1005, %f1003, %f1000, %f1004;
	mul.rn.f32 	%f1006, %f1005, %f1000;
	mul.rn.f32 	%f1007, %f1006, %f999;
	sub.f32 	%f1008, %f997, %f999;
	neg.f32 	%f1009, %f999;
	add.f32 	%f1010, %f1008, %f1008;
	fma.rn.f32 	%f1011, %f1009, %f997, %f1010;
	mul.rn.f32 	%f1012, %f974, %f1011;
	add.f32 	%f1013, %f1007, %f999;
	sub.f32 	%f1014, %f999, %f1013;
	add.f32 	%f1015, %f1007, %f1014;
	add.f32 	%f1016, %f1012, %f1015;
	add.f32 	%f1017, %f1013, %f1016;
	sub.f32 	%f1018, %f1013, %f1017;
	add.f32 	%f1019, %f1016, %f1018;
	mov.f32 	%f1020, 0f3F317200;
	mul.rn.f32 	%f1021, %f996, %f1020;
	mov.f32 	%f1022, 0f35BFBE8E;
	mul.rn.f32 	%f1023, %f996, %f1022;
	add.f32 	%f1024, %f1021, %f1017;
	sub.f32 	%f1025, %f1021, %f1024;
	add.f32 	%f1026, %f1017, %f1025;
	add.f32 	%f1027, %f1019, %f1026;
	add.f32 	%f1028, %f1023, %f1027;
	add.f32 	%f1029, %f1024, %f1028;
	sub.f32 	%f1030, %f1024, %f1029;
	add.f32 	%f1031, %f1028, %f1030;
	mul.rn.f32 	%f1032, %f985, %f1029;
	neg.f32 	%f1033, %f1032;
	fma.rn.f32 	%f1034, %f985, %f1029, %f1033;
	fma.rn.f32 	%f1035, %f985, %f1031, %f1034;
	mov.f32 	%f1686, 0f00000000;
	fma.rn.f32 	%f1037, %f1686, %f1029, %f1035;
	add.rn.f32 	%f1038, %f1032, %f1037;
	neg.f32 	%f1039, %f1038;
	add.rn.f32 	%f1040, %f1032, %f1039;
	add.rn.f32 	%f1041, %f1040, %f1037;
	mov.b32 	 %r355, %f1038;
	setp.eq.s32	%p78, %r355, 1118925336;
	add.s32 	%r356, %r355, -1;
	mov.b32 	 %f1042, %r356;
	add.f32 	%f1043, %f1041, 0f37000000;
	selp.f32	%f1044, %f1042, %f1038, %p78;
	selp.f32	%f153, %f1043, %f1041, %p78;
	mul.f32 	%f1045, %f1044, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1046, %f1045;
	mov.f32 	%f1047, 0fBF317200;
	fma.rn.f32 	%f1048, %f1046, %f1047, %f1044;
	mov.f32 	%f1049, 0fB5BFBE8E;
	fma.rn.f32 	%f1050, %f1046, %f1049, %f1048;
	mul.f32 	%f1051, %f1050, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1052, %f1051;
	add.f32 	%f1053, %f1046, 0f00000000;
	ex2.approx.f32 	%f1054, %f1053;
	mul.f32 	%f1055, %f1052, %f1054;
	setp.lt.f32	%p79, %f1044, 0fC2D20000;
	selp.f32	%f1056, 0f00000000, %f1055, %p79;
	setp.gt.f32	%p80, %f1044, 0f42D20000;
	selp.f32	%f1665, 0f7F800000, %f1056, %p80;
	setp.eq.f32	%p81, %f1665, 0f7F800000;
	@%p81 bra 	BB0_78;

	fma.rn.f32 	%f1665, %f1665, %f153, %f1665;

BB0_78:
	setp.lt.f32	%p82, %f150, 0f00000000;
	setp.eq.f32	%p83, %f151, 0f3F800000;
	and.pred  	%p1, %p82, %p83;
	mov.b32 	 %r357, %f1665;
	xor.b32  	%r358, %r357, -2147483648;
	mov.b32 	 %f1057, %r358;
	selp.f32	%f1667, %f1057, %f1665, %p1;
	setp.eq.f32	%p84, %f150, 0f00000000;
	@%p84 bra 	BB0_81;
	bra.uni 	BB0_79;

BB0_81:
	add.f32 	%f1060, %f150, %f150;
	selp.f32	%f1667, %f1060, 0f00000000, %p83;
	bra.uni 	BB0_82;

BB0_79:
	setp.geu.f32	%p85, %f150, 0f00000000;
	@%p85 bra 	BB0_82;

	cvt.rzi.f32.f32	%f1059, %f985;
	setp.neu.f32	%p86, %f1059, 0f41A00000;
	selp.f32	%f1667, 0f7FFFFFFF, %f1667, %p86;

BB0_82:
	add.f32 	%f1061, %f152, 0f41A00000;
	mov.b32 	 %r359, %f1061;
	setp.lt.s32	%p88, %r359, 2139095040;
	@%p88 bra 	BB0_87;

	setp.gtu.f32	%p89, %f152, 0f7F800000;
	@%p89 bra 	BB0_86;
	bra.uni 	BB0_84;

BB0_86:
	add.f32 	%f1667, %f150, 0f41A00000;
	bra.uni 	BB0_87;

BB0_84:
	setp.neu.f32	%p90, %f152, 0f7F800000;
	@%p90 bra 	BB0_87;

	selp.f32	%f1667, 0fFF800000, 0f7F800000, %p1;

BB0_87:
	setp.eq.f32	%p91, %f150, 0f3F800000;
	selp.f32	%f1062, 0f3F800000, %f1667, %p91;
	cvt.sat.f32.f32	%f1063, %f1062;
	mul.f32 	%f164, %f144, %f1063;
	mul.f32 	%f165, %f145, %f1063;
	mul.f32 	%f166, %f146, %f1063;
	ld.global.u32 	%r518, [imageEnabled];
	and.b32  	%r360, %r518, 8;
	setp.eq.s32	%p92, %r360, 0;
	@%p92 bra 	BB0_100;

	cvt.u64.u32	%rd100, %r2;
	cvt.u64.u32	%rd101, %r3;
	mov.u64 	%rd104, image_Mask;
	cvta.global.u64 	%rd99, %rd104;
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd99, %r113, %r113, %rd100, %rd101, %rd32, %rd32);
	// inline asm
	mov.f32 	%f1066, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f1067, %f1066;
	fma.rn.f32 	%f1068, %f1067, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f167, %f1068;
	abs.f32 	%f168, %f1664;
	setp.lt.f32	%p93, %f168, 0f00800000;
	mul.f32 	%f1069, %f168, 0f4B800000;
	selp.f32	%f1070, 0fC3170000, 0fC2FE0000, %p93;
	selp.f32	%f1071, %f1069, %f168, %p93;
	mov.b32 	 %r363, %f1071;
	and.b32  	%r364, %r363, 8388607;
	or.b32  	%r365, %r364, 1065353216;
	mov.b32 	 %f1072, %r365;
	shr.u32 	%r366, %r363, 23;
	cvt.rn.f32.u32	%f1073, %r366;
	add.f32 	%f1074, %f1070, %f1073;
	setp.gt.f32	%p94, %f1072, 0f3FB504F3;
	mul.f32 	%f1075, %f1072, 0f3F000000;
	add.f32 	%f1076, %f1074, 0f3F800000;
	selp.f32	%f1077, %f1075, %f1072, %p94;
	selp.f32	%f1078, %f1076, %f1074, %p94;
	add.f32 	%f1079, %f1077, 0fBF800000;
	add.f32 	%f1065, %f1077, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1064,%f1065;
	// inline asm
	add.f32 	%f1080, %f1079, %f1079;
	mul.f32 	%f1081, %f1064, %f1080;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1085, %f1002, %f1082, %f1001;
	fma.rn.f32 	%f1087, %f1085, %f1082, %f1004;
	mul.rn.f32 	%f1088, %f1087, %f1082;
	mul.rn.f32 	%f1089, %f1088, %f1081;
	sub.f32 	%f1090, %f1079, %f1081;
	neg.f32 	%f1091, %f1081;
	add.f32 	%f1092, %f1090, %f1090;
	fma.rn.f32 	%f1093, %f1091, %f1079, %f1092;
	mul.rn.f32 	%f1094, %f1064, %f1093;
	add.f32 	%f1095, %f1089, %f1081;
	sub.f32 	%f1096, %f1081, %f1095;
	add.f32 	%f1097, %f1089, %f1096;
	add.f32 	%f1098, %f1094, %f1097;
	add.f32 	%f1099, %f1095, %f1098;
	sub.f32 	%f1100, %f1095, %f1099;
	add.f32 	%f1101, %f1098, %f1100;
	mul.rn.f32 	%f1103, %f1078, %f1020;
	mul.rn.f32 	%f1105, %f1078, %f1022;
	add.f32 	%f1106, %f1103, %f1099;
	sub.f32 	%f1107, %f1103, %f1106;
	add.f32 	%f1108, %f1099, %f1107;
	add.f32 	%f1109, %f1101, %f1108;
	add.f32 	%f1110, %f1105, %f1109;
	add.f32 	%f1111, %f1106, %f1110;
	sub.f32 	%f1112, %f1106, %f1111;
	add.f32 	%f1113, %f1110, %f1112;
	mov.f32 	%f1114, 0f3EE8BA2E;
	mul.rn.f32 	%f1115, %f1114, %f1111;
	neg.f32 	%f1116, %f1115;
	fma.rn.f32 	%f1117, %f1114, %f1111, %f1116;
	fma.rn.f32 	%f1118, %f1114, %f1113, %f1117;
	fma.rn.f32 	%f1120, %f1686, %f1111, %f1118;
	add.rn.f32 	%f1121, %f1115, %f1120;
	neg.f32 	%f1122, %f1121;
	add.rn.f32 	%f1123, %f1115, %f1122;
	add.rn.f32 	%f1124, %f1123, %f1120;
	mov.b32 	 %r367, %f1121;
	setp.eq.s32	%p95, %r367, 1118925336;
	add.s32 	%r368, %r367, -1;
	mov.b32 	 %f1125, %r368;
	add.f32 	%f1126, %f1124, 0f37000000;
	selp.f32	%f1127, %f1125, %f1121, %p95;
	selp.f32	%f169, %f1126, %f1124, %p95;
	mul.f32 	%f1128, %f1127, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1129, %f1128;
	fma.rn.f32 	%f1131, %f1129, %f1047, %f1127;
	fma.rn.f32 	%f1133, %f1129, %f1049, %f1131;
	mul.f32 	%f1134, %f1133, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1135, %f1134;
	add.f32 	%f1136, %f1129, 0f00000000;
	ex2.approx.f32 	%f1137, %f1136;
	mul.f32 	%f1138, %f1135, %f1137;
	setp.lt.f32	%p96, %f1127, 0fC2D20000;
	selp.f32	%f1139, 0f00000000, %f1138, %p96;
	setp.gt.f32	%p97, %f1127, 0f42D20000;
	selp.f32	%f1668, 0f7F800000, %f1139, %p97;
	setp.eq.f32	%p98, %f1668, 0f7F800000;
	@%p98 bra 	BB0_90;

	fma.rn.f32 	%f1668, %f1668, %f169, %f1668;

BB0_90:
	setp.lt.f32	%p99, %f1664, 0f00000000;
	setp.eq.f32	%p100, %f167, 0f3F800000;
	and.pred  	%p2, %p99, %p100;
	mov.b32 	 %r369, %f1668;
	xor.b32  	%r370, %r369, -2147483648;
	mov.b32 	 %f1140, %r370;
	selp.f32	%f1670, %f1140, %f1668, %p2;
	setp.eq.f32	%p101, %f1664, 0f00000000;
	@%p101 bra 	BB0_93;
	bra.uni 	BB0_91;

BB0_93:
	add.f32 	%f1143, %f1664, %f1664;
	selp.f32	%f1670, %f1143, 0f00000000, %p100;
	bra.uni 	BB0_94;

BB0_161:
	mov.u64 	%rd246, image_HDR;
	cvta.global.u64 	%rd241, %rd246;
	mov.u32 	%r467, 8;
	mov.u64 	%rd245, 0;
	// inline asm
	call (%rd240), _rt_buffer_get_64, (%rd241, %r113, %r467, %rd25, %rd26, %rd245, %rd245);
	// inline asm
	mov.f32 	%f1599, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs133, %f1599;}

	// inline asm
	mov.u16 	%rs134, 0;
	st.v4.u16 	[%rd240], {%rs133, %rs133, %rs133, %rs134};

BB0_162:
	ld.global.u32 	%r468, [additive];
	setp.eq.s32	%p176, %r468, 0;
	@%p176 bra 	BB0_164;

	mov.u64 	%rd259, image_RNM0;
	cvta.global.u64 	%rd248, %rd259;
	mov.u32 	%r472, 8;
	mov.u64 	%rd258, 0;
	// inline asm
	call (%rd247), _rt_buffer_get_64, (%rd248, %r113, %r472, %rd25, %rd26, %rd258, %rd258);
	// inline asm
	ld.v4.u16 	{%rs141, %rs142, %rs143, %rs144}, [%rd247];
	// inline asm
	{  cvt.f32.f16 %f1600, %rs141;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1601, %rs142;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1602, %rs143;}

	// inline asm
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd248, %r113, %r472, %rd25, %rd26, %rd258, %rd258);
	// inline asm
	add.f32 	%f1603, %f1600, 0f00000000;
	add.f32 	%f1604, %f1601, 0f00000000;
	add.f32 	%f1605, %f1602, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs140, %f1605;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs139, %f1604;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs138, %f1603;}

	// inline asm
	mov.u16 	%rs145, 0;
	st.v4.u16 	[%rd253], {%rs138, %rs139, %rs140, %rs145};
	bra.uni 	BB0_165;

BB0_164:
	mov.u64 	%rd266, image_RNM0;
	cvta.global.u64 	%rd261, %rd266;
	mov.u32 	%r474, 8;
	mov.u64 	%rd265, 0;
	// inline asm
	call (%rd260), _rt_buffer_get_64, (%rd261, %r113, %r474, %rd25, %rd26, %rd265, %rd265);
	// inline asm
	mov.f32 	%f1606, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs146, %f1606;}

	// inline asm
	mov.u16 	%rs147, 0;
	st.v4.u16 	[%rd260], {%rs146, %rs146, %rs146, %rs147};

BB0_165:
	ld.global.u32 	%r475, [additive];
	setp.eq.s32	%p177, %r475, 0;
	@%p177 bra 	BB0_167;

	mov.u64 	%rd279, image_RNM1;
	cvta.global.u64 	%rd268, %rd279;
	mov.u32 	%r479, 8;
	mov.u64 	%rd278, 0;
	// inline asm
	call (%rd267), _rt_buffer_get_64, (%rd268, %r113, %r479, %rd25, %rd26, %rd278, %rd278);
	// inline asm
	ld.v4.u16 	{%rs154, %rs155, %rs156, %rs157}, [%rd267];
	// inline asm
	{  cvt.f32.f16 %f1607, %rs154;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1608, %rs155;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1609, %rs156;}

	// inline asm
	// inline asm
	call (%rd273), _rt_buffer_get_64, (%rd268, %r113, %r479, %rd25, %rd26, %rd278, %rd278);
	// inline asm
	add.f32 	%f1610, %f1607, 0f00000000;
	add.f32 	%f1611, %f1608, 0f00000000;
	add.f32 	%f1612, %f1609, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs153, %f1612;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs152, %f1611;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs151, %f1610;}

	// inline asm
	mov.u16 	%rs158, 0;
	st.v4.u16 	[%rd273], {%rs151, %rs152, %rs153, %rs158};
	bra.uni 	BB0_168;

BB0_167:
	mov.u64 	%rd286, image_RNM1;
	cvta.global.u64 	%rd281, %rd286;
	mov.u32 	%r481, 8;
	mov.u64 	%rd285, 0;
	// inline asm
	call (%rd280), _rt_buffer_get_64, (%rd281, %r113, %r481, %rd25, %rd26, %rd285, %rd285);
	// inline asm
	mov.f32 	%f1613, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs159, %f1613;}

	// inline asm
	mov.u16 	%rs160, 0;
	st.v4.u16 	[%rd280], {%rs159, %rs159, %rs159, %rs160};

BB0_168:
	ld.global.u32 	%r482, [additive];
	setp.eq.s32	%p178, %r482, 0;
	@%p178 bra 	BB0_170;

	mov.u64 	%rd299, image_RNM2;
	cvta.global.u64 	%rd288, %rd299;
	mov.u32 	%r486, 8;
	mov.u64 	%rd298, 0;
	// inline asm
	call (%rd287), _rt_buffer_get_64, (%rd288, %r113, %r486, %rd25, %rd26, %rd298, %rd298);
	// inline asm
	ld.v4.u16 	{%rs167, %rs168, %rs169, %rs170}, [%rd287];
	// inline asm
	{  cvt.f32.f16 %f1614, %rs167;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1615, %rs168;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1616, %rs169;}

	// inline asm
	// inline asm
	call (%rd293), _rt_buffer_get_64, (%rd288, %r113, %r486, %rd25, %rd26, %rd298, %rd298);
	// inline asm
	add.f32 	%f1617, %f1614, 0f00000000;
	add.f32 	%f1618, %f1615, 0f00000000;
	add.f32 	%f1619, %f1616, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs166, %f1619;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs165, %f1618;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs164, %f1617;}

	// inline asm
	mov.u16 	%rs171, 0;
	st.v4.u16 	[%rd293], {%rs164, %rs165, %rs166, %rs171};
	bra.uni 	BB0_171;

BB0_170:
	mov.u64 	%rd306, image_RNM2;
	cvta.global.u64 	%rd301, %rd306;
	mov.u32 	%r488, 8;
	mov.u64 	%rd305, 0;
	// inline asm
	call (%rd300), _rt_buffer_get_64, (%rd301, %r113, %r488, %rd25, %rd26, %rd305, %rd305);
	// inline asm
	mov.f32 	%f1620, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs172, %f1620;}

	// inline asm
	mov.u16 	%rs173, 0;
	st.v4.u16 	[%rd300], {%rs172, %rs172, %rs172, %rs173};
	bra.uni 	BB0_171;

BB0_91:
	setp.geu.f32	%p102, %f1664, 0f00000000;
	@%p102 bra 	BB0_94;

	cvt.rzi.f32.f32	%f1142, %f1114;
	setp.neu.f32	%p103, %f1142, 0f3EE8BA2E;
	selp.f32	%f1670, 0f7FFFFFFF, %f1670, %p103;

BB0_94:
	add.f32 	%f1144, %f168, 0f3EE8BA2E;
	mov.b32 	 %r371, %f1144;
	setp.lt.s32	%p105, %r371, 2139095040;
	@%p105 bra 	BB0_99;

	setp.gtu.f32	%p106, %f168, 0f7F800000;
	@%p106 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f1670, %f1664, 0f3EE8BA2E;
	bra.uni 	BB0_99;

BB0_96:
	setp.neu.f32	%p107, %f168, 0f7F800000;
	@%p107 bra 	BB0_99;

	selp.f32	%f1670, 0fFF800000, 0f7F800000, %p2;

BB0_99:
	mul.f32 	%f1145, %f1670, 0f437F0000;
	setp.eq.f32	%p108, %f1664, 0f3F800000;
	selp.f32	%f1146, 0f437F0000, %f1145, %p108;
	cvt.rzi.u32.f32	%r372, %f1146;
	cvt.u16.u32	%rs30, %r372;
	mov.u16 	%rs31, 255;
	st.v2.u8 	[%rd98], {%rs30, %rs31};
	ld.global.u32 	%r518, [imageEnabled];

BB0_100:
	and.b32  	%r373, %r518, 1;
	setp.eq.b32	%p109, %r373, 1;
	@!%p109 bra 	BB0_135;
	bra.uni 	BB0_101;

BB0_101:
	mov.f32 	%f1149, 0f3E666666;
	cvt.rzi.f32.f32	%f1150, %f1149;
	fma.rn.f32 	%f1151, %f1150, 0fC0000000, 0f3EE66666;
	abs.f32 	%f180, %f1151;
	abs.f32 	%f181, %f147;
	setp.lt.f32	%p110, %f181, 0f00800000;
	mul.f32 	%f1152, %f181, 0f4B800000;
	selp.f32	%f1153, 0fC3170000, 0fC2FE0000, %p110;
	selp.f32	%f1154, %f1152, %f181, %p110;
	mov.b32 	 %r374, %f1154;
	and.b32  	%r375, %r374, 8388607;
	or.b32  	%r376, %r375, 1065353216;
	mov.b32 	 %f1155, %r376;
	shr.u32 	%r377, %r374, 23;
	cvt.rn.f32.u32	%f1156, %r377;
	add.f32 	%f1157, %f1153, %f1156;
	setp.gt.f32	%p111, %f1155, 0f3FB504F3;
	mul.f32 	%f1158, %f1155, 0f3F000000;
	add.f32 	%f1159, %f1157, 0f3F800000;
	selp.f32	%f1160, %f1158, %f1155, %p111;
	selp.f32	%f1161, %f1159, %f1157, %p111;
	add.f32 	%f1162, %f1160, 0fBF800000;
	add.f32 	%f1148, %f1160, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1147,%f1148;
	// inline asm
	add.f32 	%f1163, %f1162, %f1162;
	mul.f32 	%f1164, %f1147, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1168, %f1002, %f1165, %f1001;
	fma.rn.f32 	%f1170, %f1168, %f1165, %f1004;
	mul.rn.f32 	%f1171, %f1170, %f1165;
	mul.rn.f32 	%f1172, %f1171, %f1164;
	sub.f32 	%f1173, %f1162, %f1164;
	neg.f32 	%f1174, %f1164;
	add.f32 	%f1175, %f1173, %f1173;
	fma.rn.f32 	%f1176, %f1174, %f1162, %f1175;
	mul.rn.f32 	%f1177, %f1147, %f1176;
	add.f32 	%f1178, %f1172, %f1164;
	sub.f32 	%f1179, %f1164, %f1178;
	add.f32 	%f1180, %f1172, %f1179;
	add.f32 	%f1181, %f1177, %f1180;
	add.f32 	%f1182, %f1178, %f1181;
	sub.f32 	%f1183, %f1178, %f1182;
	add.f32 	%f1184, %f1181, %f1183;
	mul.rn.f32 	%f1186, %f1161, %f1020;
	mul.rn.f32 	%f1188, %f1161, %f1022;
	add.f32 	%f1189, %f1186, %f1182;
	sub.f32 	%f1190, %f1186, %f1189;
	add.f32 	%f1191, %f1182, %f1190;
	add.f32 	%f1192, %f1184, %f1191;
	add.f32 	%f1193, %f1188, %f1192;
	add.f32 	%f1194, %f1189, %f1193;
	sub.f32 	%f1195, %f1189, %f1194;
	add.f32 	%f1196, %f1193, %f1195;
	mov.f32 	%f1197, 0f3EE66666;
	mul.rn.f32 	%f1198, %f1197, %f1194;
	neg.f32 	%f1199, %f1198;
	fma.rn.f32 	%f1200, %f1197, %f1194, %f1199;
	fma.rn.f32 	%f1201, %f1197, %f1196, %f1200;
	fma.rn.f32 	%f1203, %f1686, %f1194, %f1201;
	add.rn.f32 	%f1204, %f1198, %f1203;
	neg.f32 	%f1205, %f1204;
	add.rn.f32 	%f1206, %f1198, %f1205;
	add.rn.f32 	%f1207, %f1206, %f1203;
	mov.b32 	 %r378, %f1204;
	setp.eq.s32	%p112, %r378, 1118925336;
	add.s32 	%r379, %r378, -1;
	mov.b32 	 %f1208, %r379;
	add.f32 	%f1209, %f1207, 0f37000000;
	selp.f32	%f1210, %f1208, %f1204, %p112;
	selp.f32	%f182, %f1209, %f1207, %p112;
	mul.f32 	%f1211, %f1210, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1212, %f1211;
	fma.rn.f32 	%f1214, %f1212, %f1047, %f1210;
	fma.rn.f32 	%f1216, %f1212, %f1049, %f1214;
	mul.f32 	%f1217, %f1216, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1218, %f1217;
	add.f32 	%f1219, %f1212, 0f00000000;
	ex2.approx.f32 	%f1220, %f1219;
	mul.f32 	%f1221, %f1218, %f1220;
	setp.lt.f32	%p113, %f1210, 0fC2D20000;
	selp.f32	%f1222, 0f00000000, %f1221, %p113;
	setp.gt.f32	%p114, %f1210, 0f42D20000;
	selp.f32	%f1671, 0f7F800000, %f1222, %p114;
	setp.eq.f32	%p115, %f1671, 0f7F800000;
	@%p115 bra 	BB0_103;

	fma.rn.f32 	%f1671, %f1671, %f182, %f1671;

BB0_103:
	setp.lt.f32	%p116, %f147, 0f00000000;
	setp.eq.f32	%p117, %f180, 0f3F800000;
	and.pred  	%p3, %p116, %p117;
	mov.b32 	 %r380, %f1671;
	xor.b32  	%r381, %r380, -2147483648;
	mov.b32 	 %f1223, %r381;
	selp.f32	%f1673, %f1223, %f1671, %p3;
	setp.eq.f32	%p118, %f147, 0f00000000;
	@%p118 bra 	BB0_106;
	bra.uni 	BB0_104;

BB0_106:
	add.f32 	%f1226, %f147, %f147;
	selp.f32	%f1673, %f1226, 0f00000000, %p117;
	bra.uni 	BB0_107;

BB0_104:
	setp.geu.f32	%p119, %f147, 0f00000000;
	@%p119 bra 	BB0_107;

	cvt.rzi.f32.f32	%f1225, %f1197;
	setp.neu.f32	%p120, %f1225, 0f3EE66666;
	selp.f32	%f1673, 0f7FFFFFFF, %f1673, %p120;

BB0_107:
	add.f32 	%f1227, %f181, 0f3EE66666;
	mov.b32 	 %r382, %f1227;
	setp.lt.s32	%p122, %r382, 2139095040;
	@%p122 bra 	BB0_112;

	setp.gtu.f32	%p123, %f181, 0f7F800000;
	@%p123 bra 	BB0_111;
	bra.uni 	BB0_109;

BB0_111:
	add.f32 	%f1673, %f147, 0f3EE66666;
	bra.uni 	BB0_112;

BB0_109:
	setp.neu.f32	%p124, %f181, 0f7F800000;
	@%p124 bra 	BB0_112;

	selp.f32	%f1673, 0fFF800000, 0f7F800000, %p3;

BB0_112:
	setp.eq.f32	%p125, %f147, 0f3F800000;
	selp.f32	%f193, 0f3F800000, %f1673, %p125;
	abs.f32 	%f194, %f148;
	setp.lt.f32	%p126, %f194, 0f00800000;
	mul.f32 	%f1230, %f194, 0f4B800000;
	selp.f32	%f1231, 0fC3170000, 0fC2FE0000, %p126;
	selp.f32	%f1232, %f1230, %f194, %p126;
	mov.b32 	 %r383, %f1232;
	and.b32  	%r384, %r383, 8388607;
	or.b32  	%r385, %r384, 1065353216;
	mov.b32 	 %f1233, %r385;
	shr.u32 	%r386, %r383, 23;
	cvt.rn.f32.u32	%f1234, %r386;
	add.f32 	%f1235, %f1231, %f1234;
	setp.gt.f32	%p127, %f1233, 0f3FB504F3;
	mul.f32 	%f1236, %f1233, 0f3F000000;
	add.f32 	%f1237, %f1235, 0f3F800000;
	selp.f32	%f1238, %f1236, %f1233, %p127;
	selp.f32	%f1239, %f1237, %f1235, %p127;
	add.f32 	%f1240, %f1238, 0fBF800000;
	add.f32 	%f1229, %f1238, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1228,%f1229;
	// inline asm
	add.f32 	%f1241, %f1240, %f1240;
	mul.f32 	%f1242, %f1228, %f1241;
	mul.f32 	%f1243, %f1242, %f1242;
	fma.rn.f32 	%f1246, %f1002, %f1243, %f1001;
	fma.rn.f32 	%f1248, %f1246, %f1243, %f1004;
	mul.rn.f32 	%f1249, %f1248, %f1243;
	mul.rn.f32 	%f1250, %f1249, %f1242;
	sub.f32 	%f1251, %f1240, %f1242;
	neg.f32 	%f1252, %f1242;
	add.f32 	%f1253, %f1251, %f1251;
	fma.rn.f32 	%f1254, %f1252, %f1240, %f1253;
	mul.rn.f32 	%f1255, %f1228, %f1254;
	add.f32 	%f1256, %f1250, %f1242;
	sub.f32 	%f1257, %f1242, %f1256;
	add.f32 	%f1258, %f1250, %f1257;
	add.f32 	%f1259, %f1255, %f1258;
	add.f32 	%f1260, %f1256, %f1259;
	sub.f32 	%f1261, %f1256, %f1260;
	add.f32 	%f1262, %f1259, %f1261;
	mul.rn.f32 	%f1264, %f1239, %f1020;
	mul.rn.f32 	%f1266, %f1239, %f1022;
	add.f32 	%f1267, %f1264, %f1260;
	sub.f32 	%f1268, %f1264, %f1267;
	add.f32 	%f1269, %f1260, %f1268;
	add.f32 	%f1270, %f1262, %f1269;
	add.f32 	%f1271, %f1266, %f1270;
	add.f32 	%f1272, %f1267, %f1271;
	sub.f32 	%f1273, %f1267, %f1272;
	add.f32 	%f1274, %f1271, %f1273;
	mul.rn.f32 	%f1276, %f1197, %f1272;
	neg.f32 	%f1277, %f1276;
	fma.rn.f32 	%f1278, %f1197, %f1272, %f1277;
	fma.rn.f32 	%f1279, %f1197, %f1274, %f1278;
	fma.rn.f32 	%f1281, %f1686, %f1272, %f1279;
	add.rn.f32 	%f1282, %f1276, %f1281;
	neg.f32 	%f1283, %f1282;
	add.rn.f32 	%f1284, %f1276, %f1283;
	add.rn.f32 	%f1285, %f1284, %f1281;
	mov.b32 	 %r387, %f1282;
	setp.eq.s32	%p128, %r387, 1118925336;
	add.s32 	%r388, %r387, -1;
	mov.b32 	 %f1286, %r388;
	add.f32 	%f1287, %f1285, 0f37000000;
	selp.f32	%f1288, %f1286, %f1282, %p128;
	selp.f32	%f195, %f1287, %f1285, %p128;
	mul.f32 	%f1289, %f1288, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1290, %f1289;
	fma.rn.f32 	%f1292, %f1290, %f1047, %f1288;
	fma.rn.f32 	%f1294, %f1290, %f1049, %f1292;
	mul.f32 	%f1295, %f1294, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1296, %f1295;
	add.f32 	%f1297, %f1290, 0f00000000;
	ex2.approx.f32 	%f1298, %f1297;
	mul.f32 	%f1299, %f1296, %f1298;
	setp.lt.f32	%p129, %f1288, 0fC2D20000;
	selp.f32	%f1300, 0f00000000, %f1299, %p129;
	setp.gt.f32	%p130, %f1288, 0f42D20000;
	selp.f32	%f1674, 0f7F800000, %f1300, %p130;
	setp.eq.f32	%p131, %f1674, 0f7F800000;
	@%p131 bra 	BB0_114;

	fma.rn.f32 	%f1674, %f1674, %f195, %f1674;

BB0_114:
	setp.lt.f32	%p132, %f148, 0f00000000;
	and.pred  	%p4, %p132, %p117;
	mov.b32 	 %r389, %f1674;
	xor.b32  	%r390, %r389, -2147483648;
	mov.b32 	 %f1301, %r390;
	selp.f32	%f1676, %f1301, %f1674, %p4;
	setp.eq.f32	%p134, %f148, 0f00000000;
	@%p134 bra 	BB0_117;
	bra.uni 	BB0_115;

BB0_117:
	add.f32 	%f1304, %f148, %f148;
	selp.f32	%f1676, %f1304, 0f00000000, %p117;
	bra.uni 	BB0_118;

BB0_115:
	setp.geu.f32	%p135, %f148, 0f00000000;
	@%p135 bra 	BB0_118;

	cvt.rzi.f32.f32	%f1303, %f1197;
	setp.neu.f32	%p136, %f1303, 0f3EE66666;
	selp.f32	%f1676, 0f7FFFFFFF, %f1676, %p136;

BB0_118:
	add.f32 	%f1305, %f194, 0f3EE66666;
	mov.b32 	 %r391, %f1305;
	setp.lt.s32	%p138, %r391, 2139095040;
	@%p138 bra 	BB0_123;

	setp.gtu.f32	%p139, %f194, 0f7F800000;
	@%p139 bra 	BB0_122;
	bra.uni 	BB0_120;

BB0_122:
	add.f32 	%f1676, %f148, 0f3EE66666;
	bra.uni 	BB0_123;

BB0_120:
	setp.neu.f32	%p140, %f194, 0f7F800000;
	@%p140 bra 	BB0_123;

	selp.f32	%f1676, 0fFF800000, 0f7F800000, %p4;

BB0_123:
	setp.eq.f32	%p141, %f148, 0f3F800000;
	selp.f32	%f206, 0f3F800000, %f1676, %p141;
	abs.f32 	%f207, %f149;
	setp.lt.f32	%p142, %f207, 0f00800000;
	mul.f32 	%f1308, %f207, 0f4B800000;
	selp.f32	%f1309, 0fC3170000, 0fC2FE0000, %p142;
	selp.f32	%f1310, %f1308, %f207, %p142;
	mov.b32 	 %r392, %f1310;
	and.b32  	%r393, %r392, 8388607;
	or.b32  	%r394, %r393, 1065353216;
	mov.b32 	 %f1311, %r394;
	shr.u32 	%r395, %r392, 23;
	cvt.rn.f32.u32	%f1312, %r395;
	add.f32 	%f1313, %f1309, %f1312;
	setp.gt.f32	%p143, %f1311, 0f3FB504F3;
	mul.f32 	%f1314, %f1311, 0f3F000000;
	add.f32 	%f1315, %f1313, 0f3F800000;
	selp.f32	%f1316, %f1314, %f1311, %p143;
	selp.f32	%f1317, %f1315, %f1313, %p143;
	add.f32 	%f1318, %f1316, 0fBF800000;
	add.f32 	%f1307, %f1316, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1306,%f1307;
	// inline asm
	add.f32 	%f1319, %f1318, %f1318;
	mul.f32 	%f1320, %f1306, %f1319;
	mul.f32 	%f1321, %f1320, %f1320;
	fma.rn.f32 	%f1324, %f1002, %f1321, %f1001;
	fma.rn.f32 	%f1326, %f1324, %f1321, %f1004;
	mul.rn.f32 	%f1327, %f1326, %f1321;
	mul.rn.f32 	%f1328, %f1327, %f1320;
	sub.f32 	%f1329, %f1318, %f1320;
	neg.f32 	%f1330, %f1320;
	add.f32 	%f1331, %f1329, %f1329;
	fma.rn.f32 	%f1332, %f1330, %f1318, %f1331;
	mul.rn.f32 	%f1333, %f1306, %f1332;
	add.f32 	%f1334, %f1328, %f1320;
	sub.f32 	%f1335, %f1320, %f1334;
	add.f32 	%f1336, %f1328, %f1335;
	add.f32 	%f1337, %f1333, %f1336;
	add.f32 	%f1338, %f1334, %f1337;
	sub.f32 	%f1339, %f1334, %f1338;
	add.f32 	%f1340, %f1337, %f1339;
	mul.rn.f32 	%f1342, %f1317, %f1020;
	mul.rn.f32 	%f1344, %f1317, %f1022;
	add.f32 	%f1345, %f1342, %f1338;
	sub.f32 	%f1346, %f1342, %f1345;
	add.f32 	%f1347, %f1338, %f1346;
	add.f32 	%f1348, %f1340, %f1347;
	add.f32 	%f1349, %f1344, %f1348;
	add.f32 	%f1350, %f1345, %f1349;
	sub.f32 	%f1351, %f1345, %f1350;
	add.f32 	%f1352, %f1349, %f1351;
	mul.rn.f32 	%f1354, %f1197, %f1350;
	neg.f32 	%f1355, %f1354;
	fma.rn.f32 	%f1356, %f1197, %f1350, %f1355;
	fma.rn.f32 	%f1357, %f1197, %f1352, %f1356;
	fma.rn.f32 	%f1359, %f1686, %f1350, %f1357;
	add.rn.f32 	%f1360, %f1354, %f1359;
	neg.f32 	%f1361, %f1360;
	add.rn.f32 	%f1362, %f1354, %f1361;
	add.rn.f32 	%f1363, %f1362, %f1359;
	mov.b32 	 %r396, %f1360;
	setp.eq.s32	%p144, %r396, 1118925336;
	add.s32 	%r397, %r396, -1;
	mov.b32 	 %f1364, %r397;
	add.f32 	%f1365, %f1363, 0f37000000;
	selp.f32	%f1366, %f1364, %f1360, %p144;
	selp.f32	%f208, %f1365, %f1363, %p144;
	mul.f32 	%f1367, %f1366, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1368, %f1367;
	fma.rn.f32 	%f1370, %f1368, %f1047, %f1366;
	fma.rn.f32 	%f1372, %f1368, %f1049, %f1370;
	mul.f32 	%f1373, %f1372, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1374, %f1373;
	add.f32 	%f1375, %f1368, 0f00000000;
	ex2.approx.f32 	%f1376, %f1375;
	mul.f32 	%f1377, %f1374, %f1376;
	setp.lt.f32	%p145, %f1366, 0fC2D20000;
	selp.f32	%f1378, 0f00000000, %f1377, %p145;
	setp.gt.f32	%p146, %f1366, 0f42D20000;
	selp.f32	%f1677, 0f7F800000, %f1378, %p146;
	setp.eq.f32	%p147, %f1677, 0f7F800000;
	@%p147 bra 	BB0_125;

	fma.rn.f32 	%f1677, %f1677, %f208, %f1677;

BB0_125:
	setp.lt.f32	%p148, %f149, 0f00000000;
	and.pred  	%p5, %p148, %p117;
	mov.b32 	 %r398, %f1677;
	xor.b32  	%r399, %r398, -2147483648;
	mov.b32 	 %f1379, %r399;
	selp.f32	%f1679, %f1379, %f1677, %p5;
	setp.eq.f32	%p150, %f149, 0f00000000;
	@%p150 bra 	BB0_128;
	bra.uni 	BB0_126;

BB0_128:
	add.f32 	%f1382, %f149, %f149;
	selp.f32	%f1679, %f1382, 0f00000000, %p117;
	bra.uni 	BB0_129;

BB0_126:
	setp.geu.f32	%p151, %f149, 0f00000000;
	@%p151 bra 	BB0_129;

	cvt.rzi.f32.f32	%f1381, %f1197;
	setp.neu.f32	%p152, %f1381, 0f3EE66666;
	selp.f32	%f1679, 0f7FFFFFFF, %f1679, %p152;

BB0_129:
	add.f32 	%f1383, %f207, 0f3EE66666;
	mov.b32 	 %r400, %f1383;
	setp.lt.s32	%p154, %r400, 2139095040;
	@%p154 bra 	BB0_134;

	setp.gtu.f32	%p155, %f207, 0f7F800000;
	@%p155 bra 	BB0_133;
	bra.uni 	BB0_131;

BB0_133:
	add.f32 	%f1679, %f149, 0f3EE66666;
	bra.uni 	BB0_134;

BB0_131:
	setp.neu.f32	%p156, %f207, 0f7F800000;
	@%p156 bra 	BB0_134;

	selp.f32	%f1679, 0fFF800000, 0f7F800000, %p5;

BB0_134:
	setp.eq.f32	%p157, %f149, 0f3F800000;
	selp.f32	%f1384, 0f3F800000, %f1679, %p157;
	cvt.u64.u32	%rd108, %r3;
	cvt.u64.u32	%rd107, %r2;
	mov.u64 	%rd111, image;
	cvta.global.u64 	%rd106, %rd111;
	// inline asm
	call (%rd105), _rt_buffer_get_64, (%rd106, %r113, %r114, %rd107, %rd108, %rd32, %rd32);
	// inline asm
	cvt.sat.f32.f32	%f1385, %f1384;
	mul.f32 	%f1386, %f1385, 0f437FFD71;
	cvt.rzi.u32.f32	%r403, %f1386;
	cvt.sat.f32.f32	%f1387, %f206;
	mul.f32 	%f1388, %f1387, 0f437FFD71;
	cvt.rzi.u32.f32	%r404, %f1388;
	cvt.sat.f32.f32	%f1389, %f193;
	mul.f32 	%f1390, %f1389, 0f437FFD71;
	cvt.rzi.u32.f32	%r405, %f1390;
	cvt.u16.u32	%rs32, %r403;
	cvt.u16.u32	%rs33, %r405;
	cvt.u16.u32	%rs34, %r404;
	mov.u16 	%rs35, 255;
	st.v4.u8 	[%rd105], {%rs32, %rs34, %rs33, %rs35};
	ld.global.u32 	%r518, [imageEnabled];

BB0_135:
	and.b32  	%r406, %r518, 4;
	setp.eq.s32	%p158, %r406, 0;
	@%p158 bra 	BB0_139;

	ld.global.u32 	%r407, [additive];
	setp.eq.s32	%p159, %r407, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	mov.f32 	%f1391, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs36, %f1391;}

	// inline asm
	@%p159 bra 	BB0_138;

	mov.u64 	%rd124, image_HDR;
	cvta.global.u64 	%rd113, %rd124;
	mov.u32 	%r411, 8;
	// inline asm
	call (%rd112), _rt_buffer_get_64, (%rd113, %r113, %r411, %rd18, %rd19, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs43, %rs44, %rs45, %rs46}, [%rd112];
	// inline asm
	{  cvt.f32.f16 %f1392, %rs43;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1393, %rs44;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1394, %rs45;}

	// inline asm
	// inline asm
	call (%rd118), _rt_buffer_get_64, (%rd113, %r113, %r411, %rd18, %rd19, %rd32, %rd32);
	// inline asm
	add.f32 	%f1395, %f147, %f1392;
	add.f32 	%f1396, %f148, %f1393;
	add.f32 	%f1397, %f149, %f1394;
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f1397;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f1396;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f1395;}

	// inline asm
	st.v4.u16 	[%rd118], {%rs40, %rs41, %rs42, %rs36};
	bra.uni 	BB0_139;

BB0_138:
	mov.u64 	%rd131, image_HDR;
	cvta.global.u64 	%rd126, %rd131;
	mov.u32 	%r413, 8;
	// inline asm
	call (%rd125), _rt_buffer_get_64, (%rd126, %r113, %r413, %rd18, %rd19, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f149;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f148;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f147;}

	// inline asm
	st.v4.u16 	[%rd125], {%rs47, %rs48, %rs49, %rs36};

BB0_139:
	ld.global.v2.u32 	{%r416, %r417}, [pixelID];
	cvt.u64.u32	%rd134, %r416;
	cvt.u64.u32	%rd135, %r417;
	mov.u64 	%rd138, uvtangent;
	cvta.global.u64 	%rd133, %rd138;
	// inline asm
	call (%rd132), _rt_buffer_get_64, (%rd133, %r113, %r114, %rd134, %rd135, %rd32, %rd32);
	// inline asm
	ld.u32 	%r102, [%rd132];
	shr.u32 	%r103, %r102, 16;
	cvt.u16.u32	%rs50, %r103;
	and.b16  	%rs51, %rs50, 255;
	cvt.u16.u32	%rs52, %r102;
	or.b16  	%rs53, %rs52, %rs51;
	setp.eq.s16	%p160, %rs53, 0;
	mov.f32 	%f1680, %f1686;
	mov.f32 	%f1681, %f1686;
	mov.f32 	%f1682, %f1686;
	@%p160 bra 	BB0_141;

	ld.u8 	%rs54, [%rd132+1];
	and.b16  	%rs56, %rs52, 255;
	cvt.rn.f32.u16	%f1404, %rs56;
	div.rn.f32 	%f1405, %f1404, 0f437F0000;
	fma.rn.f32 	%f1406, %f1405, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1407, %rs54;
	div.rn.f32 	%f1408, %f1407, 0f437F0000;
	fma.rn.f32 	%f1409, %f1408, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1410, %rs51;
	div.rn.f32 	%f1411, %f1410, 0f437F0000;
	fma.rn.f32 	%f1412, %f1411, 0f40000000, 0fBF800000;
	mul.f32 	%f1413, %f1409, %f1409;
	fma.rn.f32 	%f1414, %f1406, %f1406, %f1413;
	fma.rn.f32 	%f1415, %f1412, %f1412, %f1414;
	sqrt.rn.f32 	%f1416, %f1415;
	rcp.rn.f32 	%f1417, %f1416;
	mul.f32 	%f1680, %f1406, %f1417;
	mul.f32 	%f1681, %f1409, %f1417;
	mul.f32 	%f1682, %f1412, %f1417;

BB0_141:
	mul.f32 	%f1421, %f1625, %f1681;
	mul.f32 	%f1422, %f1624, %f1682;
	sub.f32 	%f1423, %f1422, %f1421;
	mul.f32 	%f1424, %f1623, %f1682;
	mul.f32 	%f1425, %f1625, %f1680;
	sub.f32 	%f1426, %f1425, %f1424;
	mul.f32 	%f1427, %f1624, %f1680;
	mul.f32 	%f1428, %f1623, %f1681;
	sub.f32 	%f1429, %f1428, %f1427;
	setp.lt.u32	%p161, %r102, 16777216;
	selp.f32	%f1430, 0fBF800000, 0f3F800000, %p161;
	mul.f32 	%f1431, %f1423, %f1430;
	mul.f32 	%f1432, %f1426, %f1430;
	mul.f32 	%f1433, %f1429, %f1430;
	mul.f32 	%f1434, %f1431, 0f00000000;
	mul.f32 	%f1435, %f1432, 0f00000000;
	mul.f32 	%f1436, %f1433, 0f00000000;
	fma.rn.f32 	%f1437, %f1680, 0f3F5105EC, %f1434;
	fma.rn.f32 	%f1438, %f1681, 0f3F5105EC, %f1435;
	fma.rn.f32 	%f1439, %f1682, 0f3F5105EC, %f1436;
	mul.f32 	%f225, %f1623, 0f3F13CD3A;
	add.f32 	%f226, %f225, %f1437;
	mul.f32 	%f227, %f1624, 0f3F13CD3A;
	add.f32 	%f228, %f227, %f1438;
	mul.f32 	%f229, %f1625, 0f3F13CD3A;
	add.f32 	%f230, %f229, %f1439;
	ld.global.v2.u32 	{%r422, %r423}, [pixelID];
	cvt.u64.u32	%rd141, %r422;
	cvt.u64.u32	%rd142, %r423;
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd133, %r113, %r114, %rd141, %rd142, %rd32, %rd32);
	// inline asm
	ld.u32 	%r104, [%rd139];
	shr.u32 	%r105, %r104, 16;
	cvt.u16.u32	%rs59, %r105;
	and.b16  	%rs60, %rs59, 255;
	cvt.u16.u32	%rs61, %r104;
	or.b16  	%rs62, %rs61, %rs60;
	setp.eq.s16	%p162, %rs62, 0;
	mov.f32 	%f1683, %f1686;
	mov.f32 	%f1684, %f1686;
	mov.f32 	%f1685, %f1686;
	@%p162 bra 	BB0_143;

	ld.u8 	%rs63, [%rd139+1];
	and.b16  	%rs65, %rs61, 255;
	cvt.rn.f32.u16	%f1440, %rs65;
	div.rn.f32 	%f1441, %f1440, 0f437F0000;
	fma.rn.f32 	%f1442, %f1441, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1443, %rs63;
	div.rn.f32 	%f1444, %f1443, 0f437F0000;
	fma.rn.f32 	%f1445, %f1444, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1446, %rs60;
	div.rn.f32 	%f1447, %f1446, 0f437F0000;
	fma.rn.f32 	%f1448, %f1447, 0f40000000, 0fBF800000;
	mul.f32 	%f1449, %f1445, %f1445;
	fma.rn.f32 	%f1450, %f1442, %f1442, %f1449;
	fma.rn.f32 	%f1451, %f1448, %f1448, %f1450;
	sqrt.rn.f32 	%f1452, %f1451;
	rcp.rn.f32 	%f1453, %f1452;
	mul.f32 	%f1683, %f1442, %f1453;
	mul.f32 	%f1684, %f1445, %f1453;
	mul.f32 	%f1685, %f1448, %f1453;

BB0_143:
	mul.f32 	%f1457, %f1625, %f1684;
	mul.f32 	%f1458, %f1624, %f1685;
	sub.f32 	%f1459, %f1458, %f1457;
	mul.f32 	%f1460, %f1623, %f1685;
	mul.f32 	%f1461, %f1625, %f1683;
	sub.f32 	%f1462, %f1461, %f1460;
	mul.f32 	%f1463, %f1624, %f1683;
	mul.f32 	%f1464, %f1623, %f1684;
	sub.f32 	%f1465, %f1464, %f1463;
	setp.lt.u32	%p163, %r104, 16777216;
	selp.f32	%f1466, 0fBF800000, 0f3F800000, %p163;
	mul.f32 	%f1467, %f1459, %f1466;
	mul.f32 	%f1468, %f1462, %f1466;
	mul.f32 	%f1469, %f1465, %f1466;
	mul.f32 	%f1470, %f1467, 0f3F3504F3;
	mul.f32 	%f1471, %f1468, 0f3F3504F3;
	mul.f32 	%f1472, %f1469, 0f3F3504F3;
	fma.rn.f32 	%f1473, %f1683, 0fBED105EC, %f1470;
	fma.rn.f32 	%f1474, %f1684, 0fBED105EC, %f1471;
	fma.rn.f32 	%f1475, %f1685, 0fBED105EC, %f1472;
	add.f32 	%f237, %f225, %f1473;
	add.f32 	%f238, %f227, %f1474;
	add.f32 	%f239, %f229, %f1475;
	ld.global.v2.u32 	{%r428, %r429}, [pixelID];
	cvt.u64.u32	%rd148, %r428;
	cvt.u64.u32	%rd149, %r429;
	// inline asm
	call (%rd146), _rt_buffer_get_64, (%rd133, %r113, %r114, %rd148, %rd149, %rd32, %rd32);
	// inline asm
	ld.u32 	%r106, [%rd146];
	shr.u32 	%r107, %r106, 16;
	cvt.u16.u32	%rs68, %r107;
	and.b16  	%rs69, %rs68, 255;
	cvt.u16.u32	%rs70, %r106;
	or.b16  	%rs71, %rs70, %rs69;
	setp.eq.s16	%p164, %rs71, 0;
	mov.f32 	%f1687, %f1686;
	mov.f32 	%f1688, %f1686;
	@%p164 bra 	BB0_145;

	ld.u8 	%rs72, [%rd146+1];
	and.b16  	%rs74, %rs70, 255;
	cvt.rn.f32.u16	%f1476, %rs74;
	div.rn.f32 	%f1477, %f1476, 0f437F0000;
	fma.rn.f32 	%f1478, %f1477, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1479, %rs72;
	div.rn.f32 	%f1480, %f1479, 0f437F0000;
	fma.rn.f32 	%f1481, %f1480, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1482, %rs69;
	div.rn.f32 	%f1483, %f1482, 0f437F0000;
	fma.rn.f32 	%f1484, %f1483, 0f40000000, 0fBF800000;
	mul.f32 	%f1485, %f1481, %f1481;
	fma.rn.f32 	%f1486, %f1478, %f1478, %f1485;
	fma.rn.f32 	%f1487, %f1484, %f1484, %f1486;
	sqrt.rn.f32 	%f1488, %f1487;
	rcp.rn.f32 	%f1489, %f1488;
	mul.f32 	%f1686, %f1478, %f1489;
	mul.f32 	%f1687, %f1481, %f1489;
	mul.f32 	%f1688, %f1484, %f1489;

BB0_145:
	mul.f32 	%f1491, %f1625, %f1687;
	mul.f32 	%f1492, %f1624, %f1688;
	sub.f32 	%f1493, %f1492, %f1491;
	mul.f32 	%f1494, %f1623, %f1688;
	mul.f32 	%f1495, %f1625, %f1686;
	sub.f32 	%f1496, %f1495, %f1494;
	mul.f32 	%f1497, %f1624, %f1686;
	mul.f32 	%f1498, %f1623, %f1687;
	sub.f32 	%f1499, %f1498, %f1497;
	setp.lt.u32	%p165, %r106, 16777216;
	selp.f32	%f1500, 0fBF800000, 0f3F800000, %p165;
	mul.f32 	%f1501, %f1493, %f1500;
	mul.f32 	%f1502, %f1496, %f1500;
	mul.f32 	%f1503, %f1499, %f1500;
	mul.f32 	%f1504, %f1501, 0fBF3504F3;
	mul.f32 	%f1505, %f1502, 0fBF3504F3;
	mul.f32 	%f1506, %f1503, 0fBF3504F3;
	fma.rn.f32 	%f1507, %f1686, 0fBED105EC, %f1504;
	fma.rn.f32 	%f1508, %f1687, 0fBED105EC, %f1505;
	fma.rn.f32 	%f1509, %f1688, 0fBED105EC, %f1506;
	add.f32 	%f1510, %f225, %f1507;
	add.f32 	%f1511, %f227, %f1508;
	add.f32 	%f1512, %f229, %f1509;
	ld.global.f32 	%f1513, [directDir];
	mul.f32 	%f1514, %f226, %f1513;
	ld.global.f32 	%f1515, [directDir+4];
	mul.f32 	%f1516, %f228, %f1515;
	neg.f32 	%f1517, %f1516;
	sub.f32 	%f1518, %f1517, %f1514;
	ld.global.f32 	%f1519, [directDir+8];
	mul.f32 	%f1520, %f230, %f1519;
	sub.f32 	%f1521, %f1518, %f1520;
	cvt.sat.f32.f32	%f1522, %f1521;
	mul.f32 	%f1523, %f164, %f1522;
	mul.f32 	%f1524, %f165, %f1522;
	mul.f32 	%f1525, %f166, %f1522;
	mul.f32 	%f1526, %f237, %f1513;
	mul.f32 	%f1527, %f238, %f1515;
	neg.f32 	%f1528, %f1527;
	sub.f32 	%f1529, %f1528, %f1526;
	mul.f32 	%f1530, %f239, %f1519;
	sub.f32 	%f1531, %f1529, %f1530;
	cvt.sat.f32.f32	%f1532, %f1531;
	mul.f32 	%f1533, %f164, %f1532;
	mul.f32 	%f1534, %f165, %f1532;
	mul.f32 	%f1535, %f166, %f1532;
	mul.f32 	%f1536, %f1510, %f1513;
	mul.f32 	%f1537, %f1511, %f1515;
	neg.f32 	%f1538, %f1537;
	sub.f32 	%f1539, %f1538, %f1536;
	mul.f32 	%f1540, %f1512, %f1519;
	sub.f32 	%f1541, %f1539, %f1540;
	cvt.sat.f32.f32	%f1542, %f1541;
	mul.f32 	%f1543, %f164, %f1542;
	mul.f32 	%f1544, %f165, %f1542;
	mul.f32 	%f1545, %f166, %f1542;
	add.f32 	%f1546, %f1523, %f1533;
	add.f32 	%f1547, %f1524, %f1534;
	add.f32 	%f1548, %f1525, %f1535;
	add.f32 	%f1549, %f1546, %f1543;
	add.f32 	%f1550, %f1547, %f1544;
	add.f32 	%f1551, %f1548, %f1545;
	mul.f32 	%f1552, %f1549, 0f3F13CD3A;
	mul.f32 	%f1553, %f1550, 0f3F13CD3A;
	mul.f32 	%f1554, %f1551, 0f3F13CD3A;
	div.rn.f32 	%f1555, %f147, %f1552;
	div.rn.f32 	%f1556, %f148, %f1553;
	div.rn.f32 	%f1557, %f149, %f1554;
	setp.eq.f32	%p166, %f147, 0f00000000;
	selp.f32	%f1558, 0f00000000, %f1555, %p166;
	setp.eq.f32	%p167, %f148, 0f00000000;
	selp.f32	%f1559, 0f00000000, %f1556, %p167;
	setp.eq.f32	%p168, %f149, 0f00000000;
	selp.f32	%f1560, 0f00000000, %f1557, %p168;
	mul.f32 	%f246, %f1523, %f1558;
	mul.f32 	%f247, %f1524, %f1559;
	mul.f32 	%f248, %f1525, %f1560;
	mul.f32 	%f249, %f1533, %f1558;
	mul.f32 	%f250, %f1534, %f1559;
	mul.f32 	%f251, %f1535, %f1560;
	mul.f32 	%f252, %f1543, %f1558;
	mul.f32 	%f253, %f1544, %f1559;
	mul.f32 	%f254, %f1545, %f1560;
	ld.global.u32 	%r432, [additive];
	setp.eq.s32	%p169, %r432, 0;
	cvt.u64.u32	%rd23, %r2;
	cvt.u64.u32	%rd24, %r3;
	mov.f32 	%f1490, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f1490;}

	// inline asm
	@%p169 bra 	BB0_147;

	mov.u64 	%rd165, image_RNM0;
	cvta.global.u64 	%rd154, %rd165;
	mov.u32 	%r436, 8;
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd154, %r113, %r436, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs84, %rs85, %rs86, %rs87}, [%rd153];
	// inline asm
	{  cvt.f32.f16 %f1561, %rs84;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1562, %rs85;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1563, %rs86;}

	// inline asm
	// inline asm
	call (%rd159), _rt_buffer_get_64, (%rd154, %r113, %r436, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	add.f32 	%f1564, %f246, %f1561;
	add.f32 	%f1565, %f247, %f1562;
	add.f32 	%f1566, %f248, %f1563;
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f1566;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f1565;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f1564;}

	// inline asm
	st.v4.u16 	[%rd159], {%rs81, %rs82, %rs83, %rs77};
	bra.uni 	BB0_148;

BB0_147:
	mov.u64 	%rd172, image_RNM0;
	cvta.global.u64 	%rd167, %rd172;
	mov.u32 	%r438, 8;
	// inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r113, %r438, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f248;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f247;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f246;}

	// inline asm
	st.v4.u16 	[%rd166], {%rs88, %rs89, %rs90, %rs77};

BB0_148:
	ld.global.u32 	%r439, [additive];
	setp.eq.s32	%p170, %r439, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f1490;}

	// inline asm
	@%p170 bra 	BB0_150;

	mov.u64 	%rd185, image_RNM1;
	cvta.global.u64 	%rd174, %rd185;
	mov.u32 	%r443, 8;
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd174, %r113, %r443, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs98, %rs99, %rs100, %rs101}, [%rd173];
	// inline asm
	{  cvt.f32.f16 %f1571, %rs98;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1572, %rs99;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1573, %rs100;}

	// inline asm
	// inline asm
	call (%rd179), _rt_buffer_get_64, (%rd174, %r113, %r443, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	add.f32 	%f1574, %f249, %f1571;
	add.f32 	%f1575, %f250, %f1572;
	add.f32 	%f1576, %f251, %f1573;
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f1576;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs96, %f1575;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs95, %f1574;}

	// inline asm
	st.v4.u16 	[%rd179], {%rs95, %rs96, %rs97, %rs91};
	bra.uni 	BB0_151;

BB0_150:
	mov.u64 	%rd192, image_RNM1;
	cvta.global.u64 	%rd187, %rd192;
	mov.u32 	%r445, 8;
	// inline asm
	call (%rd186), _rt_buffer_get_64, (%rd187, %r113, %r445, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f251;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs103, %f250;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs102, %f249;}

	// inline asm
	st.v4.u16 	[%rd186], {%rs102, %rs103, %rs104, %rs91};

BB0_151:
	ld.global.u32 	%r446, [additive];
	setp.eq.s32	%p171, %r446, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs105, %f1490;}

	// inline asm
	@%p171 bra 	BB0_153;

	mov.u64 	%rd205, image_RNM2;
	cvta.global.u64 	%rd194, %rd205;
	mov.u32 	%r450, 8;
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd194, %r113, %r450, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs112, %rs113, %rs114, %rs115}, [%rd193];
	// inline asm
	{  cvt.f32.f16 %f1581, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1582, %rs113;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1583, %rs114;}

	// inline asm
	// inline asm
	call (%rd199), _rt_buffer_get_64, (%rd194, %r113, %r450, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	add.f32 	%f1584, %f252, %f1581;
	add.f32 	%f1585, %f253, %f1582;
	add.f32 	%f1586, %f254, %f1583;
	// inline asm
	{  cvt.rn.f16.f32 %rs111, %f1586;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f1585;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1584;}

	// inline asm
	st.v4.u16 	[%rd199], {%rs109, %rs110, %rs111, %rs105};
	bra.uni 	BB0_171;

BB0_153:
	mov.u64 	%rd212, image_RNM2;
	cvta.global.u64 	%rd207, %rd212;
	mov.u32 	%r452, 8;
	// inline asm
	call (%rd206), _rt_buffer_get_64, (%rd207, %r113, %r452, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs118, %f254;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f253;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f252;}

	// inline asm
	st.v4.u16 	[%rd206], {%rs116, %rs117, %rs118, %rs105};

BB0_171:
	ret;
}


