//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 1 .b8 rnd_seeds2[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[44];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<142>;
	.reg .b16 	%rs<47>;
	.reg .f32 	%f<906>;
	.reg .b32 	%r<366>;
	.reg .b64 	%rd<157>;


	mov.u64 	%rd156, __local_depot0;
	cvta.local.u64 	%SP, %rd156;
	ld.global.u32 	%r1, [lightMeshBufferSize];
	abs.s32 	%r2, %r1;
	ld.global.u32 	%r3, [samples];
	ld.global.v2.u32 	{%r105, %r106}, [pixelID];
	cvt.u64.u32	%rd22, %r105;
	cvt.u64.u32	%rd23, %r106;
	mov.u64 	%rd26, uvnormal;
	cvta.global.u64 	%rd21, %rd26;
	mov.u32 	%r103, 2;
	mov.u32 	%r104, 4;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r103, %r104, %rd22, %rd23, %rd25, %rd25);
	// inline asm
	ld.u32 	%r4, [%rd20];
	shr.u32 	%r109, %r4, 16;
	cvt.u16.u32	%rs1, %r109;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r4;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p7, %rs5, 0;
	mov.f32 	%f847, 0f00000000;
	mov.f32 	%f848, %f847;
	mov.f32 	%f849, %f847;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs6, [%rd20+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f193, %rs8;
	div.rn.f32 	%f194, %f193, 0f437F0000;
	fma.rn.f32 	%f195, %f194, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f196, %rs6;
	div.rn.f32 	%f197, %f196, 0f437F0000;
	fma.rn.f32 	%f198, %f197, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f199, %rs3;
	div.rn.f32 	%f200, %f199, 0f437F0000;
	fma.rn.f32 	%f201, %f200, 0f40000000, 0fBF800000;
	mul.f32 	%f202, %f198, %f198;
	fma.rn.f32 	%f203, %f195, %f195, %f202;
	fma.rn.f32 	%f204, %f201, %f201, %f203;
	sqrt.rn.f32 	%f205, %f204;
	rcp.rn.f32 	%f206, %f205;
	mul.f32 	%f847, %f195, %f206;
	mul.f32 	%f848, %f198, %f206;
	mul.f32 	%f849, %f201, %f206;

BB0_2:
	ld.global.v2.u32 	{%r110, %r111}, [pixelID];
	ld.global.v2.u32 	{%r113, %r114}, [tileInfo];
	add.s32 	%r5, %r110, %r113;
	add.s32 	%r6, %r111, %r114;
	setp.eq.f32	%p8, %f848, 0f00000000;
	setp.eq.f32	%p9, %f847, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f849, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_130;
	bra.uni 	BB0_3;

BB0_130:
	ld.global.u32 	%r365, [imageEnabled];
	and.b32  	%r315, %r365, 1;
	setp.eq.b32	%p137, %r315, 1;
	@!%p137 bra 	BB0_132;
	bra.uni 	BB0_131;

BB0_131:
	cvt.u64.u32	%rd116, %r5;
	cvt.u64.u32	%rd117, %r6;
	mov.u64 	%rd120, image;
	cvta.global.u64 	%rd115, %rd120;
	// inline asm
	call (%rd114), _rt_buffer_get_64, (%rd115, %r103, %r104, %rd116, %rd117, %rd25, %rd25);
	// inline asm
	mov.u16 	%rs31, 0;
	st.v4.u8 	[%rd114], {%rs31, %rs31, %rs31, %rs31};
	ld.global.u32 	%r365, [imageEnabled];

BB0_132:
	and.b32  	%r318, %r365, 8;
	setp.eq.s32	%p138, %r318, 0;
	@%p138 bra 	BB0_134;

	cvt.u64.u32	%rd123, %r5;
	cvt.u64.u32	%rd124, %r6;
	mov.u64 	%rd127, image_Mask;
	cvta.global.u64 	%rd122, %rd127;
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd122, %r103, %r103, %rd123, %rd124, %rd25, %rd25);
	// inline asm
	mov.f32 	%f830, 0f00000000;
	cvt.rzi.u32.f32	%r321, %f830;
	cvt.u16.u32	%rs32, %r321;
	mov.u16 	%rs33, 0;
	st.v2.u8 	[%rd121], {%rs32, %rs33};
	ld.global.u32 	%r365, [imageEnabled];

BB0_134:
	and.b32  	%r322, %r365, 4;
	setp.eq.s32	%p139, %r322, 0;
	@%p139 bra 	BB0_138;

	ld.global.u32 	%r323, [additive];
	setp.eq.s32	%p140, %r323, 0;
	cvt.u64.u32	%rd18, %r5;
	cvt.u64.u32	%rd19, %r6;
	@%p140 bra 	BB0_137;

	mov.u64 	%rd140, image_HDR;
	cvta.global.u64 	%rd129, %rd140;
	mov.u32 	%r327, 8;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd129, %r103, %r327, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs40, %rs41, %rs42, %rs43}, [%rd128];
	// inline asm
	{  cvt.f32.f16 %f831, %rs40;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f832, %rs41;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f833, %rs42;}

	// inline asm
	// inline asm
	call (%rd134), _rt_buffer_get_64, (%rd129, %r103, %r327, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	add.f32 	%f834, %f831, 0f00000000;
	add.f32 	%f835, %f832, 0f00000000;
	add.f32 	%f836, %f833, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs39, %f836;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f835;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f834;}

	// inline asm
	mov.u16 	%rs44, 0;
	st.v4.u16 	[%rd134], {%rs37, %rs38, %rs39, %rs44};
	bra.uni 	BB0_138;

BB0_3:
	ld.global.v2.u32 	{%r123, %r124}, [pixelID];
	cvt.u64.u32	%rd29, %r123;
	cvt.u64.u32	%rd30, %r124;
	mov.u64 	%rd39, uvpos;
	cvta.global.u64 	%rd28, %rd39;
	mov.u32 	%r119, 12;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r103, %r119, %rd29, %rd30, %rd25, %rd25);
	// inline asm
	ld.f32 	%f9, [%rd27+8];
	ld.f32 	%f8, [%rd27+4];
	ld.f32 	%f7, [%rd27];
	mul.f32 	%f211, %f7, 0f3456BF95;
	mul.f32 	%f212, %f8, 0f3456BF95;
	mul.f32 	%f213, %f9, 0f3456BF95;
	abs.f32 	%f10, %f847;
	div.rn.f32 	%f214, %f211, %f10;
	abs.f32 	%f215, %f848;
	div.rn.f32 	%f216, %f212, %f215;
	abs.f32 	%f11, %f849;
	div.rn.f32 	%f217, %f213, %f11;
	abs.f32 	%f218, %f214;
	abs.f32 	%f219, %f216;
	abs.f32 	%f220, %f217;
	mov.f32 	%f221, 0f38D1B717;
	max.f32 	%f222, %f218, %f221;
	max.f32 	%f223, %f219, %f221;
	max.f32 	%f224, %f220, %f221;
	fma.rn.f32 	%f12, %f847, %f222, %f7;
	fma.rn.f32 	%f13, %f848, %f223, %f8;
	fma.rn.f32 	%f14, %f849, %f224, %f9;
	ld.global.v2.u32 	{%r127, %r128}, [pixelID];
	cvt.u64.u32	%rd35, %r127;
	cvt.u64.u32	%rd36, %r128;
	mov.u64 	%rd40, rnd_seeds;
	cvta.global.u64 	%rd34, %rd40;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r103, %r104, %rd35, %rd36, %rd25, %rd25);
	// inline asm
	ld.u32 	%r341, [%rd33];
	mov.pred 	%p13, 0;
	mov.f32 	%f19, 0f00000000;
	mov.u32 	%r9, 0;
	setp.lt.s32	%p14, %r2, 1;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f15, [lightPointSize];
	mul.f32 	%f16, %f12, 0f3456BF95;
	mul.f32 	%f17, %f13, 0f3456BF95;
	mul.f32 	%f18, %f14, 0f3456BF95;
	mov.f32 	%f19, 0f00000000;
	mov.u32 	%r334, 0;
	abs.f32 	%f352, %f17;
	abs.f32 	%f353, %f16;
	max.f32 	%f354, %f353, %f352;
	abs.f32 	%f355, %f18;
	max.f32 	%f356, %f354, %f355;
	mov.u32 	%r9, %r334;
	mov.f32 	%f20, %f19;
	mov.f32 	%f21, %f19;
	mov.f32 	%f22, %f19;

BB0_6:
	mul.lo.s32 	%r10, %r334, 3;
	cvt.s64.s32	%rd43, %r10;
	mov.u64 	%rd47, lightMeshBuffer;
	cvta.global.u64 	%rd42, %rd47;
	mov.u32 	%r133, 1;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd42, %r133, %r119, %rd43, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f229, [%rd41];
	sub.f32 	%f230, %f229, %f7;
	ld.f32 	%f231, [%rd41+4];
	sub.f32 	%f232, %f231, %f8;
	ld.f32 	%f233, [%rd41+8];
	sub.f32 	%f234, %f233, %f9;
	mul.f32 	%f235, %f232, %f232;
	fma.rn.f32 	%f236, %f230, %f230, %f235;
	fma.rn.f32 	%f237, %f234, %f234, %f236;
	sqrt.rn.f32 	%f23, %f237;
	rcp.rn.f32 	%f238, %f23;
	mul.f32 	%f24, %f230, %f238;
	mul.f32 	%f25, %f232, %f238;
	mul.f32 	%f26, %f234, %f238;
	mul.f32 	%f239, %f848, %f25;
	fma.rn.f32 	%f240, %f847, %f24, %f239;
	fma.rn.f32 	%f27, %f849, %f26, %f240;
	setp.leu.f32	%p15, %f27, 0f00000000;
	@%p15 bra 	BB0_23;

	setp.eq.s32	%p16, %r3, 0;
	mul.f32 	%f241, %f23, %f23;
	div.rn.f32 	%f28, %f15, %f241;
	ld.global.v2.u32 	{%r137, %r138}, [pixelID];
	cvt.u64.u32	%rd54, %r138;
	cvt.u64.u32	%rd55, %r137;
	and.b64  	%rd50, %rd55, 255;
	and.b64  	%rd51, %rd54, 255;
	mov.u64 	%rd56, rnd_seeds2;
	cvta.global.u64 	%rd49, %rd56;
	mov.u32 	%r136, 3;
	// inline asm
	call (%rd48), _rt_buffer_get_64, (%rd49, %r103, %r136, %rd50, %rd51, %rd25, %rd25);
	// inline asm
	@%p16 bra 	BB0_9;

	ld.u8 	%rs10, [%rd48];
	cvt.rn.f32.u16	%f242, %rs10;
	div.rn.f32 	%f243, %f242, 0fC37F0000;
	fma.rn.f32 	%f244, %f243, 0f3F333333, 0f3F800000;
	setp.gt.f32	%p18, %f28, %f244;
	mov.pred 	%p141, -1;
	@%p18 bra 	BB0_25;

BB0_9:
	ld.global.f32 	%f247, [lightInvCutoff];
	mul.f32 	%f29, %f23, %f247;
	mov.f32 	%f251, 0f40800000;
	abs.f32 	%f31, %f29;
	setp.lt.f32	%p19, %f31, 0f00800000;
	mul.f32 	%f253, %f31, 0f4B800000;
	selp.f32	%f254, 0fC3170000, 0fC2FE0000, %p19;
	selp.f32	%f255, %f253, %f31, %p19;
	mov.b32 	 %r141, %f255;
	and.b32  	%r142, %r141, 8388607;
	or.b32  	%r143, %r142, 1065353216;
	mov.b32 	 %f256, %r143;
	shr.u32 	%r144, %r141, 23;
	cvt.rn.f32.u32	%f257, %r144;
	add.f32 	%f258, %f254, %f257;
	setp.gt.f32	%p20, %f256, 0f3FB504F3;
	mul.f32 	%f259, %f256, 0f3F000000;
	add.f32 	%f260, %f258, 0f3F800000;
	selp.f32	%f261, %f259, %f256, %p20;
	selp.f32	%f262, %f260, %f258, %p20;
	add.f32 	%f263, %f261, 0fBF800000;
	add.f32 	%f246, %f261, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f245,%f246;
	// inline asm
	add.f32 	%f264, %f263, %f263;
	mul.f32 	%f265, %f245, %f264;
	mul.f32 	%f266, %f265, %f265;
	mov.f32 	%f267, 0f3C4CAF63;
	mov.f32 	%f268, 0f3B18F0FE;
	fma.rn.f32 	%f269, %f268, %f266, %f267;
	mov.f32 	%f270, 0f3DAAAABD;
	fma.rn.f32 	%f271, %f269, %f266, %f270;
	mul.rn.f32 	%f272, %f271, %f266;
	mul.rn.f32 	%f273, %f272, %f265;
	sub.f32 	%f274, %f263, %f265;
	neg.f32 	%f275, %f265;
	add.f32 	%f276, %f274, %f274;
	fma.rn.f32 	%f277, %f275, %f263, %f276;
	mul.rn.f32 	%f278, %f245, %f277;
	add.f32 	%f279, %f273, %f265;
	sub.f32 	%f280, %f265, %f279;
	add.f32 	%f281, %f273, %f280;
	add.f32 	%f282, %f278, %f281;
	add.f32 	%f283, %f279, %f282;
	sub.f32 	%f284, %f279, %f283;
	add.f32 	%f285, %f282, %f284;
	mov.f32 	%f286, 0f3F317200;
	mul.rn.f32 	%f287, %f262, %f286;
	mov.f32 	%f288, 0f35BFBE8E;
	mul.rn.f32 	%f289, %f262, %f288;
	add.f32 	%f290, %f287, %f283;
	sub.f32 	%f291, %f287, %f290;
	add.f32 	%f292, %f283, %f291;
	add.f32 	%f293, %f285, %f292;
	add.f32 	%f294, %f289, %f293;
	add.f32 	%f295, %f290, %f294;
	sub.f32 	%f296, %f290, %f295;
	add.f32 	%f297, %f294, %f296;
	mul.rn.f32 	%f298, %f251, %f295;
	neg.f32 	%f299, %f298;
	fma.rn.f32 	%f300, %f251, %f295, %f299;
	fma.rn.f32 	%f301, %f251, %f297, %f300;
	mov.f32 	%f302, 0f00000000;
	fma.rn.f32 	%f303, %f302, %f295, %f301;
	add.rn.f32 	%f304, %f298, %f303;
	neg.f32 	%f305, %f304;
	add.rn.f32 	%f306, %f298, %f305;
	add.rn.f32 	%f307, %f306, %f303;
	mov.b32 	 %r145, %f304;
	setp.eq.s32	%p21, %r145, 1118925336;
	add.s32 	%r146, %r145, -1;
	mov.b32 	 %f308, %r146;
	add.f32 	%f309, %f307, 0f37000000;
	selp.f32	%f310, %f308, %f304, %p21;
	selp.f32	%f32, %f309, %f307, %p21;
	mul.f32 	%f311, %f310, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f312, %f311;
	mov.f32 	%f313, 0fBF317200;
	fma.rn.f32 	%f314, %f312, %f313, %f310;
	mov.f32 	%f315, 0fB5BFBE8E;
	fma.rn.f32 	%f316, %f312, %f315, %f314;
	mul.f32 	%f317, %f316, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f318, %f317;
	add.f32 	%f319, %f312, 0f00000000;
	ex2.approx.f32 	%f320, %f319;
	mul.f32 	%f321, %f318, %f320;
	setp.lt.f32	%p22, %f310, 0fC2D20000;
	selp.f32	%f322, 0f00000000, %f321, %p22;
	setp.gt.f32	%p23, %f310, 0f42D20000;
	selp.f32	%f854, 0f7F800000, %f322, %p23;
	setp.eq.f32	%p24, %f854, 0f7F800000;
	@%p24 bra 	BB0_11;

	fma.rn.f32 	%f854, %f854, %f32, %f854;

BB0_11:
	mov.f32 	%f843, 0f40000000;
	cvt.rzi.f32.f32	%f842, %f843;
	add.f32 	%f841, %f842, %f842;
	mov.f32 	%f840, 0f40800000;
	sub.f32 	%f839, %f840, %f841;
	abs.f32 	%f838, %f839;
	setp.lt.f32	%p25, %f29, 0f00000000;
	setp.eq.f32	%p26, %f838, 0f3F800000;
	and.pred  	%p1, %p25, %p26;
	mov.b32 	 %r147, %f854;
	xor.b32  	%r148, %r147, -2147483648;
	mov.b32 	 %f323, %r148;
	selp.f32	%f856, %f323, %f854, %p1;
	setp.eq.f32	%p27, %f29, 0f00000000;
	@%p27 bra 	BB0_14;
	bra.uni 	BB0_12;

BB0_14:
	add.f32 	%f326, %f29, %f29;
	selp.f32	%f856, %f326, 0f00000000, %p26;
	bra.uni 	BB0_15;

BB0_12:
	setp.geu.f32	%p28, %f29, 0f00000000;
	@%p28 bra 	BB0_15;

	mov.f32 	%f846, 0f40800000;
	cvt.rzi.f32.f32	%f325, %f846;
	setp.neu.f32	%p29, %f325, 0f40800000;
	selp.f32	%f856, 0f7FFFFFFF, %f856, %p29;

BB0_15:
	add.f32 	%f327, %f31, 0f40800000;
	mov.b32 	 %r149, %f327;
	setp.lt.s32	%p31, %r149, 2139095040;
	@%p31 bra 	BB0_20;

	setp.gtu.f32	%p32, %f31, 0f7F800000;
	@%p32 bra 	BB0_19;
	bra.uni 	BB0_17;

BB0_19:
	add.f32 	%f856, %f29, 0f40800000;
	bra.uni 	BB0_20;

BB0_17:
	setp.neu.f32	%p33, %f31, 0f7F800000;
	@%p33 bra 	BB0_20;

	selp.f32	%f856, 0fFF800000, 0f7F800000, %p1;

BB0_20:
	mov.u32 	%r331, 1;
	mov.u64 	%rd149, lightMeshBuffer;
	cvta.global.u64 	%rd148, %rd149;
	mul.lo.s32 	%r330, %r334, 3;
	mov.f32 	%f328, 0f3F800000;
	sub.f32 	%f329, %f328, %f856;
	setp.eq.f32	%p34, %f29, 0f3F800000;
	selp.f32	%f330, 0f00000000, %f329, %p34;
	cvt.sat.f32.f32	%f331, %f330;
	mul.f32 	%f332, %f28, %f331;
	add.s32 	%r152, %r330, 1;
	cvt.s64.s32	%rd59, %r152;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd148, %r331, %r119, %rd59, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f333, [%rd57];
	mul.f32 	%f334, %f24, %f333;
	ld.f32 	%f335, [%rd57+4];
	mul.f32 	%f336, %f25, %f335;
	neg.f32 	%f337, %f336;
	sub.f32 	%f338, %f337, %f334;
	ld.f32 	%f339, [%rd57+8];
	mul.f32 	%f340, %f26, %f339;
	sub.f32 	%f341, %f338, %f340;
	cvt.sat.f32.f32	%f342, %f341;
	mul.f32 	%f43, %f332, %f342;
	cvt.sat.f32.f32	%f44, %f27;
	mul.f32 	%f343, %f43, %f44;
	setp.leu.f32	%p35, %f343, 0f3727C5AC;
	@%p35 bra 	BB0_22;

	mov.u32 	%r333, 1;
	mov.u64 	%rd151, lightMeshBuffer;
	cvta.global.u64 	%rd150, %rd151;
	mul.lo.s32 	%r332, %r334, 3;
	add.u64 	%rd64, %SP, 28;
	cvta.to.local.u64 	%rd71, %rd64;
	max.f32 	%f350, %f356, %f221;
	sub.f32 	%f351, %f23, %f350;
	mov.u32 	%r158, 1065353216;
	st.local.u32 	[%rd71], %r158;
	ld.global.u32 	%r153, [root];
	// inline asm
	call _rt_trace_64, (%r153, %f12, %f13, %f14, %f24, %f25, %f26, %r333, %f350, %f351, %rd64, %r104);
	// inline asm
	add.s32 	%r159, %r332, 2;
	cvt.s64.s32	%rd67, %r159;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd150, %r333, %r119, %rd67, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f358, [%rd65];
	ld.local.f32 	%f359, [%rd71];
	mul.f32 	%f360, %f359, %f358;
	ld.f32 	%f361, [%rd65+4];
	mul.f32 	%f362, %f359, %f361;
	ld.f32 	%f363, [%rd65+8];
	mul.f32 	%f364, %f359, %f363;
	mul.f32 	%f365, %f43, 0f3EA2F983;
	mul.f32 	%f366, %f365, %f360;
	mul.f32 	%f367, %f365, %f362;
	mul.f32 	%f368, %f365, %f364;
	fma.rn.f32 	%f22, %f44, %f366, %f22;
	fma.rn.f32 	%f21, %f44, %f367, %f21;
	fma.rn.f32 	%f20, %f44, %f368, %f20;
	add.f32 	%f19, %f19, %f359;

BB0_22:
	add.s32 	%r9, %r9, 1;

BB0_23:
	add.s32 	%r334, %r334, 1;
	setp.lt.s32	%p37, %r334, %r2;
	@%p37 bra 	BB0_6;
	bra.uni 	BB0_24;

BB0_4:
	mov.f32 	%f20, %f19;
	mov.f32 	%f21, %f19;
	mov.f32 	%f22, %f19;

BB0_24:
	mov.pred 	%p141, %p13;

BB0_25:
	cvt.rn.f32.s32	%f369, %r9;
	mov.f32 	%f370, 0f3F800000;
	max.f32 	%f371, %f369, %f370;
	rcp.rn.f32 	%f372, %f371;
	mul.f32 	%f890, %f22, %f372;
	mul.f32 	%f891, %f21, %f372;
	mul.f32 	%f892, %f20, %f372;
	div.rn.f32 	%f893, %f19, %f371;
	@!%p141 bra 	BB0_78;
	bra.uni 	BB0_26;

BB0_26:
	abs.f32 	%f845, %f849;
	abs.f32 	%f844, %f847;
	setp.gt.f32	%p38, %f844, %f845;
	neg.f32 	%f376, %f848;
	selp.f32	%f377, %f376, 0f00000000, %p38;
	neg.f32 	%f378, %f849;
	selp.f32	%f379, %f847, %f378, %p38;
	selp.f32	%f380, 0f00000000, %f848, %p38;
	mul.f32 	%f381, %f379, %f379;
	fma.rn.f32 	%f382, %f377, %f377, %f381;
	fma.rn.f32 	%f383, %f380, %f380, %f382;
	sqrt.rn.f32 	%f384, %f383;
	rcp.rn.f32 	%f385, %f384;
	mul.f32 	%f65, %f377, %f385;
	mul.f32 	%f66, %f379, %f385;
	mul.f32 	%f67, %f380, %f385;
	mov.f32 	%f375, 0f00000000;
	setp.lt.s32	%p39, %r3, 1;
	mov.f32 	%f872, %f375;
	mov.f32 	%f873, %f375;
	mov.f32 	%f874, %f375;
	@%p39 bra 	BB0_77;

	cvt.rn.f32.s32	%f389, %r3;
	rcp.rn.f32 	%f68, %f389;
	add.u64 	%rd73, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd73;
	mul.f32 	%f69, %f12, 0f3456BF95;
	mul.f32 	%f70, %f13, 0f3456BF95;
	mul.f32 	%f71, %f14, 0f3456BF95;
	add.u64 	%rd74, %SP, 32;
	cvta.to.local.u64 	%rd4, %rd74;
	mul.f32 	%f390, %f847, %f66;
	mul.f32 	%f391, %f848, %f65;
	sub.f32 	%f72, %f391, %f390;
	mul.f32 	%f392, %f849, %f65;
	mul.f32 	%f393, %f847, %f67;
	sub.f32 	%f73, %f393, %f392;
	mul.f32 	%f394, %f848, %f67;
	mul.f32 	%f395, %f849, %f66;
	sub.f32 	%f74, %f395, %f394;
	mov.f32 	%f872, 0f00000000;
	mov.u32 	%r160, 0;
	abs.f32 	%f396, %f70;
	abs.f32 	%f397, %f69;
	max.f32 	%f398, %f397, %f396;
	abs.f32 	%f399, %f71;
	max.f32 	%f400, %f398, %f399;
	mov.u32 	%r338, %r160;
	mov.f32 	%f873, %f872;
	mov.f32 	%f874, %f872;

BB0_28:
	cvt.rn.f32.s32	%f78, %r338;
	max.f32 	%f79, %f400, %f221;
	mov.u32 	%r340, %r160;

BB0_29:
	mad.lo.s32 	%r162, %r341, 1664525, 1013904223;
	and.b32  	%r163, %r162, 16777215;
	cvt.rn.f32.u32	%f402, %r163;
	fma.rn.f32 	%f403, %f402, 0f33800000, %f78;
	mul.f32 	%f404, %f68, %f403;
	mad.lo.s32 	%r341, %r162, 1664525, 1013904223;
	and.b32  	%r164, %r341, 16777215;
	cvt.rn.f32.u32	%f405, %r164;
	cvt.rn.f32.s32	%f406, %r340;
	fma.rn.f32 	%f407, %f405, 0f33800000, %f406;
	mul.f32 	%f408, %f68, %f407;
	sqrt.rn.f32 	%f83, %f404;
	mul.f32 	%f881, %f408, 0f40C90FDB;
	abs.f32 	%f85, %f881;
	setp.neu.f32	%p40, %f85, 0f7F800000;
	mov.f32 	%f875, %f881;
	@%p40 bra 	BB0_31;

	mov.f32 	%f409, 0f00000000;
	mul.rn.f32 	%f875, %f881, %f409;

BB0_31:
	mul.f32 	%f410, %f875, 0f3F22F983;
	cvt.rni.s32.f32	%r351, %f410;
	cvt.rn.f32.s32	%f411, %r351;
	neg.f32 	%f412, %f411;
	mov.f32 	%f413, 0f3FC90FDA;
	fma.rn.f32 	%f414, %f412, %f413, %f875;
	mov.f32 	%f415, 0f33A22168;
	fma.rn.f32 	%f416, %f412, %f415, %f414;
	mov.f32 	%f417, 0f27C234C5;
	fma.rn.f32 	%f876, %f412, %f417, %f416;
	abs.f32 	%f418, %f875;
	setp.leu.f32	%p41, %f418, 0f47CE4780;
	@%p41 bra 	BB0_42;

	mov.b32 	 %r21, %f875;
	shr.u32 	%r22, %r21, 23;
	shl.b32 	%r167, %r21, 8;
	or.b32  	%r23, %r167, -2147483648;
	mov.u32 	%r343, 0;
	mov.u64 	%rd152, __cudart_i2opi_f;
	mov.u32 	%r342, -6;
	mov.u64 	%rd153, %rd3;

BB0_33:
	.pragma "nounroll";
	ld.const.u32 	%r170, [%rd152];
	// inline asm
	{
	mad.lo.cc.u32   %r168, %r170, %r23, %r343;
	madc.hi.u32     %r343, %r170, %r23,  0;
	}
	// inline asm
	st.local.u32 	[%rd153], %r168;
	add.s64 	%rd153, %rd153, 4;
	add.s64 	%rd152, %rd152, 4;
	add.s32 	%r342, %r342, 1;
	setp.ne.s32	%p42, %r342, 0;
	@%p42 bra 	BB0_33;

	and.b32  	%r173, %r22, 255;
	add.s32 	%r174, %r173, -128;
	shr.u32 	%r175, %r174, 5;
	and.b32  	%r28, %r21, -2147483648;
	st.local.u32 	[%rd3+24], %r343;
	mov.u32 	%r176, 6;
	sub.s32 	%r177, %r176, %r175;
	mul.wide.s32 	%rd76, %r177, 4;
	add.s64 	%rd9, %rd3, %rd76;
	ld.local.u32 	%r344, [%rd9];
	ld.local.u32 	%r345, [%rd9+-4];
	and.b32  	%r31, %r22, 31;
	setp.eq.s32	%p43, %r31, 0;
	@%p43 bra 	BB0_36;

	mov.u32 	%r178, 32;
	sub.s32 	%r179, %r178, %r31;
	shr.u32 	%r180, %r345, %r179;
	shl.b32 	%r181, %r344, %r31;
	add.s32 	%r344, %r180, %r181;
	ld.local.u32 	%r182, [%rd9+-8];
	shr.u32 	%r183, %r182, %r179;
	shl.b32 	%r184, %r345, %r31;
	add.s32 	%r345, %r183, %r184;

BB0_36:
	shr.u32 	%r185, %r345, 30;
	shl.b32 	%r186, %r344, 2;
	add.s32 	%r346, %r185, %r186;
	shl.b32 	%r37, %r345, 2;
	shr.u32 	%r187, %r346, 31;
	shr.u32 	%r188, %r344, 30;
	add.s32 	%r38, %r187, %r188;
	setp.eq.s32	%p44, %r187, 0;
	@%p44 bra 	BB0_37;
	bra.uni 	BB0_38;

BB0_37:
	mov.u32 	%r347, %r28;
	mov.u32 	%r348, %r37;
	bra.uni 	BB0_39;

BB0_38:
	not.b32 	%r189, %r346;
	neg.s32 	%r348, %r37;
	setp.eq.s32	%p45, %r37, 0;
	selp.u32	%r190, 1, 0, %p45;
	add.s32 	%r346, %r190, %r189;
	xor.b32  	%r347, %r28, -2147483648;

BB0_39:
	clz.b32 	%r350, %r346;
	setp.eq.s32	%p46, %r350, 0;
	shl.b32 	%r191, %r346, %r350;
	mov.u32 	%r192, 32;
	sub.s32 	%r193, %r192, %r350;
	shr.u32 	%r194, %r348, %r193;
	add.s32 	%r195, %r194, %r191;
	selp.b32	%r46, %r346, %r195, %p46;
	mov.u32 	%r196, -921707870;
	mul.hi.u32 	%r349, %r46, %r196;
	setp.eq.s32	%p47, %r28, 0;
	neg.s32 	%r197, %r38;
	selp.b32	%r351, %r38, %r197, %p47;
	setp.lt.s32	%p48, %r349, 1;
	@%p48 bra 	BB0_41;

	mul.lo.s32 	%r198, %r46, -921707870;
	shr.u32 	%r199, %r198, 31;
	shl.b32 	%r200, %r349, 1;
	add.s32 	%r349, %r199, %r200;
	add.s32 	%r350, %r350, 1;

BB0_41:
	mov.u32 	%r201, 126;
	sub.s32 	%r202, %r201, %r350;
	shl.b32 	%r203, %r202, 23;
	add.s32 	%r204, %r349, 1;
	shr.u32 	%r205, %r204, 7;
	add.s32 	%r206, %r205, 1;
	shr.u32 	%r207, %r206, 1;
	add.s32 	%r208, %r207, %r203;
	or.b32  	%r209, %r208, %r347;
	mov.b32 	 %f876, %r209;

BB0_42:
	mul.rn.f32 	%f91, %f876, %f876;
	add.s32 	%r54, %r351, 1;
	and.b32  	%r55, %r54, 1;
	setp.eq.s32	%p49, %r55, 0;
	@%p49 bra 	BB0_44;
	bra.uni 	BB0_43;

BB0_44:
	mov.f32 	%f421, 0f3C08839E;
	mov.f32 	%f422, 0fB94CA1F9;
	fma.rn.f32 	%f877, %f422, %f91, %f421;
	bra.uni 	BB0_45;

BB0_43:
	mov.f32 	%f419, 0fBAB6061A;
	mov.f32 	%f420, 0f37CCF5CE;
	fma.rn.f32 	%f877, %f420, %f91, %f419;

BB0_45:
	@%p49 bra 	BB0_47;
	bra.uni 	BB0_46;

BB0_47:
	mov.f32 	%f426, 0fBE2AAAA3;
	fma.rn.f32 	%f427, %f877, %f91, %f426;
	mov.f32 	%f428, 0f00000000;
	fma.rn.f32 	%f878, %f427, %f91, %f428;
	bra.uni 	BB0_48;

BB0_46:
	mov.f32 	%f423, 0f3D2AAAA5;
	fma.rn.f32 	%f424, %f877, %f91, %f423;
	mov.f32 	%f425, 0fBF000000;
	fma.rn.f32 	%f878, %f424, %f91, %f425;

BB0_48:
	fma.rn.f32 	%f879, %f878, %f876, %f876;
	@%p49 bra 	BB0_50;

	fma.rn.f32 	%f879, %f878, %f91, %f370;

BB0_50:
	and.b32  	%r210, %r54, 2;
	setp.eq.s32	%p52, %r210, 0;
	@%p52 bra 	BB0_52;

	mov.f32 	%f430, 0f00000000;
	mov.f32 	%f431, 0fBF800000;
	fma.rn.f32 	%f879, %f879, %f431, %f430;

BB0_52:
	@%p40 bra 	BB0_54;

	mov.f32 	%f432, 0f00000000;
	mul.rn.f32 	%f881, %f881, %f432;

BB0_54:
	mul.f32 	%f433, %f881, 0f3F22F983;
	cvt.rni.s32.f32	%r361, %f433;
	cvt.rn.f32.s32	%f434, %r361;
	neg.f32 	%f435, %f434;
	fma.rn.f32 	%f437, %f435, %f413, %f881;
	fma.rn.f32 	%f439, %f435, %f415, %f437;
	fma.rn.f32 	%f882, %f435, %f417, %f439;
	abs.f32 	%f441, %f881;
	setp.leu.f32	%p54, %f441, 0f47CE4780;
	@%p54 bra 	BB0_65;

	mov.b32 	 %r57, %f881;
	shr.u32 	%r58, %r57, 23;
	shl.b32 	%r213, %r57, 8;
	or.b32  	%r59, %r213, -2147483648;
	mov.u32 	%r353, 0;
	mov.u64 	%rd154, __cudart_i2opi_f;
	mov.u32 	%r352, -6;
	mov.u64 	%rd155, %rd3;

BB0_56:
	.pragma "nounroll";
	ld.const.u32 	%r216, [%rd154];
	// inline asm
	{
	mad.lo.cc.u32   %r214, %r216, %r59, %r353;
	madc.hi.u32     %r353, %r216, %r59,  0;
	}
	// inline asm
	st.local.u32 	[%rd155], %r214;
	add.s64 	%rd155, %rd155, 4;
	add.s64 	%rd154, %rd154, 4;
	add.s32 	%r352, %r352, 1;
	setp.ne.s32	%p55, %r352, 0;
	@%p55 bra 	BB0_56;

	and.b32  	%r219, %r58, 255;
	add.s32 	%r220, %r219, -128;
	shr.u32 	%r221, %r220, 5;
	and.b32  	%r64, %r57, -2147483648;
	st.local.u32 	[%rd3+24], %r353;
	mov.u32 	%r222, 6;
	sub.s32 	%r223, %r222, %r221;
	mul.wide.s32 	%rd78, %r223, 4;
	add.s64 	%rd14, %rd3, %rd78;
	ld.local.u32 	%r354, [%rd14];
	ld.local.u32 	%r355, [%rd14+-4];
	and.b32  	%r67, %r58, 31;
	setp.eq.s32	%p56, %r67, 0;
	@%p56 bra 	BB0_59;

	mov.u32 	%r224, 32;
	sub.s32 	%r225, %r224, %r67;
	shr.u32 	%r226, %r355, %r225;
	shl.b32 	%r227, %r354, %r67;
	add.s32 	%r354, %r226, %r227;
	ld.local.u32 	%r228, [%rd14+-8];
	shr.u32 	%r229, %r228, %r225;
	shl.b32 	%r230, %r355, %r67;
	add.s32 	%r355, %r229, %r230;

BB0_59:
	shr.u32 	%r231, %r355, 30;
	shl.b32 	%r232, %r354, 2;
	add.s32 	%r356, %r231, %r232;
	shl.b32 	%r73, %r355, 2;
	shr.u32 	%r233, %r356, 31;
	shr.u32 	%r234, %r354, 30;
	add.s32 	%r74, %r233, %r234;
	setp.eq.s32	%p57, %r233, 0;
	@%p57 bra 	BB0_60;
	bra.uni 	BB0_61;

BB0_60:
	mov.u32 	%r357, %r64;
	mov.u32 	%r358, %r73;
	bra.uni 	BB0_62;

BB0_61:
	not.b32 	%r235, %r356;
	neg.s32 	%r358, %r73;
	setp.eq.s32	%p58, %r73, 0;
	selp.u32	%r236, 1, 0, %p58;
	add.s32 	%r356, %r236, %r235;
	xor.b32  	%r357, %r64, -2147483648;

BB0_62:
	clz.b32 	%r360, %r356;
	setp.eq.s32	%p59, %r360, 0;
	shl.b32 	%r237, %r356, %r360;
	mov.u32 	%r238, 32;
	sub.s32 	%r239, %r238, %r360;
	shr.u32 	%r240, %r358, %r239;
	add.s32 	%r241, %r240, %r237;
	selp.b32	%r82, %r356, %r241, %p59;
	mov.u32 	%r242, -921707870;
	mul.hi.u32 	%r359, %r82, %r242;
	setp.eq.s32	%p60, %r64, 0;
	neg.s32 	%r243, %r74;
	selp.b32	%r361, %r74, %r243, %p60;
	setp.lt.s32	%p61, %r359, 1;
	@%p61 bra 	BB0_64;

	mul.lo.s32 	%r244, %r82, -921707870;
	shr.u32 	%r245, %r244, 31;
	shl.b32 	%r246, %r359, 1;
	add.s32 	%r359, %r245, %r246;
	add.s32 	%r360, %r360, 1;

BB0_64:
	mov.u32 	%r247, 126;
	sub.s32 	%r248, %r247, %r360;
	shl.b32 	%r249, %r248, 23;
	add.s32 	%r250, %r359, 1;
	shr.u32 	%r251, %r250, 7;
	add.s32 	%r252, %r251, 1;
	shr.u32 	%r253, %r252, 1;
	add.s32 	%r254, %r253, %r249;
	or.b32  	%r255, %r254, %r357;
	mov.b32 	 %f882, %r255;

BB0_65:
	mul.rn.f32 	%f108, %f882, %f882;
	and.b32  	%r90, %r361, 1;
	setp.eq.s32	%p62, %r90, 0;
	@%p62 bra 	BB0_67;
	bra.uni 	BB0_66;

BB0_67:
	mov.f32 	%f444, 0f3C08839E;
	mov.f32 	%f445, 0fB94CA1F9;
	fma.rn.f32 	%f883, %f445, %f108, %f444;
	bra.uni 	BB0_68;

BB0_66:
	mov.f32 	%f442, 0fBAB6061A;
	mov.f32 	%f443, 0f37CCF5CE;
	fma.rn.f32 	%f883, %f443, %f108, %f442;

BB0_68:
	@%p62 bra 	BB0_70;
	bra.uni 	BB0_69;

BB0_70:
	mov.f32 	%f449, 0fBE2AAAA3;
	fma.rn.f32 	%f450, %f883, %f108, %f449;
	mov.f32 	%f451, 0f00000000;
	fma.rn.f32 	%f884, %f450, %f108, %f451;
	bra.uni 	BB0_71;

BB0_69:
	mov.f32 	%f446, 0f3D2AAAA5;
	fma.rn.f32 	%f447, %f883, %f108, %f446;
	mov.f32 	%f448, 0fBF000000;
	fma.rn.f32 	%f884, %f447, %f108, %f448;

BB0_71:
	fma.rn.f32 	%f885, %f884, %f882, %f882;
	@%p62 bra 	BB0_73;

	fma.rn.f32 	%f885, %f884, %f108, %f370;

BB0_73:
	and.b32  	%r256, %r361, 2;
	setp.eq.s32	%p65, %r256, 0;
	@%p65 bra 	BB0_75;

	mov.f32 	%f453, 0f00000000;
	mov.f32 	%f454, 0fBF800000;
	fma.rn.f32 	%f885, %f885, %f454, %f453;

BB0_75:
	mul.f32 	%f463, %f83, %f879;
	mul.f32 	%f464, %f463, %f463;
	sub.f32 	%f466, %f370, %f464;
	mul.f32 	%f467, %f83, %f885;
	mul.f32 	%f468, %f467, %f467;
	sub.f32 	%f469, %f466, %f468;
	mov.f32 	%f470, 0f00000000;
	max.f32 	%f471, %f470, %f469;
	sqrt.rn.f32 	%f472, %f471;
	mul.f32 	%f473, %f65, %f467;
	mul.f32 	%f474, %f66, %f467;
	mul.f32 	%f475, %f67, %f467;
	fma.rn.f32 	%f476, %f74, %f463, %f473;
	fma.rn.f32 	%f477, %f73, %f463, %f474;
	fma.rn.f32 	%f478, %f72, %f463, %f475;
	fma.rn.f32 	%f458, %f847, %f472, %f476;
	fma.rn.f32 	%f459, %f848, %f472, %f477;
	fma.rn.f32 	%f460, %f849, %f472, %f478;
	mov.u32 	%r258, 0;
	st.local.u32 	[%rd4+8], %r258;
	st.local.u32 	[%rd4+4], %r258;
	st.local.u32 	[%rd4], %r258;
	ld.global.u32 	%r257, [root];
	mov.f32 	%f462, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r257, %f12, %f13, %f14, %f458, %f459, %f460, %r258, %f79, %f462, %rd74, %r119);
	// inline asm
	ld.local.f32 	%f479, [%rd4];
	max.f32 	%f480, %f479, %f470;
	ld.local.f32 	%f481, [%rd4+4];
	max.f32 	%f482, %f481, %f470;
	ld.local.f32 	%f483, [%rd4+8];
	max.f32 	%f484, %f483, %f470;
	add.f32 	%f874, %f874, %f480;
	add.f32 	%f873, %f873, %f482;
	add.f32 	%f872, %f872, %f484;
	add.s32 	%r340, %r340, 1;
	setp.lt.s32	%p66, %r340, %r3;
	@%p66 bra 	BB0_29;

	add.s32 	%r338, %r338, 1;
	setp.lt.s32	%p67, %r338, %r3;
	@%p67 bra 	BB0_28;

BB0_77:
	mul.lo.s32 	%r260, %r3, %r3;
	cvt.rn.f32.s32	%f485, %r260;
	rcp.rn.f32 	%f486, %f485;
	mul.f32 	%f890, %f874, %f486;
	mul.f32 	%f891, %f873, %f486;
	mul.f32 	%f892, %f872, %f486;
	div.rn.f32 	%f893, %f375, %f485;

BB0_78:
	setp.gt.s32	%p68, %r1, -1;
	selp.f32	%f134, %f893, %f890, %p68;
	ld.global.u32 	%r363, [imageEnabled];
	and.b32  	%r261, %r363, 8;
	setp.eq.s32	%p69, %r261, 0;
	@%p69 bra 	BB0_91;

	cvt.u64.u32	%rd82, %r5;
	cvt.u64.u32	%rd83, %r6;
	mov.u64 	%rd86, image_Mask;
	cvta.global.u64 	%rd81, %rd86;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r103, %r103, %rd82, %rd83, %rd25, %rd25);
	// inline asm
	mov.f32 	%f490, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f491, %f490;
	fma.rn.f32 	%f492, %f491, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f135, %f492;
	abs.f32 	%f136, %f134;
	setp.lt.f32	%p70, %f136, 0f00800000;
	mul.f32 	%f493, %f136, 0f4B800000;
	selp.f32	%f494, 0fC3170000, 0fC2FE0000, %p70;
	selp.f32	%f495, %f493, %f136, %p70;
	mov.b32 	 %r264, %f495;
	and.b32  	%r265, %r264, 8388607;
	or.b32  	%r266, %r265, 1065353216;
	mov.b32 	 %f496, %r266;
	shr.u32 	%r267, %r264, 23;
	cvt.rn.f32.u32	%f497, %r267;
	add.f32 	%f498, %f494, %f497;
	setp.gt.f32	%p71, %f496, 0f3FB504F3;
	mul.f32 	%f499, %f496, 0f3F000000;
	add.f32 	%f500, %f498, 0f3F800000;
	selp.f32	%f501, %f499, %f496, %p71;
	selp.f32	%f502, %f500, %f498, %p71;
	add.f32 	%f503, %f501, 0fBF800000;
	add.f32 	%f489, %f501, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f488,%f489;
	// inline asm
	add.f32 	%f504, %f503, %f503;
	mul.f32 	%f505, %f488, %f504;
	mul.f32 	%f506, %f505, %f505;
	mov.f32 	%f507, 0f3C4CAF63;
	mov.f32 	%f508, 0f3B18F0FE;
	fma.rn.f32 	%f509, %f508, %f506, %f507;
	mov.f32 	%f510, 0f3DAAAABD;
	fma.rn.f32 	%f511, %f509, %f506, %f510;
	mul.rn.f32 	%f512, %f511, %f506;
	mul.rn.f32 	%f513, %f512, %f505;
	sub.f32 	%f514, %f503, %f505;
	neg.f32 	%f515, %f505;
	add.f32 	%f516, %f514, %f514;
	fma.rn.f32 	%f517, %f515, %f503, %f516;
	mul.rn.f32 	%f518, %f488, %f517;
	add.f32 	%f519, %f513, %f505;
	sub.f32 	%f520, %f505, %f519;
	add.f32 	%f521, %f513, %f520;
	add.f32 	%f522, %f518, %f521;
	add.f32 	%f523, %f519, %f522;
	sub.f32 	%f524, %f519, %f523;
	add.f32 	%f525, %f522, %f524;
	mov.f32 	%f526, 0f3F317200;
	mul.rn.f32 	%f527, %f502, %f526;
	mov.f32 	%f528, 0f35BFBE8E;
	mul.rn.f32 	%f529, %f502, %f528;
	add.f32 	%f530, %f527, %f523;
	sub.f32 	%f531, %f527, %f530;
	add.f32 	%f532, %f523, %f531;
	add.f32 	%f533, %f525, %f532;
	add.f32 	%f534, %f529, %f533;
	add.f32 	%f535, %f530, %f534;
	sub.f32 	%f536, %f530, %f535;
	add.f32 	%f537, %f534, %f536;
	mov.f32 	%f538, 0f3EE8BA2E;
	mul.rn.f32 	%f539, %f538, %f535;
	neg.f32 	%f540, %f539;
	fma.rn.f32 	%f541, %f538, %f535, %f540;
	fma.rn.f32 	%f542, %f538, %f537, %f541;
	mov.f32 	%f543, 0f00000000;
	fma.rn.f32 	%f544, %f543, %f535, %f542;
	add.rn.f32 	%f545, %f539, %f544;
	neg.f32 	%f546, %f545;
	add.rn.f32 	%f547, %f539, %f546;
	add.rn.f32 	%f548, %f547, %f544;
	mov.b32 	 %r268, %f545;
	setp.eq.s32	%p72, %r268, 1118925336;
	add.s32 	%r269, %r268, -1;
	mov.b32 	 %f549, %r269;
	add.f32 	%f550, %f548, 0f37000000;
	selp.f32	%f551, %f549, %f545, %p72;
	selp.f32	%f137, %f550, %f548, %p72;
	mul.f32 	%f552, %f551, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f553, %f552;
	mov.f32 	%f554, 0fBF317200;
	fma.rn.f32 	%f555, %f553, %f554, %f551;
	mov.f32 	%f556, 0fB5BFBE8E;
	fma.rn.f32 	%f557, %f553, %f556, %f555;
	mul.f32 	%f558, %f557, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f559, %f558;
	add.f32 	%f560, %f553, 0f00000000;
	ex2.approx.f32 	%f561, %f560;
	mul.f32 	%f562, %f559, %f561;
	setp.lt.f32	%p73, %f551, 0fC2D20000;
	selp.f32	%f563, 0f00000000, %f562, %p73;
	setp.gt.f32	%p74, %f551, 0f42D20000;
	selp.f32	%f894, 0f7F800000, %f563, %p74;
	setp.eq.f32	%p75, %f894, 0f7F800000;
	@%p75 bra 	BB0_81;

	fma.rn.f32 	%f894, %f894, %f137, %f894;

BB0_81:
	setp.lt.f32	%p76, %f134, 0f00000000;
	setp.eq.f32	%p77, %f135, 0f3F800000;
	and.pred  	%p3, %p76, %p77;
	mov.b32 	 %r270, %f894;
	xor.b32  	%r271, %r270, -2147483648;
	mov.b32 	 %f564, %r271;
	selp.f32	%f896, %f564, %f894, %p3;
	setp.eq.f32	%p78, %f134, 0f00000000;
	@%p78 bra 	BB0_84;
	bra.uni 	BB0_82;

BB0_84:
	add.f32 	%f567, %f134, %f134;
	selp.f32	%f896, %f567, 0f00000000, %p77;
	bra.uni 	BB0_85;

BB0_137:
	mov.u64 	%rd147, image_HDR;
	cvta.global.u64 	%rd142, %rd147;
	mov.u32 	%r329, 8;
	// inline asm
	call (%rd141), _rt_buffer_get_64, (%rd142, %r103, %r329, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	mov.f32 	%f837, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f837;}

	// inline asm
	mov.u16 	%rs46, 0;
	st.v4.u16 	[%rd141], {%rs45, %rs45, %rs45, %rs46};
	bra.uni 	BB0_138;

BB0_82:
	setp.geu.f32	%p79, %f134, 0f00000000;
	@%p79 bra 	BB0_85;

	cvt.rzi.f32.f32	%f566, %f538;
	setp.neu.f32	%p80, %f566, 0f3EE8BA2E;
	selp.f32	%f896, 0f7FFFFFFF, %f896, %p80;

BB0_85:
	add.f32 	%f568, %f136, 0f3EE8BA2E;
	mov.b32 	 %r272, %f568;
	setp.lt.s32	%p82, %r272, 2139095040;
	@%p82 bra 	BB0_90;

	setp.gtu.f32	%p83, %f136, 0f7F800000;
	@%p83 bra 	BB0_89;
	bra.uni 	BB0_87;

BB0_89:
	add.f32 	%f896, %f134, 0f3EE8BA2E;
	bra.uni 	BB0_90;

BB0_87:
	setp.neu.f32	%p84, %f136, 0f7F800000;
	@%p84 bra 	BB0_90;

	selp.f32	%f896, 0fFF800000, 0f7F800000, %p3;

BB0_90:
	mul.f32 	%f569, %f896, 0f437F0000;
	setp.eq.f32	%p85, %f134, 0f3F800000;
	selp.f32	%f570, 0f437F0000, %f569, %p85;
	cvt.rzi.u32.f32	%r273, %f570;
	cvt.u16.u32	%rs11, %r273;
	mov.u16 	%rs12, 255;
	st.v2.u8 	[%rd80], {%rs11, %rs12};
	ld.global.u32 	%r363, [imageEnabled];

BB0_91:
	ld.global.f32 	%f571, [lightColor];
	mul.f32 	%f148, %f890, %f571;
	ld.global.f32 	%f572, [lightColor+4];
	mul.f32 	%f149, %f891, %f572;
	ld.global.f32 	%f573, [lightColor+8];
	mul.f32 	%f150, %f892, %f573;
	and.b32  	%r274, %r363, 1;
	setp.eq.b32	%p86, %r274, 1;
	@!%p86 bra 	BB0_126;
	bra.uni 	BB0_92;

BB0_92:
	mov.f32 	%f576, 0f3E666666;
	cvt.rzi.f32.f32	%f577, %f576;
	fma.rn.f32 	%f578, %f577, 0fC0000000, 0f3EE66666;
	abs.f32 	%f151, %f578;
	abs.f32 	%f152, %f148;
	setp.lt.f32	%p87, %f152, 0f00800000;
	mul.f32 	%f579, %f152, 0f4B800000;
	selp.f32	%f580, 0fC3170000, 0fC2FE0000, %p87;
	selp.f32	%f581, %f579, %f152, %p87;
	mov.b32 	 %r275, %f581;
	and.b32  	%r276, %r275, 8388607;
	or.b32  	%r277, %r276, 1065353216;
	mov.b32 	 %f582, %r277;
	shr.u32 	%r278, %r275, 23;
	cvt.rn.f32.u32	%f583, %r278;
	add.f32 	%f584, %f580, %f583;
	setp.gt.f32	%p88, %f582, 0f3FB504F3;
	mul.f32 	%f585, %f582, 0f3F000000;
	add.f32 	%f586, %f584, 0f3F800000;
	selp.f32	%f587, %f585, %f582, %p88;
	selp.f32	%f588, %f586, %f584, %p88;
	add.f32 	%f589, %f587, 0fBF800000;
	add.f32 	%f575, %f587, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f574,%f575;
	// inline asm
	add.f32 	%f590, %f589, %f589;
	mul.f32 	%f591, %f574, %f590;
	mul.f32 	%f592, %f591, %f591;
	mov.f32 	%f593, 0f3C4CAF63;
	mov.f32 	%f594, 0f3B18F0FE;
	fma.rn.f32 	%f595, %f594, %f592, %f593;
	mov.f32 	%f596, 0f3DAAAABD;
	fma.rn.f32 	%f597, %f595, %f592, %f596;
	mul.rn.f32 	%f598, %f597, %f592;
	mul.rn.f32 	%f599, %f598, %f591;
	sub.f32 	%f600, %f589, %f591;
	neg.f32 	%f601, %f591;
	add.f32 	%f602, %f600, %f600;
	fma.rn.f32 	%f603, %f601, %f589, %f602;
	mul.rn.f32 	%f604, %f574, %f603;
	add.f32 	%f605, %f599, %f591;
	sub.f32 	%f606, %f591, %f605;
	add.f32 	%f607, %f599, %f606;
	add.f32 	%f608, %f604, %f607;
	add.f32 	%f609, %f605, %f608;
	sub.f32 	%f610, %f605, %f609;
	add.f32 	%f611, %f608, %f610;
	mov.f32 	%f612, 0f3F317200;
	mul.rn.f32 	%f613, %f588, %f612;
	mov.f32 	%f614, 0f35BFBE8E;
	mul.rn.f32 	%f615, %f588, %f614;
	add.f32 	%f616, %f613, %f609;
	sub.f32 	%f617, %f613, %f616;
	add.f32 	%f618, %f609, %f617;
	add.f32 	%f619, %f611, %f618;
	add.f32 	%f620, %f615, %f619;
	add.f32 	%f621, %f616, %f620;
	sub.f32 	%f622, %f616, %f621;
	add.f32 	%f623, %f620, %f622;
	mov.f32 	%f624, 0f3EE66666;
	mul.rn.f32 	%f625, %f624, %f621;
	neg.f32 	%f626, %f625;
	fma.rn.f32 	%f627, %f624, %f621, %f626;
	fma.rn.f32 	%f628, %f624, %f623, %f627;
	mov.f32 	%f629, 0f00000000;
	fma.rn.f32 	%f630, %f629, %f621, %f628;
	add.rn.f32 	%f631, %f625, %f630;
	neg.f32 	%f632, %f631;
	add.rn.f32 	%f633, %f625, %f632;
	add.rn.f32 	%f634, %f633, %f630;
	mov.b32 	 %r279, %f631;
	setp.eq.s32	%p89, %r279, 1118925336;
	add.s32 	%r280, %r279, -1;
	mov.b32 	 %f635, %r280;
	add.f32 	%f636, %f634, 0f37000000;
	selp.f32	%f637, %f635, %f631, %p89;
	selp.f32	%f153, %f636, %f634, %p89;
	mul.f32 	%f638, %f637, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f639, %f638;
	mov.f32 	%f640, 0fBF317200;
	fma.rn.f32 	%f641, %f639, %f640, %f637;
	mov.f32 	%f642, 0fB5BFBE8E;
	fma.rn.f32 	%f643, %f639, %f642, %f641;
	mul.f32 	%f644, %f643, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f645, %f644;
	add.f32 	%f646, %f639, 0f00000000;
	ex2.approx.f32 	%f647, %f646;
	mul.f32 	%f648, %f645, %f647;
	setp.lt.f32	%p90, %f637, 0fC2D20000;
	selp.f32	%f649, 0f00000000, %f648, %p90;
	setp.gt.f32	%p91, %f637, 0f42D20000;
	selp.f32	%f897, 0f7F800000, %f649, %p91;
	setp.eq.f32	%p92, %f897, 0f7F800000;
	@%p92 bra 	BB0_94;

	fma.rn.f32 	%f897, %f897, %f153, %f897;

BB0_94:
	setp.lt.f32	%p93, %f148, 0f00000000;
	setp.eq.f32	%p94, %f151, 0f3F800000;
	and.pred  	%p4, %p93, %p94;
	mov.b32 	 %r281, %f897;
	xor.b32  	%r282, %r281, -2147483648;
	mov.b32 	 %f650, %r282;
	selp.f32	%f899, %f650, %f897, %p4;
	setp.eq.f32	%p95, %f148, 0f00000000;
	@%p95 bra 	BB0_97;
	bra.uni 	BB0_95;

BB0_97:
	add.f32 	%f653, %f148, %f148;
	selp.f32	%f899, %f653, 0f00000000, %p94;
	bra.uni 	BB0_98;

BB0_95:
	setp.geu.f32	%p96, %f148, 0f00000000;
	@%p96 bra 	BB0_98;

	cvt.rzi.f32.f32	%f652, %f624;
	setp.neu.f32	%p97, %f652, 0f3EE66666;
	selp.f32	%f899, 0f7FFFFFFF, %f899, %p97;

BB0_98:
	add.f32 	%f654, %f152, 0f3EE66666;
	mov.b32 	 %r283, %f654;
	setp.lt.s32	%p99, %r283, 2139095040;
	@%p99 bra 	BB0_103;

	setp.gtu.f32	%p100, %f152, 0f7F800000;
	@%p100 bra 	BB0_102;
	bra.uni 	BB0_100;

BB0_102:
	add.f32 	%f899, %f148, 0f3EE66666;
	bra.uni 	BB0_103;

BB0_100:
	setp.neu.f32	%p101, %f152, 0f7F800000;
	@%p101 bra 	BB0_103;

	selp.f32	%f899, 0fFF800000, 0f7F800000, %p4;

BB0_103:
	setp.eq.f32	%p102, %f148, 0f3F800000;
	selp.f32	%f164, 0f3F800000, %f899, %p102;
	abs.f32 	%f165, %f149;
	setp.lt.f32	%p103, %f165, 0f00800000;
	mul.f32 	%f657, %f165, 0f4B800000;
	selp.f32	%f658, 0fC3170000, 0fC2FE0000, %p103;
	selp.f32	%f659, %f657, %f165, %p103;
	mov.b32 	 %r284, %f659;
	and.b32  	%r285, %r284, 8388607;
	or.b32  	%r286, %r285, 1065353216;
	mov.b32 	 %f660, %r286;
	shr.u32 	%r287, %r284, 23;
	cvt.rn.f32.u32	%f661, %r287;
	add.f32 	%f662, %f658, %f661;
	setp.gt.f32	%p104, %f660, 0f3FB504F3;
	mul.f32 	%f663, %f660, 0f3F000000;
	add.f32 	%f664, %f662, 0f3F800000;
	selp.f32	%f665, %f663, %f660, %p104;
	selp.f32	%f666, %f664, %f662, %p104;
	add.f32 	%f667, %f665, 0fBF800000;
	add.f32 	%f656, %f665, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f655,%f656;
	// inline asm
	add.f32 	%f668, %f667, %f667;
	mul.f32 	%f669, %f655, %f668;
	mul.f32 	%f670, %f669, %f669;
	fma.rn.f32 	%f673, %f594, %f670, %f593;
	fma.rn.f32 	%f675, %f673, %f670, %f596;
	mul.rn.f32 	%f676, %f675, %f670;
	mul.rn.f32 	%f677, %f676, %f669;
	sub.f32 	%f678, %f667, %f669;
	neg.f32 	%f679, %f669;
	add.f32 	%f680, %f678, %f678;
	fma.rn.f32 	%f681, %f679, %f667, %f680;
	mul.rn.f32 	%f682, %f655, %f681;
	add.f32 	%f683, %f677, %f669;
	sub.f32 	%f684, %f669, %f683;
	add.f32 	%f685, %f677, %f684;
	add.f32 	%f686, %f682, %f685;
	add.f32 	%f687, %f683, %f686;
	sub.f32 	%f688, %f683, %f687;
	add.f32 	%f689, %f686, %f688;
	mul.rn.f32 	%f691, %f666, %f612;
	mul.rn.f32 	%f693, %f666, %f614;
	add.f32 	%f694, %f691, %f687;
	sub.f32 	%f695, %f691, %f694;
	add.f32 	%f696, %f687, %f695;
	add.f32 	%f697, %f689, %f696;
	add.f32 	%f698, %f693, %f697;
	add.f32 	%f699, %f694, %f698;
	sub.f32 	%f700, %f694, %f699;
	add.f32 	%f701, %f698, %f700;
	mul.rn.f32 	%f703, %f624, %f699;
	neg.f32 	%f704, %f703;
	fma.rn.f32 	%f705, %f624, %f699, %f704;
	fma.rn.f32 	%f706, %f624, %f701, %f705;
	fma.rn.f32 	%f708, %f629, %f699, %f706;
	add.rn.f32 	%f709, %f703, %f708;
	neg.f32 	%f710, %f709;
	add.rn.f32 	%f711, %f703, %f710;
	add.rn.f32 	%f712, %f711, %f708;
	mov.b32 	 %r288, %f709;
	setp.eq.s32	%p105, %r288, 1118925336;
	add.s32 	%r289, %r288, -1;
	mov.b32 	 %f713, %r289;
	add.f32 	%f714, %f712, 0f37000000;
	selp.f32	%f715, %f713, %f709, %p105;
	selp.f32	%f166, %f714, %f712, %p105;
	mul.f32 	%f716, %f715, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f717, %f716;
	fma.rn.f32 	%f719, %f717, %f640, %f715;
	fma.rn.f32 	%f721, %f717, %f642, %f719;
	mul.f32 	%f722, %f721, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f723, %f722;
	add.f32 	%f724, %f717, 0f00000000;
	ex2.approx.f32 	%f725, %f724;
	mul.f32 	%f726, %f723, %f725;
	setp.lt.f32	%p106, %f715, 0fC2D20000;
	selp.f32	%f727, 0f00000000, %f726, %p106;
	setp.gt.f32	%p107, %f715, 0f42D20000;
	selp.f32	%f900, 0f7F800000, %f727, %p107;
	setp.eq.f32	%p108, %f900, 0f7F800000;
	@%p108 bra 	BB0_105;

	fma.rn.f32 	%f900, %f900, %f166, %f900;

BB0_105:
	setp.lt.f32	%p109, %f149, 0f00000000;
	and.pred  	%p5, %p109, %p94;
	mov.b32 	 %r290, %f900;
	xor.b32  	%r291, %r290, -2147483648;
	mov.b32 	 %f728, %r291;
	selp.f32	%f902, %f728, %f900, %p5;
	setp.eq.f32	%p111, %f149, 0f00000000;
	@%p111 bra 	BB0_108;
	bra.uni 	BB0_106;

BB0_108:
	add.f32 	%f731, %f149, %f149;
	selp.f32	%f902, %f731, 0f00000000, %p94;
	bra.uni 	BB0_109;

BB0_106:
	setp.geu.f32	%p112, %f149, 0f00000000;
	@%p112 bra 	BB0_109;

	cvt.rzi.f32.f32	%f730, %f624;
	setp.neu.f32	%p113, %f730, 0f3EE66666;
	selp.f32	%f902, 0f7FFFFFFF, %f902, %p113;

BB0_109:
	add.f32 	%f732, %f165, 0f3EE66666;
	mov.b32 	 %r292, %f732;
	setp.lt.s32	%p115, %r292, 2139095040;
	@%p115 bra 	BB0_114;

	setp.gtu.f32	%p116, %f165, 0f7F800000;
	@%p116 bra 	BB0_113;
	bra.uni 	BB0_111;

BB0_113:
	add.f32 	%f902, %f149, 0f3EE66666;
	bra.uni 	BB0_114;

BB0_111:
	setp.neu.f32	%p117, %f165, 0f7F800000;
	@%p117 bra 	BB0_114;

	selp.f32	%f902, 0fFF800000, 0f7F800000, %p5;

BB0_114:
	setp.eq.f32	%p118, %f149, 0f3F800000;
	selp.f32	%f177, 0f3F800000, %f902, %p118;
	abs.f32 	%f178, %f150;
	setp.lt.f32	%p119, %f178, 0f00800000;
	mul.f32 	%f735, %f178, 0f4B800000;
	selp.f32	%f736, 0fC3170000, 0fC2FE0000, %p119;
	selp.f32	%f737, %f735, %f178, %p119;
	mov.b32 	 %r293, %f737;
	and.b32  	%r294, %r293, 8388607;
	or.b32  	%r295, %r294, 1065353216;
	mov.b32 	 %f738, %r295;
	shr.u32 	%r296, %r293, 23;
	cvt.rn.f32.u32	%f739, %r296;
	add.f32 	%f740, %f736, %f739;
	setp.gt.f32	%p120, %f738, 0f3FB504F3;
	mul.f32 	%f741, %f738, 0f3F000000;
	add.f32 	%f742, %f740, 0f3F800000;
	selp.f32	%f743, %f741, %f738, %p120;
	selp.f32	%f744, %f742, %f740, %p120;
	add.f32 	%f745, %f743, 0fBF800000;
	add.f32 	%f734, %f743, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f733,%f734;
	// inline asm
	add.f32 	%f746, %f745, %f745;
	mul.f32 	%f747, %f733, %f746;
	mul.f32 	%f748, %f747, %f747;
	fma.rn.f32 	%f751, %f594, %f748, %f593;
	fma.rn.f32 	%f753, %f751, %f748, %f596;
	mul.rn.f32 	%f754, %f753, %f748;
	mul.rn.f32 	%f755, %f754, %f747;
	sub.f32 	%f756, %f745, %f747;
	neg.f32 	%f757, %f747;
	add.f32 	%f758, %f756, %f756;
	fma.rn.f32 	%f759, %f757, %f745, %f758;
	mul.rn.f32 	%f760, %f733, %f759;
	add.f32 	%f761, %f755, %f747;
	sub.f32 	%f762, %f747, %f761;
	add.f32 	%f763, %f755, %f762;
	add.f32 	%f764, %f760, %f763;
	add.f32 	%f765, %f761, %f764;
	sub.f32 	%f766, %f761, %f765;
	add.f32 	%f767, %f764, %f766;
	mul.rn.f32 	%f769, %f744, %f612;
	mul.rn.f32 	%f771, %f744, %f614;
	add.f32 	%f772, %f769, %f765;
	sub.f32 	%f773, %f769, %f772;
	add.f32 	%f774, %f765, %f773;
	add.f32 	%f775, %f767, %f774;
	add.f32 	%f776, %f771, %f775;
	add.f32 	%f777, %f772, %f776;
	sub.f32 	%f778, %f772, %f777;
	add.f32 	%f779, %f776, %f778;
	mul.rn.f32 	%f781, %f624, %f777;
	neg.f32 	%f782, %f781;
	fma.rn.f32 	%f783, %f624, %f777, %f782;
	fma.rn.f32 	%f784, %f624, %f779, %f783;
	fma.rn.f32 	%f786, %f629, %f777, %f784;
	add.rn.f32 	%f787, %f781, %f786;
	neg.f32 	%f788, %f787;
	add.rn.f32 	%f789, %f781, %f788;
	add.rn.f32 	%f790, %f789, %f786;
	mov.b32 	 %r297, %f787;
	setp.eq.s32	%p121, %r297, 1118925336;
	add.s32 	%r298, %r297, -1;
	mov.b32 	 %f791, %r298;
	add.f32 	%f792, %f790, 0f37000000;
	selp.f32	%f793, %f791, %f787, %p121;
	selp.f32	%f179, %f792, %f790, %p121;
	mul.f32 	%f794, %f793, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f795, %f794;
	fma.rn.f32 	%f797, %f795, %f640, %f793;
	fma.rn.f32 	%f799, %f795, %f642, %f797;
	mul.f32 	%f800, %f799, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f801, %f800;
	add.f32 	%f802, %f795, 0f00000000;
	ex2.approx.f32 	%f803, %f802;
	mul.f32 	%f804, %f801, %f803;
	setp.lt.f32	%p122, %f793, 0fC2D20000;
	selp.f32	%f805, 0f00000000, %f804, %p122;
	setp.gt.f32	%p123, %f793, 0f42D20000;
	selp.f32	%f903, 0f7F800000, %f805, %p123;
	setp.eq.f32	%p124, %f903, 0f7F800000;
	@%p124 bra 	BB0_116;

	fma.rn.f32 	%f903, %f903, %f179, %f903;

BB0_116:
	setp.lt.f32	%p125, %f150, 0f00000000;
	and.pred  	%p6, %p125, %p94;
	mov.b32 	 %r299, %f903;
	xor.b32  	%r300, %r299, -2147483648;
	mov.b32 	 %f806, %r300;
	selp.f32	%f905, %f806, %f903, %p6;
	setp.eq.f32	%p127, %f150, 0f00000000;
	@%p127 bra 	BB0_119;
	bra.uni 	BB0_117;

BB0_119:
	add.f32 	%f809, %f150, %f150;
	selp.f32	%f905, %f809, 0f00000000, %p94;
	bra.uni 	BB0_120;

BB0_117:
	setp.geu.f32	%p128, %f150, 0f00000000;
	@%p128 bra 	BB0_120;

	cvt.rzi.f32.f32	%f808, %f624;
	setp.neu.f32	%p129, %f808, 0f3EE66666;
	selp.f32	%f905, 0f7FFFFFFF, %f905, %p129;

BB0_120:
	add.f32 	%f810, %f178, 0f3EE66666;
	mov.b32 	 %r301, %f810;
	setp.lt.s32	%p131, %r301, 2139095040;
	@%p131 bra 	BB0_125;

	setp.gtu.f32	%p132, %f178, 0f7F800000;
	@%p132 bra 	BB0_124;
	bra.uni 	BB0_122;

BB0_124:
	add.f32 	%f905, %f150, 0f3EE66666;
	bra.uni 	BB0_125;

BB0_122:
	setp.neu.f32	%p133, %f178, 0f7F800000;
	@%p133 bra 	BB0_125;

	selp.f32	%f905, 0fFF800000, 0f7F800000, %p6;

BB0_125:
	setp.eq.f32	%p134, %f150, 0f3F800000;
	selp.f32	%f811, 0f3F800000, %f905, %p134;
	cvt.u64.u32	%rd90, %r6;
	cvt.u64.u32	%rd89, %r5;
	mov.u64 	%rd93, image;
	cvta.global.u64 	%rd88, %rd93;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r103, %r104, %rd89, %rd90, %rd25, %rd25);
	// inline asm
	cvt.sat.f32.f32	%f812, %f811;
	mul.f32 	%f813, %f812, 0f437FFD71;
	cvt.rzi.u32.f32	%r304, %f813;
	cvt.sat.f32.f32	%f814, %f177;
	mul.f32 	%f815, %f814, 0f437FFD71;
	cvt.rzi.u32.f32	%r305, %f815;
	cvt.sat.f32.f32	%f816, %f164;
	mul.f32 	%f817, %f816, 0f437FFD71;
	cvt.rzi.u32.f32	%r306, %f817;
	cvt.u16.u32	%rs13, %r304;
	cvt.u16.u32	%rs14, %r306;
	cvt.u16.u32	%rs15, %r305;
	mov.u16 	%rs16, 255;
	st.v4.u8 	[%rd87], {%rs13, %rs15, %rs14, %rs16};
	ld.global.u32 	%r363, [imageEnabled];

BB0_126:
	and.b32  	%r307, %r363, 4;
	setp.eq.s32	%p135, %r307, 0;
	@%p135 bra 	BB0_138;

	ld.global.u32 	%r308, [additive];
	setp.eq.s32	%p136, %r308, 0;
	cvt.u64.u32	%rd16, %r5;
	cvt.u64.u32	%rd17, %r6;
	// inline asm
	{  cvt.rn.f16.f32 %rs17, %f370;}

	// inline asm
	@%p136 bra 	BB0_129;

	mov.u64 	%rd106, image_HDR;
	cvta.global.u64 	%rd95, %rd106;
	mov.u32 	%r312, 8;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r103, %r312, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs24, %rs25, %rs26, %rs27}, [%rd94];
	// inline asm
	{  cvt.f32.f16 %f819, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f820, %rs25;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f821, %rs26;}

	// inline asm
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd95, %r103, %r312, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f822, %f148, %f819;
	add.f32 	%f823, %f149, %f820;
	add.f32 	%f824, %f150, %f821;
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f824;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f823;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f822;}

	// inline asm
	st.v4.u16 	[%rd100], {%rs21, %rs22, %rs23, %rs17};
	bra.uni 	BB0_138;

BB0_129:
	mov.u64 	%rd113, image_HDR;
	cvta.global.u64 	%rd108, %rd113;
	mov.u32 	%r314, 8;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r103, %r314, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f150;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f149;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f148;}

	// inline asm
	st.v4.u16 	[%rd107], {%rs28, %rs29, %rs30, %rs17};

BB0_138:
	ret;
}


