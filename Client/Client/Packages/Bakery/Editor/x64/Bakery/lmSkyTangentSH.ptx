//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .texref sky;
.global .align 4 .b8 skyColor[12];
.global .align 4 .u32 samples;
.global .align 4 .u32 hemispherical;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8skyColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13hemisphericalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8skyColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13hemisphericalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8skyColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13hemisphericalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8skyColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13hemisphericalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8skyColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13hemisphericalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<111>;
	.reg .b16 	%rs<175>;
	.reg .f32 	%f<873>;
	.reg .b32 	%r<380>;
	.reg .b64 	%rd<311>;


	mov.u64 	%rd310, __local_depot0;
	cvta.local.u64 	%SP, %rd310;
	ld.global.u32 	%r1, [samples];
	ld.global.v2.u32 	{%r99, %r100}, [pixelID];
	cvt.u64.u32	%rd24, %r99;
	cvt.u64.u32	%rd25, %r100;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r97, 2;
	mov.u32 	%r98, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r97, %r98, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r2, [%rd22];
	shr.u32 	%r103, %r2, 16;
	cvt.u16.u32	%rs1, %r103;
	and.b16  	%rs7, %rs1, 255;
	cvt.u16.u32	%rs8, %r2;
	or.b16  	%rs9, %rs8, %rs7;
	setp.eq.s16	%p4, %rs9, 0;
	mov.f32 	%f820, 0f00000000;
	mov.f32 	%f821, %f820;
	mov.f32 	%f822, %f820;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs10, [%rd22+1];
	and.b16  	%rs12, %rs8, 255;
	cvt.rn.f32.u16	%f176, %rs12;
	div.rn.f32 	%f177, %f176, 0f437F0000;
	fma.rn.f32 	%f178, %f177, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f179, %rs10;
	div.rn.f32 	%f180, %f179, 0f437F0000;
	fma.rn.f32 	%f181, %f180, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f182, %rs7;
	div.rn.f32 	%f183, %f182, 0f437F0000;
	fma.rn.f32 	%f184, %f183, 0f40000000, 0fBF800000;
	mul.f32 	%f185, %f181, %f181;
	fma.rn.f32 	%f186, %f178, %f178, %f185;
	fma.rn.f32 	%f187, %f184, %f184, %f186;
	sqrt.rn.f32 	%f188, %f187;
	rcp.rn.f32 	%f189, %f188;
	mul.f32 	%f820, %f178, %f189;
	mul.f32 	%f821, %f181, %f189;
	mul.f32 	%f822, %f184, %f189;

BB0_2:
	ld.global.v2.u32 	{%r104, %r105}, [pixelID];
	ld.global.v2.u32 	{%r107, %r108}, [tileInfo];
	add.s32 	%r3, %r104, %r107;
	add.s32 	%r4, %r105, %r108;
	setp.eq.f32	%p5, %f821, 0f00000000;
	setp.eq.f32	%p6, %f820, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f822, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_113;
	bra.uni 	BB0_3;

BB0_113:
	ld.global.u32 	%r379, [imageEnabled];
	and.b32  	%r313, %r379, 1;
	setp.eq.b32	%p104, %r313, 1;
	@!%p104 bra 	BB0_115;
	bra.uni 	BB0_114;

BB0_114:
	cvt.u64.u32	%rd196, %r4;
	cvt.u64.u32	%rd195, %r3;
	mov.u64 	%rd199, image;
	cvta.global.u64 	%rd194, %rd199;
	mov.u64 	%rd198, 0;
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd194, %r97, %r98, %rd195, %rd196, %rd198, %rd198);
	// inline asm
	mov.u16 	%rs109, 0;
	st.v4.u8 	[%rd193], {%rs109, %rs109, %rs109, %rs109};
	ld.global.u32 	%r379, [imageEnabled];

BB0_115:
	cvt.u64.u32	%rd20, %r3;
	cvt.u64.u32	%rd21, %r4;
	and.b32  	%r316, %r379, 4;
	setp.eq.s32	%p105, %r316, 0;
	@%p105 bra 	BB0_119;

	ld.global.u32 	%r317, [additive];
	setp.eq.s32	%p106, %r317, 0;
	@%p106 bra 	BB0_118;

	mov.u64 	%rd212, image_HDR;
	cvta.global.u64 	%rd201, %rd212;
	mov.u32 	%r321, 8;
	mov.u64 	%rd211, 0;
	// inline asm
	call (%rd200), _rt_buffer_get_64, (%rd201, %r97, %r321, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	ld.v4.u16 	{%rs116, %rs117, %rs118, %rs119}, [%rd200];
	// inline asm
	{  cvt.f32.f16 %f739, %rs116;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f740, %rs117;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f741, %rs118;}

	// inline asm
	// inline asm
	call (%rd206), _rt_buffer_get_64, (%rd201, %r97, %r321, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	add.f32 	%f742, %f739, 0f00000000;
	add.f32 	%f743, %f740, 0f00000000;
	add.f32 	%f744, %f741, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs115, %f744;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs114, %f743;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs113, %f742;}

	// inline asm
	mov.u16 	%rs120, 0;
	st.v4.u16 	[%rd206], {%rs113, %rs114, %rs115, %rs120};
	bra.uni 	BB0_119;

BB0_3:
	ld.global.v2.u32 	{%r118, %r119}, [pixelID];
	cvt.u64.u32	%rd31, %r118;
	cvt.u64.u32	%rd32, %r119;
	mov.u64 	%rd47, uvpos;
	cvta.global.u64 	%rd30, %rd47;
	mov.u32 	%r113, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r97, %r113, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f193, [%rd29+8];
	ld.f32 	%f194, [%rd29+4];
	ld.f32 	%f195, [%rd29];
	mul.f32 	%f196, %f195, 0f3456BF95;
	mul.f32 	%f197, %f194, 0f3456BF95;
	mul.f32 	%f198, %f193, 0f3456BF95;
	abs.f32 	%f199, %f820;
	div.rn.f32 	%f200, %f196, %f199;
	abs.f32 	%f201, %f821;
	div.rn.f32 	%f202, %f197, %f201;
	abs.f32 	%f203, %f822;
	div.rn.f32 	%f204, %f198, %f203;
	abs.f32 	%f205, %f200;
	abs.f32 	%f206, %f202;
	abs.f32 	%f207, %f204;
	mov.f32 	%f208, 0f38D1B717;
	max.f32 	%f209, %f205, %f208;
	max.f32 	%f210, %f206, %f208;
	max.f32 	%f211, %f207, %f208;
	fma.rn.f32 	%f7, %f820, %f209, %f195;
	fma.rn.f32 	%f8, %f821, %f210, %f194;
	fma.rn.f32 	%f9, %f822, %f211, %f193;
	ld.global.u32 	%r5, [hemispherical];
	setp.gt.f32	%p10, %f199, %f203;
	neg.f32 	%f212, %f821;
	selp.f32	%f213, %f212, 0f00000000, %p10;
	neg.f32 	%f214, %f822;
	selp.f32	%f215, %f820, %f214, %p10;
	selp.f32	%f216, 0f00000000, %f821, %p10;
	mul.f32 	%f217, %f215, %f215;
	fma.rn.f32 	%f218, %f213, %f213, %f217;
	fma.rn.f32 	%f219, %f216, %f216, %f218;
	sqrt.rn.f32 	%f220, %f219;
	rcp.rn.f32 	%f221, %f220;
	mul.f32 	%f10, %f213, %f221;
	mul.f32 	%f11, %f215, %f221;
	mul.f32 	%f12, %f216, %f221;
	ld.global.v2.u32 	{%r122, %r123}, [pixelID];
	cvt.u64.u32	%rd37, %r122;
	cvt.u64.u32	%rd38, %r123;
	mov.u64 	%rd48, rnd_seeds;
	cvta.global.u64 	%rd36, %rd48;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r97, %r98, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.u32 	%r357, [%rd35];
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd43, %r126;
	cvt.u64.u32	%rd44, %r127;
	mov.u64 	%rd49, uvtangent;
	cvta.global.u64 	%rd42, %rd49;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd42, %r97, %r98, %rd43, %rd44, %rd27, %rd27);
	// inline asm
	ld.u32 	%r7, [%rd41];
	shr.u32 	%r8, %r7, 16;
	cvt.u16.u32	%rs14, %r8;
	and.b16  	%rs15, %rs14, 255;
	cvt.u16.u32	%rs16, %r7;
	or.b16  	%rs17, %rs16, %rs15;
	setp.eq.s16	%p11, %rs17, 0;
	mov.f32 	%f858, 0f00000000;
	mov.f32 	%f823, %f858;
	mov.f32 	%f824, %f858;
	mov.f32 	%f825, %f858;
	@%p11 bra 	BB0_5;

	ld.u8 	%rs18, [%rd41+1];
	and.b16  	%rs20, %rs16, 255;
	cvt.rn.f32.u16	%f222, %rs20;
	div.rn.f32 	%f223, %f222, 0f437F0000;
	fma.rn.f32 	%f224, %f223, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f225, %rs18;
	div.rn.f32 	%f226, %f225, 0f437F0000;
	fma.rn.f32 	%f227, %f226, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f228, %rs15;
	div.rn.f32 	%f229, %f228, 0f437F0000;
	fma.rn.f32 	%f230, %f229, 0f40000000, 0fBF800000;
	mul.f32 	%f231, %f227, %f227;
	fma.rn.f32 	%f232, %f224, %f224, %f231;
	fma.rn.f32 	%f233, %f230, %f230, %f232;
	sqrt.rn.f32 	%f234, %f233;
	rcp.rn.f32 	%f235, %f234;
	mul.f32 	%f823, %f224, %f235;
	mul.f32 	%f824, %f227, %f235;
	mul.f32 	%f825, %f230, %f235;

BB0_5:
	mul.f32 	%f239, %f822, %f824;
	mul.f32 	%f240, %f821, %f825;
	sub.f32 	%f241, %f240, %f239;
	mul.f32 	%f242, %f820, %f825;
	mul.f32 	%f243, %f822, %f823;
	sub.f32 	%f244, %f243, %f242;
	mul.f32 	%f245, %f821, %f823;
	mul.f32 	%f246, %f820, %f824;
	sub.f32 	%f247, %f246, %f245;
	setp.lt.u32	%p12, %r7, 16777216;
	selp.f32	%f248, 0fBF800000, 0f3F800000, %p12;
	mul.f32 	%f249, %f241, %f248;
	mul.f32 	%f250, %f244, %f248;
	mul.f32 	%f251, %f247, %f248;
	fma.rn.f32 	%f252, %f249, 0f00000000, %f823;
	fma.rn.f32 	%f253, %f250, 0f00000000, %f824;
	fma.rn.f32 	%f254, %f251, 0f00000000, %f825;
	mul.f32 	%f19, %f820, 0f00000000;
	add.f32 	%f20, %f19, %f252;
	mul.f32 	%f21, %f821, 0f00000000;
	add.f32 	%f22, %f21, %f253;
	mul.f32 	%f23, %f822, 0f00000000;
	add.f32 	%f24, %f23, %f254;
	ld.global.v2.u32 	{%r132, %r133}, [pixelID];
	cvt.u64.u32	%rd52, %r132;
	cvt.u64.u32	%rd53, %r133;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd42, %r97, %r98, %rd52, %rd53, %rd27, %rd27);
	// inline asm
	ld.u32 	%r9, [%rd50];
	shr.u32 	%r10, %r9, 16;
	cvt.u16.u32	%rs23, %r10;
	and.b16  	%rs24, %rs23, 255;
	cvt.u16.u32	%rs25, %r9;
	or.b16  	%rs26, %rs25, %rs24;
	setp.eq.s16	%p13, %rs26, 0;
	mov.f32 	%f826, %f858;
	mov.f32 	%f827, %f858;
	mov.f32 	%f828, %f858;
	@%p13 bra 	BB0_7;

	ld.u8 	%rs27, [%rd50+1];
	and.b16  	%rs29, %rs25, 255;
	cvt.rn.f32.u16	%f255, %rs29;
	div.rn.f32 	%f256, %f255, 0f437F0000;
	fma.rn.f32 	%f257, %f256, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f258, %rs27;
	div.rn.f32 	%f259, %f258, 0f437F0000;
	fma.rn.f32 	%f260, %f259, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f261, %rs24;
	div.rn.f32 	%f262, %f261, 0f437F0000;
	fma.rn.f32 	%f263, %f262, 0f40000000, 0fBF800000;
	mul.f32 	%f264, %f260, %f260;
	fma.rn.f32 	%f265, %f257, %f257, %f264;
	fma.rn.f32 	%f266, %f263, %f263, %f265;
	sqrt.rn.f32 	%f267, %f266;
	rcp.rn.f32 	%f268, %f267;
	mul.f32 	%f826, %f257, %f268;
	mul.f32 	%f827, %f260, %f268;
	mul.f32 	%f828, %f263, %f268;

BB0_7:
	mul.f32 	%f272, %f822, %f827;
	mul.f32 	%f273, %f821, %f828;
	sub.f32 	%f274, %f273, %f272;
	mul.f32 	%f275, %f820, %f828;
	mul.f32 	%f276, %f822, %f826;
	sub.f32 	%f277, %f276, %f275;
	mul.f32 	%f278, %f821, %f826;
	mul.f32 	%f279, %f820, %f827;
	sub.f32 	%f280, %f279, %f278;
	setp.lt.u32	%p14, %r9, 16777216;
	selp.f32	%f281, 0fBF800000, 0f3F800000, %p14;
	mul.f32 	%f282, %f274, %f281;
	mul.f32 	%f283, %f277, %f281;
	mul.f32 	%f284, %f280, %f281;
	fma.rn.f32 	%f285, %f826, 0f00000000, %f282;
	fma.rn.f32 	%f286, %f827, 0f00000000, %f283;
	fma.rn.f32 	%f287, %f828, 0f00000000, %f284;
	add.f32 	%f31, %f19, %f285;
	add.f32 	%f32, %f21, %f286;
	add.f32 	%f33, %f23, %f287;
	ld.global.v2.u32 	{%r138, %r139}, [pixelID];
	cvt.u64.u32	%rd59, %r138;
	cvt.u64.u32	%rd60, %r139;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd42, %r97, %r98, %rd59, %rd60, %rd27, %rd27);
	// inline asm
	ld.u32 	%r11, [%rd57];
	shr.u32 	%r12, %r11, 16;
	cvt.u16.u32	%rs32, %r12;
	and.b16  	%rs33, %rs32, 255;
	cvt.u16.u32	%rs34, %r11;
	or.b16  	%rs35, %rs34, %rs33;
	setp.eq.s16	%p15, %rs35, 0;
	mov.f32 	%f829, %f858;
	mov.f32 	%f830, %f858;
	mov.f32 	%f831, %f858;
	@%p15 bra 	BB0_9;

	ld.u8 	%rs36, [%rd57+1];
	and.b16  	%rs38, %rs34, 255;
	cvt.rn.f32.u16	%f288, %rs38;
	div.rn.f32 	%f289, %f288, 0f437F0000;
	fma.rn.f32 	%f290, %f289, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f291, %rs36;
	div.rn.f32 	%f292, %f291, 0f437F0000;
	fma.rn.f32 	%f293, %f292, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f294, %rs33;
	div.rn.f32 	%f295, %f294, 0f437F0000;
	fma.rn.f32 	%f296, %f295, 0f40000000, 0fBF800000;
	mul.f32 	%f297, %f293, %f293;
	fma.rn.f32 	%f298, %f290, %f290, %f297;
	fma.rn.f32 	%f299, %f296, %f296, %f298;
	sqrt.rn.f32 	%f300, %f299;
	rcp.rn.f32 	%f301, %f300;
	mul.f32 	%f829, %f290, %f301;
	mul.f32 	%f830, %f293, %f301;
	mul.f32 	%f831, %f296, %f301;

BB0_9:
	mul.f32 	%f307, %f822, %f830;
	mul.f32 	%f308, %f821, %f831;
	sub.f32 	%f309, %f308, %f307;
	mul.f32 	%f310, %f820, %f831;
	mul.f32 	%f311, %f822, %f829;
	sub.f32 	%f312, %f311, %f310;
	mul.f32 	%f313, %f821, %f829;
	mul.f32 	%f314, %f820, %f830;
	sub.f32 	%f315, %f314, %f313;
	setp.lt.u32	%p16, %r11, 16777216;
	selp.f32	%f316, 0fBF800000, 0f3F800000, %p16;
	mul.f32 	%f317, %f309, %f316;
	mul.f32 	%f318, %f312, %f316;
	mul.f32 	%f319, %f315, %f316;
	mul.f32 	%f320, %f317, 0f00000000;
	mul.f32 	%f321, %f318, 0f00000000;
	mul.f32 	%f322, %f319, 0f00000000;
	fma.rn.f32 	%f40, %f829, 0f00000000, %f320;
	fma.rn.f32 	%f41, %f830, 0f00000000, %f321;
	fma.rn.f32 	%f42, %f831, 0f00000000, %f322;
	setp.lt.s32	%p17, %r1, 1;
	mov.f32 	%f857, %f858;
	mov.f32 	%f856, %f858;
	mov.f32 	%f855, %f858;
	mov.f32 	%f854, %f858;
	@%p17 bra 	BB0_62;

	cvt.rn.f32.s32	%f328, %r1;
	rcp.rn.f32 	%f43, %f328;
	mul.f32 	%f44, %f7, 0f3456BF95;
	mul.f32 	%f45, %f8, 0f3456BF95;
	mul.f32 	%f46, %f9, 0f3456BF95;
	mul.f32 	%f329, %f822, %f11;
	mul.f32 	%f330, %f821, %f12;
	sub.f32 	%f47, %f329, %f330;
	mul.f32 	%f331, %f820, %f12;
	mul.f32 	%f332, %f822, %f10;
	sub.f32 	%f48, %f331, %f332;
	mul.f32 	%f333, %f821, %f10;
	mul.f32 	%f334, %f820, %f11;
	sub.f32 	%f49, %f333, %f334;
	add.f32 	%f50, %f822, %f42;
	add.f32 	%f51, %f821, %f41;
	add.f32 	%f52, %f820, %f40;
	mov.f32 	%f858, 0f00000000;
	mov.u32 	%r142, 0;
	abs.f32 	%f408, %f45;
	abs.f32 	%f409, %f44;
	max.f32 	%f410, %f409, %f408;
	abs.f32 	%f411, %f46;
	max.f32 	%f412, %f410, %f411;
	mov.u32 	%r354, %r142;
	mov.f32 	%f857, %f858;
	mov.f32 	%f856, %f858;
	mov.f32 	%f855, %f858;
	mov.f32 	%f854, %f858;

BB0_11:
	mov.u32 	%r356, %r142;

BB0_12:
	cvt.rn.f32.s32	%f812, %r354;
	mad.lo.s32 	%r144, %r357, 1664525, 1013904223;
	and.b32  	%r145, %r144, 16777215;
	cvt.rn.f32.u32	%f335, %r145;
	fma.rn.f32 	%f336, %f335, 0f33800000, %f812;
	mul.f32 	%f64, %f43, %f336;
	mad.lo.s32 	%r357, %r144, 1664525, 1013904223;
	and.b32  	%r146, %r357, 16777215;
	cvt.rn.f32.u32	%f337, %r146;
	cvt.rn.f32.s32	%f338, %r356;
	fma.rn.f32 	%f339, %f337, 0f33800000, %f338;
	mul.f32 	%f340, %f43, %f339;
	mul.f32 	%f341, %f64, %f64;
	mov.f32 	%f342, 0f3F800000;
	sub.f32 	%f343, %f342, %f341;
	mov.f32 	%f344, 0f00000000;
	max.f32 	%f345, %f344, %f343;
	sqrt.rn.f32 	%f65, %f345;
	mul.f32 	%f848, %f340, 0f40C90FDB;
	abs.f32 	%f67, %f848;
	setp.neu.f32	%p18, %f67, 0f7F800000;
	mov.f32 	%f842, %f848;
	@%p18 bra 	BB0_14;

	mov.f32 	%f813, 0f00000000;
	mul.rn.f32 	%f842, %f848, %f813;

BB0_14:
	mul.f32 	%f347, %f842, 0f3F22F983;
	cvt.rni.s32.f32	%r367, %f347;
	cvt.rn.f32.s32	%f348, %r367;
	neg.f32 	%f349, %f348;
	mov.f32 	%f350, 0f3FC90FDA;
	fma.rn.f32 	%f351, %f349, %f350, %f842;
	mov.f32 	%f352, 0f33A22168;
	fma.rn.f32 	%f353, %f349, %f352, %f351;
	mov.f32 	%f354, 0f27C234C5;
	fma.rn.f32 	%f843, %f349, %f354, %f353;
	abs.f32 	%f355, %f842;
	setp.leu.f32	%p19, %f355, 0f47CE4780;
	@%p19 bra 	BB0_25;

	add.u64 	%rd65, %SP, 4;
	cvta.to.local.u64 	%rd306, %rd65;
	mov.b32 	 %r19, %f842;
	shr.u32 	%r20, %r19, 23;
	shl.b32 	%r149, %r19, 8;
	or.b32  	%r21, %r149, -2147483648;
	mov.u32 	%r358, 0;
	mov.u64 	%rd307, 0;
	mov.u32 	%r359, %r358;

BB0_16:
	.pragma "nounroll";
	add.u64 	%rd303, %SP, 4;
	cvta.to.local.u64 	%rd302, %rd303;
	shl.b64 	%rd66, %rd307, 2;
	mov.u64 	%rd67, __cudart_i2opi_f;
	add.s64 	%rd68, %rd67, %rd66;
	ld.const.u32 	%r152, [%rd68];
	// inline asm
	{
	mad.lo.cc.u32   %r150, %r152, %r21, %r359;
	madc.hi.u32     %r359, %r152, %r21,  0;
	}
	// inline asm
	st.local.u32 	[%rd306], %r150;
	add.s32 	%r358, %r358, 1;
	cvt.s64.s32	%rd307, %r358;
	mul.wide.s32 	%rd71, %r358, 4;
	add.s64 	%rd306, %rd302, %rd71;
	setp.ne.s32	%p20, %r358, 6;
	@%p20 bra 	BB0_16;

	add.u64 	%rd300, %SP, 4;
	and.b32  	%r155, %r20, 255;
	add.s32 	%r156, %r155, -128;
	shr.u32 	%r157, %r156, 5;
	and.b32  	%r26, %r19, -2147483648;
	cvta.to.local.u64 	%rd73, %rd300;
	st.local.u32 	[%rd73+24], %r359;
	mov.u32 	%r158, 6;
	sub.s32 	%r159, %r158, %r157;
	mul.wide.s32 	%rd74, %r159, 4;
	add.s64 	%rd10, %rd73, %rd74;
	ld.local.u32 	%r360, [%rd10];
	ld.local.u32 	%r361, [%rd10+-4];
	and.b32  	%r29, %r20, 31;
	setp.eq.s32	%p21, %r29, 0;
	@%p21 bra 	BB0_19;

	mov.u32 	%r160, 32;
	sub.s32 	%r161, %r160, %r29;
	shr.u32 	%r162, %r361, %r161;
	shl.b32 	%r163, %r360, %r29;
	add.s32 	%r360, %r162, %r163;
	ld.local.u32 	%r164, [%rd10+-8];
	shr.u32 	%r165, %r164, %r161;
	shl.b32 	%r166, %r361, %r29;
	add.s32 	%r361, %r165, %r166;

BB0_19:
	shr.u32 	%r167, %r361, 30;
	shl.b32 	%r168, %r360, 2;
	add.s32 	%r362, %r167, %r168;
	shl.b32 	%r35, %r361, 2;
	shr.u32 	%r169, %r362, 31;
	shr.u32 	%r170, %r360, 30;
	add.s32 	%r36, %r169, %r170;
	setp.eq.s32	%p22, %r169, 0;
	@%p22 bra 	BB0_20;
	bra.uni 	BB0_21;

BB0_20:
	mov.u32 	%r363, %r26;
	mov.u32 	%r364, %r35;
	bra.uni 	BB0_22;

BB0_21:
	not.b32 	%r171, %r362;
	neg.s32 	%r364, %r35;
	setp.eq.s32	%p23, %r35, 0;
	selp.u32	%r172, 1, 0, %p23;
	add.s32 	%r362, %r172, %r171;
	xor.b32  	%r363, %r26, -2147483648;

BB0_22:
	clz.b32 	%r366, %r362;
	setp.eq.s32	%p24, %r366, 0;
	shl.b32 	%r173, %r362, %r366;
	mov.u32 	%r174, 32;
	sub.s32 	%r175, %r174, %r366;
	shr.u32 	%r176, %r364, %r175;
	add.s32 	%r177, %r176, %r173;
	selp.b32	%r44, %r362, %r177, %p24;
	mov.u32 	%r178, -921707870;
	mul.hi.u32 	%r365, %r44, %r178;
	setp.eq.s32	%p25, %r26, 0;
	neg.s32 	%r179, %r36;
	selp.b32	%r367, %r36, %r179, %p25;
	setp.lt.s32	%p26, %r365, 1;
	@%p26 bra 	BB0_24;

	mul.lo.s32 	%r180, %r44, -921707870;
	shr.u32 	%r181, %r180, 31;
	shl.b32 	%r182, %r365, 1;
	add.s32 	%r365, %r181, %r182;
	add.s32 	%r366, %r366, 1;

BB0_24:
	mov.u32 	%r183, 126;
	sub.s32 	%r184, %r183, %r366;
	shl.b32 	%r185, %r184, 23;
	add.s32 	%r186, %r365, 1;
	shr.u32 	%r187, %r186, 7;
	add.s32 	%r188, %r187, 1;
	shr.u32 	%r189, %r188, 1;
	add.s32 	%r190, %r189, %r185;
	or.b32  	%r191, %r190, %r363;
	mov.b32 	 %f843, %r191;

BB0_25:
	mul.rn.f32 	%f73, %f843, %f843;
	add.s32 	%r52, %r367, 1;
	and.b32  	%r53, %r52, 1;
	setp.eq.s32	%p27, %r53, 0;
	@%p27 bra 	BB0_27;
	bra.uni 	BB0_26;

BB0_27:
	mov.f32 	%f358, 0f3C08839E;
	mov.f32 	%f359, 0fB94CA1F9;
	fma.rn.f32 	%f844, %f359, %f73, %f358;
	bra.uni 	BB0_28;

BB0_26:
	mov.f32 	%f356, 0fBAB6061A;
	mov.f32 	%f357, 0f37CCF5CE;
	fma.rn.f32 	%f844, %f357, %f73, %f356;

BB0_28:
	@%p27 bra 	BB0_30;
	bra.uni 	BB0_29;

BB0_30:
	mov.f32 	%f816, 0f00000000;
	mov.f32 	%f363, 0fBE2AAAA3;
	fma.rn.f32 	%f364, %f844, %f73, %f363;
	fma.rn.f32 	%f845, %f364, %f73, %f816;
	bra.uni 	BB0_31;

BB0_29:
	mov.f32 	%f360, 0f3D2AAAA5;
	fma.rn.f32 	%f361, %f844, %f73, %f360;
	mov.f32 	%f362, 0fBF000000;
	fma.rn.f32 	%f845, %f361, %f73, %f362;

BB0_31:
	fma.rn.f32 	%f846, %f845, %f843, %f843;
	@%p27 bra 	BB0_33;

	mov.f32 	%f805, 0f3F800000;
	fma.rn.f32 	%f846, %f845, %f73, %f805;

BB0_33:
	and.b32  	%r192, %r52, 2;
	setp.eq.s32	%p30, %r192, 0;
	@%p30 bra 	BB0_35;

	mov.f32 	%f806, 0f00000000;
	mov.f32 	%f368, 0fBF800000;
	fma.rn.f32 	%f846, %f846, %f368, %f806;

BB0_35:
	@%p18 bra 	BB0_37;

	mov.f32 	%f815, 0f00000000;
	mul.rn.f32 	%f848, %f848, %f815;

BB0_37:
	mov.f32 	%f809, 0f27C234C5;
	mov.f32 	%f808, 0f33A22168;
	mov.f32 	%f807, 0f3FC90FDA;
	mul.f32 	%f370, %f848, 0f3F22F983;
	cvt.rni.s32.f32	%r377, %f370;
	cvt.rn.f32.s32	%f371, %r377;
	neg.f32 	%f372, %f371;
	fma.rn.f32 	%f374, %f372, %f807, %f848;
	fma.rn.f32 	%f376, %f372, %f808, %f374;
	fma.rn.f32 	%f849, %f372, %f809, %f376;
	abs.f32 	%f378, %f848;
	setp.leu.f32	%p32, %f378, 0f47CE4780;
	@%p32 bra 	BB0_48;

	add.u64 	%rd76, %SP, 4;
	cvta.to.local.u64 	%rd308, %rd76;
	mov.b32 	 %r55, %f848;
	shr.u32 	%r56, %r55, 23;
	shl.b32 	%r195, %r55, 8;
	or.b32  	%r57, %r195, -2147483648;
	mov.u32 	%r368, 0;
	mov.u64 	%rd309, %rd27;
	mov.u32 	%r369, %r368;

BB0_39:
	.pragma "nounroll";
	add.u64 	%rd305, %SP, 4;
	cvta.to.local.u64 	%rd304, %rd305;
	shl.b64 	%rd77, %rd309, 2;
	mov.u64 	%rd78, __cudart_i2opi_f;
	add.s64 	%rd79, %rd78, %rd77;
	ld.const.u32 	%r198, [%rd79];
	// inline asm
	{
	mad.lo.cc.u32   %r196, %r198, %r57, %r369;
	madc.hi.u32     %r369, %r198, %r57,  0;
	}
	// inline asm
	st.local.u32 	[%rd308], %r196;
	add.s32 	%r368, %r368, 1;
	cvt.s64.s32	%rd309, %r368;
	mul.wide.s32 	%rd80, %r368, 4;
	add.s64 	%rd308, %rd304, %rd80;
	setp.ne.s32	%p33, %r368, 6;
	@%p33 bra 	BB0_39;

	add.u64 	%rd301, %SP, 4;
	and.b32  	%r201, %r56, 255;
	add.s32 	%r202, %r201, -128;
	shr.u32 	%r203, %r202, 5;
	and.b32  	%r62, %r55, -2147483648;
	cvta.to.local.u64 	%rd82, %rd301;
	st.local.u32 	[%rd82+24], %r369;
	mov.u32 	%r204, 6;
	sub.s32 	%r205, %r204, %r203;
	mul.wide.s32 	%rd83, %r205, 4;
	add.s64 	%rd17, %rd82, %rd83;
	ld.local.u32 	%r370, [%rd17];
	ld.local.u32 	%r371, [%rd17+-4];
	and.b32  	%r65, %r56, 31;
	setp.eq.s32	%p34, %r65, 0;
	@%p34 bra 	BB0_42;

	mov.u32 	%r206, 32;
	sub.s32 	%r207, %r206, %r65;
	shr.u32 	%r208, %r371, %r207;
	shl.b32 	%r209, %r370, %r65;
	add.s32 	%r370, %r208, %r209;
	ld.local.u32 	%r210, [%rd17+-8];
	shr.u32 	%r211, %r210, %r207;
	shl.b32 	%r212, %r371, %r65;
	add.s32 	%r371, %r211, %r212;

BB0_42:
	shr.u32 	%r213, %r371, 30;
	shl.b32 	%r214, %r370, 2;
	add.s32 	%r372, %r213, %r214;
	shl.b32 	%r71, %r371, 2;
	shr.u32 	%r215, %r372, 31;
	shr.u32 	%r216, %r370, 30;
	add.s32 	%r72, %r215, %r216;
	setp.eq.s32	%p35, %r215, 0;
	@%p35 bra 	BB0_43;
	bra.uni 	BB0_44;

BB0_43:
	mov.u32 	%r373, %r62;
	mov.u32 	%r374, %r71;
	bra.uni 	BB0_45;

BB0_44:
	not.b32 	%r217, %r372;
	neg.s32 	%r374, %r71;
	setp.eq.s32	%p36, %r71, 0;
	selp.u32	%r218, 1, 0, %p36;
	add.s32 	%r372, %r218, %r217;
	xor.b32  	%r373, %r62, -2147483648;

BB0_45:
	clz.b32 	%r376, %r372;
	setp.eq.s32	%p37, %r376, 0;
	shl.b32 	%r219, %r372, %r376;
	mov.u32 	%r220, 32;
	sub.s32 	%r221, %r220, %r376;
	shr.u32 	%r222, %r374, %r221;
	add.s32 	%r223, %r222, %r219;
	selp.b32	%r80, %r372, %r223, %p37;
	mov.u32 	%r224, -921707870;
	mul.hi.u32 	%r375, %r80, %r224;
	setp.eq.s32	%p38, %r62, 0;
	neg.s32 	%r225, %r72;
	selp.b32	%r377, %r72, %r225, %p38;
	setp.lt.s32	%p39, %r375, 1;
	@%p39 bra 	BB0_47;

	mul.lo.s32 	%r226, %r80, -921707870;
	shr.u32 	%r227, %r226, 31;
	shl.b32 	%r228, %r375, 1;
	add.s32 	%r375, %r227, %r228;
	add.s32 	%r376, %r376, 1;

BB0_47:
	mov.u32 	%r229, 126;
	sub.s32 	%r230, %r229, %r376;
	shl.b32 	%r231, %r230, 23;
	add.s32 	%r232, %r375, 1;
	shr.u32 	%r233, %r232, 7;
	add.s32 	%r234, %r233, 1;
	shr.u32 	%r235, %r234, 1;
	add.s32 	%r236, %r235, %r231;
	or.b32  	%r237, %r236, %r373;
	mov.b32 	 %f849, %r237;

BB0_48:
	mul.rn.f32 	%f90, %f849, %f849;
	and.b32  	%r88, %r377, 1;
	setp.eq.s32	%p40, %r88, 0;
	@%p40 bra 	BB0_50;
	bra.uni 	BB0_49;

BB0_50:
	mov.f32 	%f381, 0f3C08839E;
	mov.f32 	%f382, 0fB94CA1F9;
	fma.rn.f32 	%f850, %f382, %f90, %f381;
	bra.uni 	BB0_51;

BB0_49:
	mov.f32 	%f379, 0fBAB6061A;
	mov.f32 	%f380, 0f37CCF5CE;
	fma.rn.f32 	%f850, %f380, %f90, %f379;

BB0_51:
	@%p40 bra 	BB0_53;
	bra.uni 	BB0_52;

BB0_53:
	mov.f32 	%f814, 0f00000000;
	mov.f32 	%f386, 0fBE2AAAA3;
	fma.rn.f32 	%f387, %f850, %f90, %f386;
	fma.rn.f32 	%f851, %f387, %f90, %f814;
	bra.uni 	BB0_54;

BB0_52:
	mov.f32 	%f383, 0f3D2AAAA5;
	fma.rn.f32 	%f384, %f850, %f90, %f383;
	mov.f32 	%f385, 0fBF000000;
	fma.rn.f32 	%f851, %f384, %f90, %f385;

BB0_54:
	fma.rn.f32 	%f852, %f851, %f849, %f849;
	@%p40 bra 	BB0_56;

	mov.f32 	%f810, 0f3F800000;
	fma.rn.f32 	%f852, %f851, %f90, %f810;

BB0_56:
	and.b32  	%r238, %r377, 2;
	setp.eq.s32	%p43, %r238, 0;
	@%p43 bra 	BB0_58;

	mov.f32 	%f811, 0f00000000;
	mov.f32 	%f391, 0fBF800000;
	fma.rn.f32 	%f852, %f852, %f391, %f811;

BB0_58:
	mul.f32 	%f392, %f65, %f846;
	mul.f32 	%f393, %f65, %f852;
	mul.f32 	%f394, %f10, %f393;
	mul.f32 	%f395, %f11, %f393;
	mul.f32 	%f396, %f12, %f393;
	fma.rn.f32 	%f397, %f47, %f392, %f394;
	fma.rn.f32 	%f398, %f48, %f392, %f395;
	fma.rn.f32 	%f399, %f49, %f392, %f396;
	fma.rn.f32 	%f102, %f820, %f64, %f397;
	fma.rn.f32 	%f103, %f821, %f64, %f398;
	fma.rn.f32 	%f104, %f822, %f64, %f399;
	setp.gt.f32	%p44, %f103, 0f00000000;
	setp.eq.s32	%p45, %r5, 0;
	or.pred  	%p46, %p45, %p44;
	@!%p46 bra 	BB0_60;
	bra.uni 	BB0_59;

BB0_59:
	mov.u32 	%r353, 4;
	add.u64 	%rd84, %SP, 0;
	cvta.to.local.u64 	%rd85, %rd84;
	max.f32 	%f406, %f412, %f208;
	mov.u32 	%r242, 1065353216;
	st.local.u32 	[%rd85], %r242;
	ld.global.u32 	%r239, [root];
	mov.u32 	%r240, 1;
	mov.f32 	%f407, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r239, %f7, %f8, %f9, %f102, %f103, %f104, %r240, %f406, %f407, %rd84, %r353);
	// inline asm
	mul.f32 	%f414, %f821, %f103;
	fma.rn.f32 	%f415, %f820, %f102, %f414;
	fma.rn.f32 	%f416, %f822, %f104, %f415;
	mul.f32 	%f417, %f416, 0f40800000;
	cvt.sat.f32.f32	%f418, %f417;
	ld.local.f32 	%f419, [%rd85];
	mul.f32 	%f420, %f419, %f418;
	mul.f32 	%f421, %f22, %f103;
	fma.rn.f32 	%f422, %f20, %f102, %f421;
	fma.rn.f32 	%f423, %f24, %f104, %f422;
	cvt.sat.f32.f32	%f424, %f423;
	fma.rn.f32 	%f856, %f424, %f420, %f856;
	mul.f32 	%f425, %f32, %f103;
	fma.rn.f32 	%f426, %f31, %f102, %f425;
	fma.rn.f32 	%f427, %f33, %f104, %f426;
	cvt.sat.f32.f32	%f428, %f427;
	fma.rn.f32 	%f857, %f420, %f428, %f857;
	mul.f32 	%f429, %f51, %f103;
	fma.rn.f32 	%f430, %f52, %f102, %f429;
	fma.rn.f32 	%f431, %f50, %f104, %f430;
	cvt.sat.f32.f32	%f432, %f431;
	fma.rn.f32 	%f858, %f420, %f432, %f858;
	add.f32 	%f855, %f855, %f420;
	cvt.sat.f32.f32	%f433, %f416;
	fma.rn.f32 	%f854, %f433, %f419, %f854;

BB0_60:
	add.s32 	%r356, %r356, 1;
	setp.lt.s32	%p47, %r356, %r1;
	@%p47 bra 	BB0_12;

	add.s32 	%r354, %r354, 1;
	setp.lt.s32	%p48, %r354, %r1;
	@%p48 bra 	BB0_11;

BB0_62:
	mul.lo.s32 	%r243, %r1, %r1;
	cvt.rn.f32.s32	%f434, %r243;
	div.rn.f32 	%f435, %f854, %f434;
	div.rn.f32 	%f120, %f855, %f434;
	div.rn.f32 	%f121, %f856, %f434;
	div.rn.f32 	%f122, %f857, %f434;
	div.rn.f32 	%f123, %f858, %f434;
	add.f32 	%f436, %f435, %f435;
	ld.global.f32 	%f437, [skyColor];
	mul.f32 	%f124, %f436, %f437;
	ld.global.f32 	%f438, [skyColor+4];
	mul.f32 	%f125, %f436, %f438;
	ld.global.f32 	%f439, [skyColor+8];
	mul.f32 	%f126, %f436, %f439;
	ld.global.u32 	%r378, [imageEnabled];
	and.b32  	%r244, %r378, 1;
	setp.eq.b32	%p49, %r244, 1;
	@!%p49 bra 	BB0_97;
	bra.uni 	BB0_63;

BB0_63:
	abs.f32 	%f128, %f124;
	setp.lt.f32	%p50, %f128, 0f00800000;
	mul.f32 	%f445, %f128, 0f4B800000;
	selp.f32	%f446, 0fC3170000, 0fC2FE0000, %p50;
	selp.f32	%f447, %f445, %f128, %p50;
	mov.b32 	 %r245, %f447;
	and.b32  	%r246, %r245, 8388607;
	or.b32  	%r247, %r246, 1065353216;
	mov.b32 	 %f448, %r247;
	shr.u32 	%r248, %r245, 23;
	cvt.rn.f32.u32	%f449, %r248;
	add.f32 	%f450, %f446, %f449;
	setp.gt.f32	%p51, %f448, 0f3FB504F3;
	mul.f32 	%f451, %f448, 0f3F000000;
	add.f32 	%f452, %f450, 0f3F800000;
	selp.f32	%f453, %f451, %f448, %p51;
	selp.f32	%f454, %f452, %f450, %p51;
	add.f32 	%f455, %f453, 0fBF800000;
	add.f32 	%f441, %f453, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f440,%f441;
	// inline asm
	add.f32 	%f456, %f455, %f455;
	mul.f32 	%f457, %f440, %f456;
	mul.f32 	%f458, %f457, %f457;
	mov.f32 	%f459, 0f3C4CAF63;
	mov.f32 	%f460, 0f3B18F0FE;
	fma.rn.f32 	%f461, %f460, %f458, %f459;
	mov.f32 	%f462, 0f3DAAAABD;
	fma.rn.f32 	%f463, %f461, %f458, %f462;
	mul.rn.f32 	%f464, %f463, %f458;
	mul.rn.f32 	%f465, %f464, %f457;
	sub.f32 	%f466, %f455, %f457;
	neg.f32 	%f467, %f457;
	add.f32 	%f468, %f466, %f466;
	fma.rn.f32 	%f469, %f467, %f455, %f468;
	mul.rn.f32 	%f470, %f440, %f469;
	add.f32 	%f471, %f465, %f457;
	sub.f32 	%f472, %f457, %f471;
	add.f32 	%f473, %f465, %f472;
	add.f32 	%f474, %f470, %f473;
	add.f32 	%f475, %f471, %f474;
	sub.f32 	%f476, %f471, %f475;
	add.f32 	%f477, %f474, %f476;
	mov.f32 	%f478, 0f3F317200;
	mul.rn.f32 	%f479, %f454, %f478;
	mov.f32 	%f480, 0f35BFBE8E;
	mul.rn.f32 	%f481, %f454, %f480;
	add.f32 	%f482, %f479, %f475;
	sub.f32 	%f483, %f479, %f482;
	add.f32 	%f484, %f475, %f483;
	add.f32 	%f485, %f477, %f484;
	add.f32 	%f486, %f481, %f485;
	add.f32 	%f487, %f482, %f486;
	sub.f32 	%f488, %f482, %f487;
	add.f32 	%f489, %f486, %f488;
	mov.f32 	%f490, 0f3EE66666;
	mul.rn.f32 	%f491, %f490, %f487;
	neg.f32 	%f492, %f491;
	fma.rn.f32 	%f493, %f490, %f487, %f492;
	fma.rn.f32 	%f494, %f490, %f489, %f493;
	mov.f32 	%f495, 0f00000000;
	fma.rn.f32 	%f496, %f495, %f487, %f494;
	add.rn.f32 	%f497, %f491, %f496;
	neg.f32 	%f498, %f497;
	add.rn.f32 	%f499, %f491, %f498;
	add.rn.f32 	%f500, %f499, %f496;
	mov.b32 	 %r249, %f497;
	setp.eq.s32	%p52, %r249, 1118925336;
	add.s32 	%r250, %r249, -1;
	mov.b32 	 %f501, %r250;
	add.f32 	%f502, %f500, 0f37000000;
	selp.f32	%f503, %f501, %f497, %p52;
	selp.f32	%f129, %f502, %f500, %p52;
	mul.f32 	%f504, %f503, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f505, %f504;
	mov.f32 	%f506, 0fBF317200;
	fma.rn.f32 	%f507, %f505, %f506, %f503;
	mov.f32 	%f508, 0fB5BFBE8E;
	fma.rn.f32 	%f509, %f505, %f508, %f507;
	mul.f32 	%f510, %f509, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f511, %f510;
	add.f32 	%f512, %f505, 0f00000000;
	ex2.approx.f32 	%f513, %f512;
	mul.f32 	%f514, %f511, %f513;
	setp.lt.f32	%p53, %f503, 0fC2D20000;
	selp.f32	%f515, 0f00000000, %f514, %p53;
	setp.gt.f32	%p54, %f503, 0f42D20000;
	selp.f32	%f864, 0f7F800000, %f515, %p54;
	setp.eq.f32	%p55, %f864, 0f7F800000;
	@%p55 bra 	BB0_65;

	fma.rn.f32 	%f864, %f864, %f129, %f864;

BB0_65:
	mov.f32 	%f777, 0f3E666666;
	cvt.rzi.f32.f32	%f776, %f777;
	fma.rn.f32 	%f775, %f776, 0fC0000000, 0f3EE66666;
	abs.f32 	%f774, %f775;
	setp.lt.f32	%p56, %f124, 0f00000000;
	setp.eq.f32	%p57, %f774, 0f3F800000;
	and.pred  	%p1, %p56, %p57;
	mov.b32 	 %r251, %f864;
	xor.b32  	%r252, %r251, -2147483648;
	mov.b32 	 %f516, %r252;
	selp.f32	%f866, %f516, %f864, %p1;
	setp.eq.f32	%p58, %f124, 0f00000000;
	@%p58 bra 	BB0_68;
	bra.uni 	BB0_66;

BB0_68:
	add.f32 	%f519, %f124, %f124;
	selp.f32	%f866, %f519, 0f00000000, %p57;
	bra.uni 	BB0_69;

BB0_118:
	mov.u64 	%rd219, image_HDR;
	cvta.global.u64 	%rd214, %rd219;
	mov.u32 	%r323, 8;
	mov.u64 	%rd218, 0;
	// inline asm
	call (%rd213), _rt_buffer_get_64, (%rd214, %r97, %r323, %rd20, %rd21, %rd218, %rd218);
	// inline asm
	mov.f32 	%f745, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f745;}

	// inline asm
	mov.u16 	%rs122, 0;
	st.v4.u16 	[%rd213], {%rs121, %rs121, %rs121, %rs122};

BB0_119:
	ld.global.u32 	%r324, [additive];
	setp.eq.s32	%p107, %r324, 0;
	@%p107 bra 	BB0_121;

	mov.u64 	%rd232, image_RNM0;
	cvta.global.u64 	%rd221, %rd232;
	mov.u32 	%r328, 8;
	mov.u64 	%rd231, 0;
	// inline asm
	call (%rd220), _rt_buffer_get_64, (%rd221, %r97, %r328, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	ld.v4.u16 	{%rs129, %rs130, %rs131, %rs132}, [%rd220];
	// inline asm
	{  cvt.f32.f16 %f746, %rs129;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f747, %rs130;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f748, %rs131;}

	// inline asm
	// inline asm
	call (%rd226), _rt_buffer_get_64, (%rd221, %r97, %r328, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	add.f32 	%f749, %f746, 0f00000000;
	add.f32 	%f750, %f747, 0f00000000;
	add.f32 	%f751, %f748, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs128, %f751;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs127, %f750;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs126, %f749;}

	// inline asm
	mov.u16 	%rs133, 0;
	st.v4.u16 	[%rd226], {%rs126, %rs127, %rs128, %rs133};
	bra.uni 	BB0_122;

BB0_121:
	mov.u64 	%rd239, image_RNM0;
	cvta.global.u64 	%rd234, %rd239;
	mov.u32 	%r330, 8;
	mov.u64 	%rd238, 0;
	// inline asm
	call (%rd233), _rt_buffer_get_64, (%rd234, %r97, %r330, %rd20, %rd21, %rd238, %rd238);
	// inline asm
	mov.f32 	%f752, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f752;}

	// inline asm
	mov.u16 	%rs135, 0;
	st.v4.u16 	[%rd233], {%rs134, %rs134, %rs134, %rs135};

BB0_122:
	ld.global.u32 	%r331, [additive];
	setp.eq.s32	%p108, %r331, 0;
	@%p108 bra 	BB0_124;

	mov.u64 	%rd252, image_RNM1;
	cvta.global.u64 	%rd241, %rd252;
	mov.u32 	%r335, 8;
	mov.u64 	%rd251, 0;
	// inline asm
	call (%rd240), _rt_buffer_get_64, (%rd241, %r97, %r335, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	ld.v4.u16 	{%rs142, %rs143, %rs144, %rs145}, [%rd240];
	// inline asm
	{  cvt.f32.f16 %f753, %rs142;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f754, %rs143;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f755, %rs144;}

	// inline asm
	// inline asm
	call (%rd246), _rt_buffer_get_64, (%rd241, %r97, %r335, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	add.f32 	%f756, %f753, 0f00000000;
	add.f32 	%f757, %f754, 0f00000000;
	add.f32 	%f758, %f755, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs141, %f758;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs140, %f757;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs139, %f756;}

	// inline asm
	mov.u16 	%rs146, 0;
	st.v4.u16 	[%rd246], {%rs139, %rs140, %rs141, %rs146};
	bra.uni 	BB0_125;

BB0_124:
	mov.u64 	%rd259, image_RNM1;
	cvta.global.u64 	%rd254, %rd259;
	mov.u32 	%r337, 8;
	mov.u64 	%rd258, 0;
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd254, %r97, %r337, %rd20, %rd21, %rd258, %rd258);
	// inline asm
	mov.f32 	%f759, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs147, %f759;}

	// inline asm
	mov.u16 	%rs148, 0;
	st.v4.u16 	[%rd253], {%rs147, %rs147, %rs147, %rs148};

BB0_125:
	ld.global.u32 	%r338, [additive];
	setp.eq.s32	%p109, %r338, 0;
	@%p109 bra 	BB0_127;

	mov.u64 	%rd272, image_RNM2;
	cvta.global.u64 	%rd261, %rd272;
	mov.u32 	%r342, 8;
	mov.u64 	%rd271, 0;
	// inline asm
	call (%rd260), _rt_buffer_get_64, (%rd261, %r97, %r342, %rd20, %rd21, %rd271, %rd271);
	// inline asm
	ld.v4.u16 	{%rs155, %rs156, %rs157, %rs158}, [%rd260];
	// inline asm
	{  cvt.f32.f16 %f760, %rs155;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f761, %rs156;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f762, %rs157;}

	// inline asm
	// inline asm
	call (%rd266), _rt_buffer_get_64, (%rd261, %r97, %r342, %rd20, %rd21, %rd271, %rd271);
	// inline asm
	add.f32 	%f763, %f760, 0f00000000;
	add.f32 	%f764, %f761, 0f00000000;
	add.f32 	%f765, %f762, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs154, %f765;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs153, %f764;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs152, %f763;}

	// inline asm
	mov.u16 	%rs159, 0;
	st.v4.u16 	[%rd266], {%rs152, %rs153, %rs154, %rs159};
	bra.uni 	BB0_128;

BB0_127:
	mov.u64 	%rd279, image_RNM2;
	cvta.global.u64 	%rd274, %rd279;
	mov.u32 	%r344, 8;
	mov.u64 	%rd278, 0;
	// inline asm
	call (%rd273), _rt_buffer_get_64, (%rd274, %r97, %r344, %rd20, %rd21, %rd278, %rd278);
	// inline asm
	mov.f32 	%f766, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs160, %f766;}

	// inline asm
	mov.u16 	%rs161, 0;
	st.v4.u16 	[%rd273], {%rs160, %rs160, %rs160, %rs161};

BB0_128:
	ld.global.u32 	%r345, [additive];
	setp.eq.s32	%p110, %r345, 0;
	@%p110 bra 	BB0_130;

	mov.u64 	%rd292, image_RNM3;
	cvta.global.u64 	%rd281, %rd292;
	mov.u32 	%r349, 8;
	mov.u64 	%rd291, 0;
	// inline asm
	call (%rd280), _rt_buffer_get_64, (%rd281, %r97, %r349, %rd20, %rd21, %rd291, %rd291);
	// inline asm
	ld.v4.u16 	{%rs168, %rs169, %rs170, %rs171}, [%rd280];
	// inline asm
	{  cvt.f32.f16 %f767, %rs168;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f768, %rs169;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f769, %rs170;}

	// inline asm
	// inline asm
	call (%rd286), _rt_buffer_get_64, (%rd281, %r97, %r349, %rd20, %rd21, %rd291, %rd291);
	// inline asm
	add.f32 	%f770, %f767, 0f00000000;
	add.f32 	%f771, %f768, 0f00000000;
	add.f32 	%f772, %f769, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs167, %f772;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs166, %f771;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs165, %f770;}

	// inline asm
	mov.u16 	%rs172, 0;
	st.v4.u16 	[%rd286], {%rs165, %rs166, %rs167, %rs172};
	bra.uni 	BB0_131;

BB0_130:
	mov.u64 	%rd299, image_RNM3;
	cvta.global.u64 	%rd294, %rd299;
	mov.u32 	%r351, 8;
	mov.u64 	%rd298, 0;
	// inline asm
	call (%rd293), _rt_buffer_get_64, (%rd294, %r97, %r351, %rd20, %rd21, %rd298, %rd298);
	// inline asm
	mov.f32 	%f773, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs173, %f773;}

	// inline asm
	mov.u16 	%rs174, 0;
	st.v4.u16 	[%rd293], {%rs173, %rs173, %rs173, %rs174};
	bra.uni 	BB0_131;

BB0_66:
	setp.geu.f32	%p59, %f124, 0f00000000;
	@%p59 bra 	BB0_69;

	mov.f32 	%f801, 0f3EE66666;
	cvt.rzi.f32.f32	%f518, %f801;
	setp.neu.f32	%p60, %f518, 0f3EE66666;
	selp.f32	%f866, 0f7FFFFFFF, %f866, %p60;

BB0_69:
	abs.f32 	%f778, %f124;
	add.f32 	%f520, %f778, 0f3EE66666;
	mov.b32 	 %r253, %f520;
	setp.lt.s32	%p62, %r253, 2139095040;
	@%p62 bra 	BB0_74;

	abs.f32 	%f799, %f124;
	setp.gtu.f32	%p63, %f799, 0f7F800000;
	@%p63 bra 	BB0_73;
	bra.uni 	BB0_71;

BB0_73:
	add.f32 	%f866, %f124, 0f3EE66666;
	bra.uni 	BB0_74;

BB0_71:
	abs.f32 	%f800, %f124;
	setp.neu.f32	%p64, %f800, 0f7F800000;
	@%p64 bra 	BB0_74;

	selp.f32	%f866, 0fFF800000, 0f7F800000, %p1;

BB0_74:
	mov.f32 	%f787, 0fB5BFBE8E;
	mov.f32 	%f786, 0fBF317200;
	mov.f32 	%f785, 0f00000000;
	mov.f32 	%f784, 0f35BFBE8E;
	mov.f32 	%f783, 0f3F317200;
	mov.f32 	%f782, 0f3DAAAABD;
	mov.f32 	%f781, 0f3C4CAF63;
	mov.f32 	%f780, 0f3B18F0FE;
	mov.f32 	%f779, 0f3EE66666;
	setp.eq.f32	%p65, %f124, 0f3F800000;
	selp.f32	%f140, 0f3F800000, %f866, %p65;
	abs.f32 	%f141, %f125;
	setp.lt.f32	%p66, %f141, 0f00800000;
	mul.f32 	%f523, %f141, 0f4B800000;
	selp.f32	%f524, 0fC3170000, 0fC2FE0000, %p66;
	selp.f32	%f525, %f523, %f141, %p66;
	mov.b32 	 %r254, %f525;
	and.b32  	%r255, %r254, 8388607;
	or.b32  	%r256, %r255, 1065353216;
	mov.b32 	 %f526, %r256;
	shr.u32 	%r257, %r254, 23;
	cvt.rn.f32.u32	%f527, %r257;
	add.f32 	%f528, %f524, %f527;
	setp.gt.f32	%p67, %f526, 0f3FB504F3;
	mul.f32 	%f529, %f526, 0f3F000000;
	add.f32 	%f530, %f528, 0f3F800000;
	selp.f32	%f531, %f529, %f526, %p67;
	selp.f32	%f532, %f530, %f528, %p67;
	add.f32 	%f533, %f531, 0fBF800000;
	add.f32 	%f522, %f531, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f521,%f522;
	// inline asm
	add.f32 	%f534, %f533, %f533;
	mul.f32 	%f535, %f521, %f534;
	mul.f32 	%f536, %f535, %f535;
	fma.rn.f32 	%f539, %f780, %f536, %f781;
	fma.rn.f32 	%f541, %f539, %f536, %f782;
	mul.rn.f32 	%f542, %f541, %f536;
	mul.rn.f32 	%f543, %f542, %f535;
	sub.f32 	%f544, %f533, %f535;
	neg.f32 	%f545, %f535;
	add.f32 	%f546, %f544, %f544;
	fma.rn.f32 	%f547, %f545, %f533, %f546;
	mul.rn.f32 	%f548, %f521, %f547;
	add.f32 	%f549, %f543, %f535;
	sub.f32 	%f550, %f535, %f549;
	add.f32 	%f551, %f543, %f550;
	add.f32 	%f552, %f548, %f551;
	add.f32 	%f553, %f549, %f552;
	sub.f32 	%f554, %f549, %f553;
	add.f32 	%f555, %f552, %f554;
	mul.rn.f32 	%f557, %f532, %f783;
	mul.rn.f32 	%f559, %f532, %f784;
	add.f32 	%f560, %f557, %f553;
	sub.f32 	%f561, %f557, %f560;
	add.f32 	%f562, %f553, %f561;
	add.f32 	%f563, %f555, %f562;
	add.f32 	%f564, %f559, %f563;
	add.f32 	%f565, %f560, %f564;
	sub.f32 	%f566, %f560, %f565;
	add.f32 	%f567, %f564, %f566;
	mul.rn.f32 	%f569, %f779, %f565;
	neg.f32 	%f570, %f569;
	fma.rn.f32 	%f571, %f779, %f565, %f570;
	fma.rn.f32 	%f572, %f779, %f567, %f571;
	fma.rn.f32 	%f574, %f785, %f565, %f572;
	add.rn.f32 	%f575, %f569, %f574;
	neg.f32 	%f576, %f575;
	add.rn.f32 	%f577, %f569, %f576;
	add.rn.f32 	%f578, %f577, %f574;
	mov.b32 	 %r258, %f575;
	setp.eq.s32	%p68, %r258, 1118925336;
	add.s32 	%r259, %r258, -1;
	mov.b32 	 %f579, %r259;
	add.f32 	%f580, %f578, 0f37000000;
	selp.f32	%f581, %f579, %f575, %p68;
	selp.f32	%f142, %f580, %f578, %p68;
	mul.f32 	%f582, %f581, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f583, %f582;
	fma.rn.f32 	%f585, %f583, %f786, %f581;
	fma.rn.f32 	%f587, %f583, %f787, %f585;
	mul.f32 	%f588, %f587, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f589, %f588;
	add.f32 	%f590, %f583, 0f00000000;
	ex2.approx.f32 	%f591, %f590;
	mul.f32 	%f592, %f589, %f591;
	setp.lt.f32	%p69, %f581, 0fC2D20000;
	selp.f32	%f593, 0f00000000, %f592, %p69;
	setp.gt.f32	%p70, %f581, 0f42D20000;
	selp.f32	%f867, 0f7F800000, %f593, %p70;
	setp.eq.f32	%p71, %f867, 0f7F800000;
	@%p71 bra 	BB0_76;

	fma.rn.f32 	%f867, %f867, %f142, %f867;

BB0_76:
	setp.lt.f32	%p72, %f125, 0f00000000;
	and.pred  	%p2, %p72, %p57;
	mov.b32 	 %r260, %f867;
	xor.b32  	%r261, %r260, -2147483648;
	mov.b32 	 %f594, %r261;
	selp.f32	%f869, %f594, %f867, %p2;
	setp.eq.f32	%p74, %f125, 0f00000000;
	@%p74 bra 	BB0_79;
	bra.uni 	BB0_77;

BB0_79:
	add.f32 	%f597, %f125, %f125;
	selp.f32	%f869, %f597, 0f00000000, %p57;
	bra.uni 	BB0_80;

BB0_77:
	setp.geu.f32	%p75, %f125, 0f00000000;
	@%p75 bra 	BB0_80;

	mov.f32 	%f798, 0f3EE66666;
	cvt.rzi.f32.f32	%f596, %f798;
	setp.neu.f32	%p76, %f596, 0f3EE66666;
	selp.f32	%f869, 0f7FFFFFFF, %f869, %p76;

BB0_80:
	abs.f32 	%f802, %f125;
	add.f32 	%f598, %f802, 0f3EE66666;
	mov.b32 	 %r262, %f598;
	setp.lt.s32	%p78, %r262, 2139095040;
	@%p78 bra 	BB0_85;

	abs.f32 	%f803, %f125;
	setp.gtu.f32	%p79, %f803, 0f7F800000;
	@%p79 bra 	BB0_84;
	bra.uni 	BB0_82;

BB0_84:
	add.f32 	%f869, %f125, 0f3EE66666;
	bra.uni 	BB0_85;

BB0_82:
	abs.f32 	%f804, %f125;
	setp.neu.f32	%p80, %f804, 0f7F800000;
	@%p80 bra 	BB0_85;

	selp.f32	%f869, 0fFF800000, 0f7F800000, %p2;

BB0_85:
	mov.f32 	%f796, 0fB5BFBE8E;
	mov.f32 	%f795, 0fBF317200;
	mov.f32 	%f794, 0f00000000;
	mov.f32 	%f793, 0f35BFBE8E;
	mov.f32 	%f792, 0f3F317200;
	mov.f32 	%f791, 0f3DAAAABD;
	mov.f32 	%f790, 0f3C4CAF63;
	mov.f32 	%f789, 0f3B18F0FE;
	mov.f32 	%f788, 0f3EE66666;
	setp.eq.f32	%p81, %f125, 0f3F800000;
	selp.f32	%f153, 0f3F800000, %f869, %p81;
	abs.f32 	%f154, %f126;
	setp.lt.f32	%p82, %f154, 0f00800000;
	mul.f32 	%f601, %f154, 0f4B800000;
	selp.f32	%f602, 0fC3170000, 0fC2FE0000, %p82;
	selp.f32	%f603, %f601, %f154, %p82;
	mov.b32 	 %r263, %f603;
	and.b32  	%r264, %r263, 8388607;
	or.b32  	%r265, %r264, 1065353216;
	mov.b32 	 %f604, %r265;
	shr.u32 	%r266, %r263, 23;
	cvt.rn.f32.u32	%f605, %r266;
	add.f32 	%f606, %f602, %f605;
	setp.gt.f32	%p83, %f604, 0f3FB504F3;
	mul.f32 	%f607, %f604, 0f3F000000;
	add.f32 	%f608, %f606, 0f3F800000;
	selp.f32	%f609, %f607, %f604, %p83;
	selp.f32	%f610, %f608, %f606, %p83;
	add.f32 	%f611, %f609, 0fBF800000;
	add.f32 	%f600, %f609, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f599,%f600;
	// inline asm
	add.f32 	%f612, %f611, %f611;
	mul.f32 	%f613, %f599, %f612;
	mul.f32 	%f614, %f613, %f613;
	fma.rn.f32 	%f617, %f789, %f614, %f790;
	fma.rn.f32 	%f619, %f617, %f614, %f791;
	mul.rn.f32 	%f620, %f619, %f614;
	mul.rn.f32 	%f621, %f620, %f613;
	sub.f32 	%f622, %f611, %f613;
	neg.f32 	%f623, %f613;
	add.f32 	%f624, %f622, %f622;
	fma.rn.f32 	%f625, %f623, %f611, %f624;
	mul.rn.f32 	%f626, %f599, %f625;
	add.f32 	%f627, %f621, %f613;
	sub.f32 	%f628, %f613, %f627;
	add.f32 	%f629, %f621, %f628;
	add.f32 	%f630, %f626, %f629;
	add.f32 	%f631, %f627, %f630;
	sub.f32 	%f632, %f627, %f631;
	add.f32 	%f633, %f630, %f632;
	mul.rn.f32 	%f635, %f610, %f792;
	mul.rn.f32 	%f637, %f610, %f793;
	add.f32 	%f638, %f635, %f631;
	sub.f32 	%f639, %f635, %f638;
	add.f32 	%f640, %f631, %f639;
	add.f32 	%f641, %f633, %f640;
	add.f32 	%f642, %f637, %f641;
	add.f32 	%f643, %f638, %f642;
	sub.f32 	%f644, %f638, %f643;
	add.f32 	%f645, %f642, %f644;
	mul.rn.f32 	%f647, %f788, %f643;
	neg.f32 	%f648, %f647;
	fma.rn.f32 	%f649, %f788, %f643, %f648;
	fma.rn.f32 	%f650, %f788, %f645, %f649;
	fma.rn.f32 	%f652, %f794, %f643, %f650;
	add.rn.f32 	%f653, %f647, %f652;
	neg.f32 	%f654, %f653;
	add.rn.f32 	%f655, %f647, %f654;
	add.rn.f32 	%f656, %f655, %f652;
	mov.b32 	 %r267, %f653;
	setp.eq.s32	%p84, %r267, 1118925336;
	add.s32 	%r268, %r267, -1;
	mov.b32 	 %f657, %r268;
	add.f32 	%f658, %f656, 0f37000000;
	selp.f32	%f659, %f657, %f653, %p84;
	selp.f32	%f155, %f658, %f656, %p84;
	mul.f32 	%f660, %f659, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f661, %f660;
	fma.rn.f32 	%f663, %f661, %f795, %f659;
	fma.rn.f32 	%f665, %f661, %f796, %f663;
	mul.f32 	%f666, %f665, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f667, %f666;
	add.f32 	%f668, %f661, 0f00000000;
	ex2.approx.f32 	%f669, %f668;
	mul.f32 	%f670, %f667, %f669;
	setp.lt.f32	%p85, %f659, 0fC2D20000;
	selp.f32	%f671, 0f00000000, %f670, %p85;
	setp.gt.f32	%p86, %f659, 0f42D20000;
	selp.f32	%f870, 0f7F800000, %f671, %p86;
	setp.eq.f32	%p87, %f870, 0f7F800000;
	@%p87 bra 	BB0_87;

	fma.rn.f32 	%f870, %f870, %f155, %f870;

BB0_87:
	setp.lt.f32	%p88, %f126, 0f00000000;
	and.pred  	%p3, %p88, %p57;
	mov.b32 	 %r269, %f870;
	xor.b32  	%r270, %r269, -2147483648;
	mov.b32 	 %f672, %r270;
	selp.f32	%f872, %f672, %f870, %p3;
	setp.eq.f32	%p90, %f126, 0f00000000;
	@%p90 bra 	BB0_90;
	bra.uni 	BB0_88;

BB0_90:
	add.f32 	%f675, %f126, %f126;
	selp.f32	%f872, %f675, 0f00000000, %p57;
	bra.uni 	BB0_91;

BB0_88:
	setp.geu.f32	%p91, %f126, 0f00000000;
	@%p91 bra 	BB0_91;

	mov.f32 	%f797, 0f3EE66666;
	cvt.rzi.f32.f32	%f674, %f797;
	setp.neu.f32	%p92, %f674, 0f3EE66666;
	selp.f32	%f872, 0f7FFFFFFF, %f872, %p92;

BB0_91:
	abs.f32 	%f817, %f126;
	add.f32 	%f676, %f817, 0f3EE66666;
	mov.b32 	 %r271, %f676;
	setp.lt.s32	%p94, %r271, 2139095040;
	@%p94 bra 	BB0_96;

	abs.f32 	%f818, %f126;
	setp.gtu.f32	%p95, %f818, 0f7F800000;
	@%p95 bra 	BB0_95;
	bra.uni 	BB0_93;

BB0_95:
	add.f32 	%f872, %f126, 0f3EE66666;
	bra.uni 	BB0_96;

BB0_93:
	abs.f32 	%f819, %f126;
	setp.neu.f32	%p96, %f819, 0f7F800000;
	@%p96 bra 	BB0_96;

	selp.f32	%f872, 0fFF800000, 0f7F800000, %p3;

BB0_96:
	mov.u32 	%r352, 4;
	setp.eq.f32	%p97, %f126, 0f3F800000;
	selp.f32	%f677, 0f3F800000, %f872, %p97;
	cvt.u64.u32	%rd89, %r4;
	cvt.u64.u32	%rd88, %r3;
	mov.u64 	%rd92, image;
	cvta.global.u64 	%rd87, %rd92;
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd87, %r97, %r352, %rd88, %rd89, %rd27, %rd27);
	// inline asm
	cvt.sat.f32.f32	%f678, %f677;
	mul.f32 	%f679, %f678, 0f437FFD71;
	cvt.rzi.u32.f32	%r274, %f679;
	cvt.sat.f32.f32	%f680, %f153;
	mul.f32 	%f681, %f680, 0f437FFD71;
	cvt.rzi.u32.f32	%r275, %f681;
	cvt.sat.f32.f32	%f682, %f140;
	mul.f32 	%f683, %f682, 0f437FFD71;
	cvt.rzi.u32.f32	%r276, %f683;
	cvt.u16.u32	%rs41, %r274;
	cvt.u16.u32	%rs42, %r276;
	cvt.u16.u32	%rs43, %r275;
	mov.u16 	%rs44, 255;
	st.v4.u8 	[%rd86], {%rs41, %rs43, %rs42, %rs44};
	ld.global.u32 	%r378, [imageEnabled];

BB0_97:
	cvt.u64.u32	%rd18, %r3;
	cvt.u64.u32	%rd19, %r4;
	and.b32  	%r277, %r378, 4;
	setp.eq.s32	%p98, %r277, 0;
	@%p98 bra 	BB0_101;

	ld.global.u32 	%r278, [additive];
	setp.eq.s32	%p99, %r278, 0;
	mov.f32 	%f684, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f684;}

	// inline asm
	@%p99 bra 	BB0_100;

	mov.u64 	%rd105, image_HDR;
	cvta.global.u64 	%rd94, %rd105;
	mov.u32 	%r282, 8;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r97, %r282, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs52, %rs53, %rs54, %rs55}, [%rd93];
	// inline asm
	{  cvt.f32.f16 %f685, %rs52;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f686, %rs53;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f687, %rs54;}

	// inline asm
	// inline asm
	call (%rd99), _rt_buffer_get_64, (%rd94, %r97, %r282, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f688, %f124, %f685;
	add.f32 	%f689, %f125, %f686;
	add.f32 	%f690, %f126, %f687;
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f690;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f689;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f688;}

	// inline asm
	st.v4.u16 	[%rd99], {%rs49, %rs50, %rs51, %rs45};
	bra.uni 	BB0_101;

BB0_100:
	mov.u64 	%rd112, image_HDR;
	cvta.global.u64 	%rd107, %rd112;
	mov.u32 	%r284, 8;
	// inline asm
	call (%rd106), _rt_buffer_get_64, (%rd107, %r97, %r284, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f126;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f125;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f124;}

	// inline asm
	st.v4.u16 	[%rd106], {%rs56, %rs57, %rs58, %rs45};

BB0_101:
	mul.f32 	%f166, %f120, 0f3F000000;
	ld.global.f32 	%f695, [skyColor];
	mul.f32 	%f167, %f166, %f695;
	ld.global.f32 	%f696, [skyColor+4];
	mul.f32 	%f168, %f166, %f696;
	ld.global.f32 	%f697, [skyColor+8];
	mul.f32 	%f169, %f166, %f697;
	ld.global.u32 	%r285, [additive];
	setp.eq.s32	%p100, %r285, 0;
	mov.f32 	%f694, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f694;}

	// inline asm
	@%p100 bra 	BB0_103;

	mov.u64 	%rd125, image_RNM0;
	cvta.global.u64 	%rd114, %rd125;
	mov.u32 	%r289, 8;
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd114, %r97, %r289, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs66, %rs67, %rs68, %rs69}, [%rd113];
	// inline asm
	{  cvt.f32.f16 %f698, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f699, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f700, %rs68;}

	// inline asm
	// inline asm
	call (%rd119), _rt_buffer_get_64, (%rd114, %r97, %r289, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f701, %f167, %f698;
	add.f32 	%f702, %f168, %f699;
	add.f32 	%f703, %f169, %f700;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f703;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f702;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f701;}

	// inline asm
	st.v4.u16 	[%rd119], {%rs63, %rs64, %rs65, %rs59};
	bra.uni 	BB0_104;

BB0_103:
	mov.u64 	%rd132, image_RNM0;
	cvta.global.u64 	%rd127, %rd132;
	mov.u32 	%r291, 8;
	// inline asm
	call (%rd126), _rt_buffer_get_64, (%rd127, %r97, %r291, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f169;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f168;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f167;}

	// inline asm
	st.v4.u16 	[%rd126], {%rs70, %rs71, %rs72, %rs59};

BB0_104:
	mov.f32 	%f708, 0f34000000;
	max.f32 	%f709, %f166, %f708;
	mul.f32 	%f710, %f121, 0f3F000000;
	div.rn.f32 	%f711, %f710, %f709;
	fma.rn.f32 	%f170, %f711, 0f3F000000, 0f3F000000;
	mul.f32 	%f712, %f122, 0f3F000000;
	div.rn.f32 	%f713, %f712, %f709;
	fma.rn.f32 	%f171, %f713, 0f3F000000, 0f3F000000;
	mul.f32 	%f714, %f123, 0f3F000000;
	div.rn.f32 	%f715, %f714, %f709;
	fma.rn.f32 	%f172, %f715, 0f3F000000, 0f3F000000;
	ld.global.u32 	%r292, [additive];
	setp.eq.s32	%p101, %r292, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f694;}

	// inline asm
	@%p101 bra 	BB0_106;

	mov.u64 	%rd145, image_RNM1;
	cvta.global.u64 	%rd134, %rd145;
	mov.u32 	%r296, 8;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r97, %r296, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs80, %rs81, %rs82, %rs83}, [%rd133];
	// inline asm
	{  cvt.f32.f16 %f716, %rs80;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f717, %rs81;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f718, %rs82;}

	// inline asm
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd134, %r97, %r296, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f719, %f170, %f716;
	add.f32 	%f720, %f170, %f717;
	add.f32 	%f721, %f170, %f718;
	// inline asm
	{  cvt.rn.f16.f32 %rs79, %f721;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f720;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f719;}

	// inline asm
	st.v4.u16 	[%rd139], {%rs77, %rs78, %rs79, %rs73};
	bra.uni 	BB0_107;

BB0_106:
	mov.u64 	%rd152, image_RNM1;
	cvta.global.u64 	%rd147, %rd152;
	mov.u32 	%r298, 8;
	// inline asm
	call (%rd146), _rt_buffer_get_64, (%rd147, %r97, %r298, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs84, %f170;}

	// inline asm
	st.v4.u16 	[%rd146], {%rs84, %rs84, %rs84, %rs73};

BB0_107:
	ld.global.u32 	%r299, [additive];
	setp.eq.s32	%p102, %r299, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f694;}

	// inline asm
	@%p102 bra 	BB0_109;

	mov.u64 	%rd165, image_RNM2;
	cvta.global.u64 	%rd154, %rd165;
	mov.u32 	%r303, 8;
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd154, %r97, %r303, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs92, %rs93, %rs94, %rs95}, [%rd153];
	// inline asm
	{  cvt.f32.f16 %f724, %rs92;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f725, %rs93;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f726, %rs94;}

	// inline asm
	// inline asm
	call (%rd159), _rt_buffer_get_64, (%rd154, %r97, %r303, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f727, %f171, %f724;
	add.f32 	%f728, %f171, %f725;
	add.f32 	%f729, %f171, %f726;
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f729;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f728;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f727;}

	// inline asm
	st.v4.u16 	[%rd159], {%rs89, %rs90, %rs91, %rs85};
	bra.uni 	BB0_110;

BB0_109:
	mov.u64 	%rd172, image_RNM2;
	cvta.global.u64 	%rd167, %rd172;
	mov.u32 	%r305, 8;
	// inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r97, %r305, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs96, %f171;}

	// inline asm
	st.v4.u16 	[%rd166], {%rs96, %rs96, %rs96, %rs85};

BB0_110:
	ld.global.u32 	%r306, [additive];
	setp.eq.s32	%p103, %r306, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f694;}

	// inline asm
	@%p103 bra 	BB0_112;

	mov.u64 	%rd185, image_RNM3;
	cvta.global.u64 	%rd174, %rd185;
	mov.u32 	%r310, 8;
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd174, %r97, %r310, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs104, %rs105, %rs106, %rs107}, [%rd173];
	// inline asm
	{  cvt.f32.f16 %f732, %rs104;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f733, %rs105;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f734, %rs106;}

	// inline asm
	// inline asm
	call (%rd179), _rt_buffer_get_64, (%rd174, %r97, %r310, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f735, %f172, %f732;
	add.f32 	%f736, %f172, %f733;
	add.f32 	%f737, %f172, %f734;
	// inline asm
	{  cvt.rn.f16.f32 %rs103, %f737;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs102, %f736;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f735;}

	// inline asm
	st.v4.u16 	[%rd179], {%rs101, %rs102, %rs103, %rs97};
	bra.uni 	BB0_131;

BB0_112:
	mov.u64 	%rd192, image_RNM3;
	cvta.global.u64 	%rd187, %rd192;
	mov.u32 	%r312, 8;
	// inline asm
	call (%rd186), _rt_buffer_get_64, (%rd187, %r97, %r312, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f172;}

	// inline asm
	st.v4.u16 	[%rd186], {%rs108, %rs108, %rs108, %rs97};

BB0_131:
	ret;
}


