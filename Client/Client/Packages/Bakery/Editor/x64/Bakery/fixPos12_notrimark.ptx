//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 uvfacenormal[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvsmoothpos[1];
.global .align 1 .b8 triangleMarks[1];
.global .align 1 .b8 image_Mask[1];
.global .align 4 .f32 fakeBias;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8fakeBiasE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8fakeBiasE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8fakeBiasE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8fakeBiasE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8fakeBiasE[1];

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<11>;
	.reg .f32 	%f<360>;
	.reg .b32 	%r<109>;
	.reg .b64 	%rd<101>;


	mov.u64 	%rd100, __local_depot0;
	cvta.local.u64 	%SP, %rd100;
	ld.global.v2.u32 	{%r6, %r7}, [pixelID];
	cvt.u64.u32	%rd7, %r6;
	cvt.u64.u32	%rd8, %r7;
	mov.u64 	%rd11, uvfacenormal;
	cvta.global.u64 	%rd6, %rd11;
	mov.u32 	%r4, 2;
	mov.u32 	%r5, 4;
	mov.u64 	%rd10, 0;
	// inline asm
	call (%rd5), _rt_buffer_get_64, (%rd6, %r4, %r5, %rd7, %rd8, %rd10, %rd10);
	// inline asm
	ld.u32 	%r1, [%rd5];
	shr.u32 	%r10, %r1, 16;
	cvt.u16.u32	%rs1, %r10;
	and.b16  	%rs2, %rs1, 255;
	cvt.u16.u32	%rs3, %r1;
	or.b16  	%rs4, %rs3, %rs2;
	setp.eq.s16	%p1, %rs4, 0;
	mov.f32 	%f338, 0f00000000;
	mov.f32 	%f339, %f338;
	mov.f32 	%f340, %f338;
	@%p1 bra 	BB0_2;

	ld.u8 	%rs5, [%rd5+1];
	and.b16  	%rs7, %rs3, 255;
	cvt.rn.f32.u16	%f103, %rs7;
	div.rn.f32 	%f104, %f103, 0f437F0000;
	fma.rn.f32 	%f105, %f104, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f106, %rs5;
	div.rn.f32 	%f107, %f106, 0f437F0000;
	fma.rn.f32 	%f108, %f107, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f109, %rs2;
	div.rn.f32 	%f110, %f109, 0f437F0000;
	fma.rn.f32 	%f111, %f110, 0f40000000, 0fBF800000;
	mul.f32 	%f112, %f108, %f108;
	fma.rn.f32 	%f113, %f105, %f105, %f112;
	fma.rn.f32 	%f114, %f111, %f111, %f113;
	sqrt.rn.f32 	%f115, %f114;
	rcp.rn.f32 	%f116, %f115;
	mul.f32 	%f338, %f105, %f116;
	mul.f32 	%f339, %f108, %f116;
	mul.f32 	%f340, %f111, %f116;

BB0_2:
	ld.global.v2.u32 	{%r11, %r12}, [pixelID];
	ld.global.v2.u32 	{%r14, %r15}, [tileInfo];
	add.s32 	%r2, %r11, %r14;
	add.s32 	%r3, %r12, %r15;
	setp.eq.f32	%p2, %f339, 0f00000000;
	setp.eq.f32	%p3, %f338, 0f00000000;
	and.pred  	%p4, %p3, %p2;
	setp.eq.f32	%p5, %f340, 0f00000000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB0_24;
	bra.uni 	BB0_3;

BB0_24:
	cvt.u64.u32	%rd84, %r2;
	cvt.u64.u32	%rd85, %r3;
	mov.u64 	%rd88, image_HDR;
	cvta.global.u64 	%rd83, %rd88;
	mov.u32 	%r91, 16;
	// inline asm
	call (%rd82), _rt_buffer_get_64, (%rd83, %r4, %r91, %rd84, %rd85, %rd10, %rd10);
	// inline asm
	mov.f32 	%f326, 0f00000000;
	st.v4.f32 	[%rd82], {%f326, %f326, %f326, %f326};
	bra.uni 	BB0_25;

BB0_3:
	ld.global.v2.u32 	{%r36, %r37}, [pixelID];
	cvt.u64.u32	%rd14, %r36;
	cvt.u64.u32	%rd15, %r37;
	mov.u64 	%rd55, uvpos;
	cvta.global.u64 	%rd13, %rd55;
	mov.u32 	%r32, 16;
	// inline asm
	call (%rd12), _rt_buffer_get_64, (%rd13, %r4, %r32, %rd14, %rd15, %rd10, %rd10);
	// inline asm
	ld.f32 	%f126, [%rd12];
	ld.global.v2.u32 	{%r40, %r41}, [pixelID];
	cvt.u64.u32	%rd20, %r40;
	cvt.u64.u32	%rd21, %r41;
	// inline asm
	call (%rd18), _rt_buffer_get_64, (%rd13, %r4, %r32, %rd20, %rd21, %rd10, %rd10);
	// inline asm
	ld.f32 	%f127, [%rd18+4];
	ld.global.v2.u32 	{%r44, %r45}, [pixelID];
	cvt.u64.u32	%rd26, %r44;
	cvt.u64.u32	%rd27, %r45;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd13, %r4, %r32, %rd26, %rd27, %rd10, %rd10);
	// inline asm
	abs.f32 	%f128, %f126;
	setp.gtu.f32	%p7, %f128, 0f7F800000;
	abs.f32 	%f129, %f127;
	setp.gtu.f32	%p8, %f129, 0f7F800000;
	ld.f32 	%f130, [%rd24+8];
	abs.f32 	%f131, %f130;
	setp.gtu.f32	%p9, %f131, 0f7F800000;
	ld.global.v2.u32 	{%r48, %r49}, [pixelID];
	cvt.u64.u32	%rd32, %r48;
	cvt.u64.u32	%rd33, %r49;
	// inline asm
	call (%rd30), _rt_buffer_get_64, (%rd13, %r4, %r32, %rd32, %rd33, %rd10, %rd10);
	// inline asm
	ld.f32 	%f132, [%rd30+12];
	add.f32 	%f7, %f132, 0f38D1B717;
	mul.f32 	%f133, %f126, 0f3456BF95;
	selp.f32	%f134, 0f00000000, %f133, %p7;
	mul.f32 	%f135, %f127, 0f3456BF95;
	selp.f32	%f136, 0f00000000, %f135, %p8;
	mul.f32 	%f137, %f130, 0f3456BF95;
	selp.f32	%f138, 0f00000000, %f137, %p9;
	abs.f32 	%f139, %f338;
	div.rn.f32 	%f140, %f134, %f139;
	abs.f32 	%f141, %f339;
	div.rn.f32 	%f142, %f136, %f141;
	abs.f32 	%f143, %f340;
	div.rn.f32 	%f144, %f138, %f143;
	abs.f32 	%f145, %f140;
	abs.f32 	%f146, %f142;
	abs.f32 	%f147, %f144;
	mov.f32 	%f148, 0f38D1B717;
	max.f32 	%f149, %f145, %f148;
	max.f32 	%f150, %f146, %f148;
	max.f32 	%f151, %f147, %f148;
	ld.global.v2.u32 	{%r52, %r53}, [pixelID];
	cvt.u64.u32	%rd38, %r52;
	cvt.u64.u32	%rd39, %r53;
	mov.u64 	%rd56, uvsmoothpos;
	cvta.global.u64 	%rd37, %rd56;
	// inline asm
	call (%rd36), _rt_buffer_get_64, (%rd37, %r4, %r32, %rd38, %rd39, %rd10, %rd10);
	// inline asm
	ld.f32 	%f345, [%rd36];
	ld.global.v2.u32 	{%r56, %r57}, [pixelID];
	cvt.u64.u32	%rd44, %r56;
	cvt.u64.u32	%rd45, %r57;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd37, %r4, %r32, %rd44, %rd45, %rd10, %rd10);
	// inline asm
	ld.f32 	%f346, [%rd42+4];
	ld.global.v2.u32 	{%r60, %r61}, [pixelID];
	cvt.u64.u32	%rd50, %r60;
	cvt.u64.u32	%rd51, %r61;
	// inline asm
	call (%rd48), _rt_buffer_get_64, (%rd37, %r4, %r32, %rd50, %rd51, %rd10, %rd10);
	// inline asm
	fma.rn.f32 	%f10, %f338, %f149, %f345;
	fma.rn.f32 	%f11, %f339, %f150, %f346;
	ld.f32 	%f347, [%rd48+8];
	fma.rn.f32 	%f13, %f340, %f151, %f347;
	setp.gt.f32	%p10, %f139, %f143;
	neg.f32 	%f152, %f339;
	selp.f32	%f153, %f152, 0f00000000, %p10;
	neg.f32 	%f154, %f340;
	selp.f32	%f155, %f338, %f154, %p10;
	selp.f32	%f156, 0f00000000, %f339, %p10;
	mul.f32 	%f157, %f155, %f155;
	fma.rn.f32 	%f158, %f153, %f153, %f157;
	fma.rn.f32 	%f159, %f156, %f156, %f158;
	sqrt.rn.f32 	%f160, %f159;
	rcp.rn.f32 	%f161, %f160;
	mul.f32 	%f14, %f153, %f161;
	mul.f32 	%f15, %f155, %f161;
	mul.f32 	%f16, %f156, %f161;
	mul.f32 	%f162, %f340, %f15;
	mul.f32 	%f163, %f339, %f16;
	sub.f32 	%f17, %f162, %f163;
	mul.f32 	%f164, %f338, %f16;
	mul.f32 	%f165, %f340, %f14;
	sub.f32 	%f18, %f164, %f165;
	mul.f32 	%f166, %f339, %f14;
	mul.f32 	%f167, %f338, %f15;
	sub.f32 	%f19, %f166, %f167;
	mov.f32 	%f168, 0f3F8147AE;
	sqrt.rn.f32 	%f169, %f168;
	rcp.rn.f32 	%f20, %f169;
	neg.f32 	%f21, %f20;
	mul.f32 	%f22, %f20, 0f00000000;
	mul.f32 	%f170, %f20, 0f3DCCCCCD;
	mul.f32 	%f171, %f10, 0f3456BF95;
	mul.f32 	%f172, %f11, 0f3456BF95;
	mul.f32 	%f173, %f13, 0f3456BF95;
	abs.f32 	%f174, %f171;
	abs.f32 	%f175, %f172;
	abs.f32 	%f176, %f173;
	max.f32 	%f177, %f174, %f175;
	max.f32 	%f178, %f177, %f176;
	max.f32 	%f23, %f178, %f148;
	mul.f32 	%f124, %f7, 0f3FB504F3;
	mul.f32 	%f25, %f14, %f22;
	mul.f32 	%f26, %f15, %f22;
	mul.f32 	%f27, %f16, %f22;
	fma.rn.f32 	%f179, %f17, %f21, %f25;
	fma.rn.f32 	%f180, %f18, %f21, %f26;
	fma.rn.f32 	%f181, %f19, %f21, %f27;
	mul.f32 	%f28, %f338, %f170;
	mul.f32 	%f29, %f339, %f170;
	mul.f32 	%f30, %f340, %f170;
	add.f32 	%f120, %f179, %f28;
	add.f32 	%f121, %f180, %f29;
	add.f32 	%f122, %f181, %f30;
	add.u64 	%rd54, %SP, 12;
	cvta.to.local.u64 	%rd57, %rd54;
	mov.u32 	%r34, 0;
	st.local.u32 	[%rd57+8], %r34;
	st.local.u32 	[%rd57+4], %r34;
	st.local.u32 	[%rd57], %r34;
	ld.global.u32 	%r33, [root];
	mov.f32 	%f123, 0f00000000;
	mov.u32 	%r35, 12;
	// inline asm
	call _rt_trace_64, (%r33, %f10, %f11, %f13, %f120, %f121, %f122, %r34, %f123, %f124, %rd54, %r35);
	// inline asm
	ld.local.f32 	%f34, [%rd57+4];
	ld.local.f32 	%f35, [%rd57];
	add.f32 	%f182, %f35, %f34;
	ld.local.f32 	%f36, [%rd57+8];
	add.f32 	%f183, %f182, %f36;
	mov.f32 	%f348, 0f47C34F80;
	setp.eq.f32	%p11, %f183, 0f00000000;
	@%p11 bra 	BB0_6;

	mul.f32 	%f185, %f34, %f34;
	fma.rn.f32 	%f186, %f35, %f35, %f185;
	fma.rn.f32 	%f187, %f36, %f36, %f186;
	sqrt.rn.f32 	%f37, %f187;
	rcp.rn.f32 	%f188, %f37;
	mul.f32 	%f189, %f188, %f35;
	mul.f32 	%f190, %f188, %f34;
	mul.f32 	%f191, %f188, %f36;
	fma.rn.f32 	%f192, %f23, %f189, %f10;
	fma.rn.f32 	%f193, %f23, %f190, %f11;
	fma.rn.f32 	%f194, %f23, %f191, %f13;
	fma.rn.f32 	%f38, %f37, %f120, %f192;
	fma.rn.f32 	%f39, %f37, %f121, %f193;
	fma.rn.f32 	%f40, %f37, %f122, %f194;
	setp.geu.f32	%p12, %f37, 0f47C34F80;
	@%p12 bra 	BB0_6;

	mov.f32 	%f345, %f38;
	mov.f32 	%f346, %f39;
	mov.f32 	%f347, %f40;
	mov.f32 	%f348, %f37;

BB0_6:
	mov.u32 	%r93, 12;
	mov.f32 	%f327, 0f00000000;
	add.u64 	%rd90, %SP, 12;
	cvta.to.local.u64 	%rd89, %rd90;
	mov.u32 	%r92, 0;
	fma.rn.f32 	%f203, %f17, %f20, %f25;
	fma.rn.f32 	%f204, %f18, %f20, %f26;
	fma.rn.f32 	%f205, %f19, %f20, %f27;
	add.f32 	%f198, %f203, %f28;
	add.f32 	%f199, %f204, %f29;
	add.f32 	%f200, %f205, %f30;
	st.local.u32 	[%rd89+8], %r92;
	st.local.u32 	[%rd89+4], %r92;
	st.local.u32 	[%rd89], %r92;
	ld.global.u32 	%r64, [root];
	// inline asm
	call _rt_trace_64, (%r64, %f10, %f11, %f13, %f198, %f199, %f200, %r92, %f327, %f124, %rd90, %r93);
	// inline asm
	ld.local.f32 	%f48, [%rd89+4];
	ld.local.f32 	%f49, [%rd89];
	add.f32 	%f206, %f49, %f48;
	ld.local.f32 	%f50, [%rd89+8];
	add.f32 	%f207, %f206, %f50;
	setp.eq.f32	%p13, %f207, 0f00000000;
	@%p13 bra 	BB0_9;

	mul.f32 	%f208, %f48, %f48;
	fma.rn.f32 	%f209, %f49, %f49, %f208;
	fma.rn.f32 	%f210, %f50, %f50, %f209;
	sqrt.rn.f32 	%f51, %f210;
	rcp.rn.f32 	%f211, %f51;
	mul.f32 	%f212, %f211, %f49;
	mul.f32 	%f213, %f211, %f48;
	mul.f32 	%f214, %f211, %f50;
	fma.rn.f32 	%f215, %f23, %f212, %f10;
	fma.rn.f32 	%f216, %f23, %f213, %f11;
	fma.rn.f32 	%f217, %f23, %f214, %f13;
	fma.rn.f32 	%f52, %f51, %f198, %f215;
	fma.rn.f32 	%f53, %f51, %f199, %f216;
	fma.rn.f32 	%f54, %f51, %f200, %f217;
	setp.geu.f32	%p14, %f51, %f348;
	@%p14 bra 	BB0_9;

	mov.f32 	%f345, %f52;
	mov.f32 	%f346, %f53;
	mov.f32 	%f347, %f54;
	mov.f32 	%f348, %f51;

BB0_9:
	neg.f32 	%f330, %f20;
	mul.f32 	%f329, %f20, 0f00000000;
	mov.u32 	%r95, 12;
	mov.f32 	%f328, 0f00000000;
	add.u64 	%rd93, %SP, 12;
	cvta.to.local.u64 	%rd92, %rd93;
	mov.u32 	%r94, 0;
	mul.f32 	%f59, %f17, %f329;
	fma.rn.f32 	%f226, %f14, %f330, %f59;
	mul.f32 	%f60, %f18, %f329;
	fma.rn.f32 	%f227, %f15, %f330, %f60;
	mul.f32 	%f61, %f19, %f329;
	fma.rn.f32 	%f228, %f16, %f330, %f61;
	add.f32 	%f221, %f226, %f28;
	add.f32 	%f222, %f227, %f29;
	add.f32 	%f223, %f228, %f30;
	st.local.u32 	[%rd92+8], %r94;
	st.local.u32 	[%rd92+4], %r94;
	st.local.u32 	[%rd92], %r94;
	ld.global.u32 	%r67, [root];
	// inline asm
	call _rt_trace_64, (%r67, %f10, %f11, %f13, %f221, %f222, %f223, %r94, %f328, %f124, %rd93, %r95);
	// inline asm
	ld.local.f32 	%f65, [%rd92+4];
	ld.local.f32 	%f66, [%rd92];
	add.f32 	%f229, %f66, %f65;
	ld.local.f32 	%f67, [%rd92+8];
	add.f32 	%f230, %f229, %f67;
	setp.eq.f32	%p15, %f230, 0f00000000;
	@%p15 bra 	BB0_12;

	mul.f32 	%f231, %f65, %f65;
	fma.rn.f32 	%f232, %f66, %f66, %f231;
	fma.rn.f32 	%f233, %f67, %f67, %f232;
	sqrt.rn.f32 	%f68, %f233;
	rcp.rn.f32 	%f234, %f68;
	mul.f32 	%f235, %f234, %f66;
	mul.f32 	%f236, %f234, %f65;
	mul.f32 	%f237, %f234, %f67;
	fma.rn.f32 	%f238, %f23, %f235, %f10;
	fma.rn.f32 	%f239, %f23, %f236, %f11;
	fma.rn.f32 	%f240, %f23, %f237, %f13;
	fma.rn.f32 	%f69, %f68, %f221, %f238;
	fma.rn.f32 	%f70, %f68, %f222, %f239;
	fma.rn.f32 	%f71, %f68, %f223, %f240;
	setp.geu.f32	%p16, %f68, %f348;
	@%p16 bra 	BB0_12;

	mov.f32 	%f345, %f69;
	mov.f32 	%f346, %f70;
	mov.f32 	%f347, %f71;
	mov.f32 	%f348, %f68;

BB0_12:
	mov.u32 	%r97, 12;
	mov.f32 	%f331, 0f00000000;
	add.u64 	%rd96, %SP, 12;
	cvta.to.local.u64 	%rd95, %rd96;
	mov.u32 	%r96, 0;
	fma.rn.f32 	%f249, %f14, %f20, %f59;
	fma.rn.f32 	%f250, %f15, %f20, %f60;
	fma.rn.f32 	%f251, %f16, %f20, %f61;
	add.f32 	%f244, %f249, %f28;
	add.f32 	%f245, %f250, %f29;
	add.f32 	%f246, %f251, %f30;
	st.local.u32 	[%rd95+8], %r96;
	st.local.u32 	[%rd95+4], %r96;
	st.local.u32 	[%rd95], %r96;
	ld.global.u32 	%r70, [root];
	// inline asm
	call _rt_trace_64, (%r70, %f10, %f11, %f13, %f244, %f245, %f246, %r96, %f331, %f124, %rd96, %r97);
	// inline asm
	ld.local.f32 	%f79, [%rd95+4];
	ld.local.f32 	%f80, [%rd95];
	add.f32 	%f252, %f80, %f79;
	ld.local.f32 	%f81, [%rd95+8];
	add.f32 	%f253, %f252, %f81;
	setp.eq.f32	%p17, %f253, 0f00000000;
	@%p17 bra 	BB0_15;

	mul.f32 	%f254, %f79, %f79;
	fma.rn.f32 	%f255, %f80, %f80, %f254;
	fma.rn.f32 	%f256, %f81, %f81, %f255;
	sqrt.rn.f32 	%f257, %f256;
	rcp.rn.f32 	%f258, %f257;
	mul.f32 	%f259, %f258, %f80;
	mul.f32 	%f260, %f258, %f79;
	mul.f32 	%f261, %f258, %f81;
	fma.rn.f32 	%f262, %f23, %f259, %f10;
	fma.rn.f32 	%f263, %f23, %f260, %f11;
	fma.rn.f32 	%f264, %f23, %f261, %f13;
	fma.rn.f32 	%f82, %f257, %f244, %f262;
	fma.rn.f32 	%f83, %f257, %f245, %f263;
	fma.rn.f32 	%f84, %f257, %f246, %f264;
	setp.geu.f32	%p18, %f257, %f348;
	@%p18 bra 	BB0_15;

	mov.f32 	%f345, %f82;
	mov.f32 	%f346, %f83;
	mov.f32 	%f347, %f84;

BB0_15:
	abs.f32 	%f265, %f345;
	setp.gtu.f32	%p19, %f265, 0f7F800000;
	selp.f32	%f356, 0f00000000, %f345, %p19;
	abs.f32 	%f266, %f346;
	setp.gtu.f32	%p20, %f266, 0f7F800000;
	selp.f32	%f357, 0f00000000, %f346, %p20;
	abs.f32 	%f267, %f347;
	setp.gtu.f32	%p21, %f267, 0f7F800000;
	selp.f32	%f358, 0f00000000, %f347, %p21;
	ld.global.f32 	%f91, [fakeBias];
	setp.eq.f32	%p22, %f91, 0f00000000;
	@%p22 bra 	BB0_17;

	fma.rn.f32 	%f356, %f338, %f91, %f356;
	fma.rn.f32 	%f357, %f339, %f91, %f357;
	fma.rn.f32 	%f358, %f340, %f91, %f358;

BB0_17:
	mov.u32 	%r99, 16;
	mov.u64 	%rd98, 0;
	mov.u32 	%r98, 2;
	cvt.u64.u32	%rd67, %r3;
	cvt.u64.u32	%rd66, %r2;
	mov.u64 	%rd70, image_HDR;
	cvta.global.u64 	%rd65, %rd70;
	// inline asm
	call (%rd64), _rt_buffer_get_64, (%rd65, %r98, %r99, %rd66, %rd67, %rd98, %rd98);
	// inline asm
	mov.f32 	%f268, 0f3F800000;
	st.v4.f32 	[%rd64], {%f356, %f357, %f358, %f268};
	ld.global.u8 	%rs9, [imageEnabled];
	and.b16  	%rs10, %rs9, 32;
	setp.eq.s16	%p23, %rs10, 0;
	@%p23 bra 	BB0_25;

	add.f32 	%f333, %f132, 0f38D1B717;
	mov.f32 	%f332, 0f38D1B717;
	mov.u32 	%r101, 12;
	mov.u32 	%r100, 0;
	mul.f32 	%f276, %f333, 0f41000000;
	add.u64 	%rd71, %SP, 0;
	cvta.to.local.u64 	%rd4, %rd71;
	st.local.u32 	[%rd4+8], %r100;
	st.local.u32 	[%rd4+4], %r100;
	st.local.u32 	[%rd4], %r100;
	ld.global.u32 	%r75, [root];
	// inline asm
	call _rt_trace_64, (%r75, %f10, %f11, %f13, %f120, %f121, %f122, %r100, %f332, %f276, %rd71, %r101);
	// inline asm
	ld.local.f32 	%f278, [%rd4+4];
	ld.local.f32 	%f279, [%rd4];
	add.f32 	%f280, %f279, %f278;
	ld.local.f32 	%f281, [%rd4+8];
	add.f32 	%f282, %f280, %f281;
	setp.neu.f32	%p24, %f282, 0f00000000;
	mov.f32 	%f359, 0f437F0000;
	@%p24 bra 	BB0_23;

	mov.f32 	%f334, 0f38D1B717;
	mov.u32 	%r103, 12;
	mov.u32 	%r102, 0;
	st.local.u32 	[%rd4+8], %r102;
	st.local.u32 	[%rd4+4], %r102;
	st.local.u32 	[%rd4], %r102;
	ld.global.u32 	%r78, [root];
	// inline asm
	call _rt_trace_64, (%r78, %f10, %f11, %f13, %f198, %f199, %f200, %r102, %f334, %f276, %rd71, %r103);
	// inline asm
	ld.local.f32 	%f292, [%rd4+4];
	ld.local.f32 	%f293, [%rd4];
	add.f32 	%f294, %f293, %f292;
	ld.local.f32 	%f295, [%rd4+8];
	add.f32 	%f296, %f294, %f295;
	setp.neu.f32	%p25, %f296, 0f00000000;
	@%p25 bra 	BB0_23;

	mov.f32 	%f335, 0f38D1B717;
	mov.u32 	%r105, 12;
	mov.u32 	%r104, 0;
	st.local.u32 	[%rd4+8], %r104;
	st.local.u32 	[%rd4+4], %r104;
	st.local.u32 	[%rd4], %r104;
	ld.global.u32 	%r81, [root];
	// inline asm
	call _rt_trace_64, (%r81, %f10, %f11, %f13, %f221, %f222, %f223, %r104, %f335, %f276, %rd71, %r105);
	// inline asm
	ld.local.f32 	%f306, [%rd4+4];
	ld.local.f32 	%f307, [%rd4];
	add.f32 	%f308, %f307, %f306;
	ld.local.f32 	%f309, [%rd4+8];
	add.f32 	%f310, %f308, %f309;
	setp.neu.f32	%p26, %f310, 0f00000000;
	@%p26 bra 	BB0_23;

	mov.f32 	%f336, 0f38D1B717;
	mov.u32 	%r107, 12;
	mov.u32 	%r106, 0;
	st.local.u32 	[%rd4+8], %r106;
	st.local.u32 	[%rd4+4], %r106;
	st.local.u32 	[%rd4], %r106;
	ld.global.u32 	%r84, [root];
	// inline asm
	call _rt_trace_64, (%r84, %f10, %f11, %f13, %f244, %f245, %f246, %r106, %f336, %f276, %rd71, %r107);
	// inline asm
	ld.local.f32 	%f320, [%rd4+4];
	ld.local.f32 	%f321, [%rd4];
	add.f32 	%f322, %f321, %f320;
	ld.local.f32 	%f323, [%rd4+8];
	add.f32 	%f324, %f322, %f323;
	setp.neu.f32	%p27, %f324, 0f00000000;
	@%p27 bra 	BB0_23;

	mov.f32 	%f359, 0f00000000;

BB0_23:
	mov.u64 	%rd99, 0;
	mov.u32 	%r108, 2;
	mov.u64 	%rd81, image_Mask;
	cvta.global.u64 	%rd76, %rd81;
	mov.u32 	%r88, 1;
	// inline asm
	call (%rd75), _rt_buffer_get_64, (%rd76, %r108, %r88, %rd66, %rd67, %rd99, %rd99);
	// inline asm
	cvt.rzi.u32.f32	%r89, %f359;
	st.u8 	[%rd75], %r89;

BB0_25:
	ret;
}


