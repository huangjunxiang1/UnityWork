//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 uvfacenormal[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvsmoothpos[1];
.global .align 1 .b8 triangleMarks[1];
.global .align 1 .b8 image_Mask[1];
.global .align 4 .f32 fakeBias;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8fakeBiasE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8fakeBiasE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8fakeBiasE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8fakeBiasE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8fakeBiasE[1];

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<33>;
	.reg .b16 	%rs<12>;
	.reg .f32 	%f<388>;
	.reg .b32 	%r<129>;
	.reg .b64 	%rd<124>;


	mov.u64 	%rd123, __local_depot0;
	cvta.local.u64 	%SP, %rd123;
	ld.global.v2.u32 	{%r8, %r9}, [pixelID];
	cvt.u64.u32	%rd8, %r8;
	cvt.u64.u32	%rd9, %r9;
	mov.u64 	%rd12, uvfacenormal;
	cvta.global.u64 	%rd7, %rd12;
	mov.u32 	%r6, 2;
	mov.u32 	%r7, 4;
	mov.u64 	%rd11, 0;
	// inline asm
	call (%rd6), _rt_buffer_get_64, (%rd7, %r6, %r7, %rd8, %rd9, %rd11, %rd11);
	// inline asm
	ld.u32 	%r1, [%rd6];
	shr.u32 	%r12, %r1, 16;
	cvt.u16.u32	%rs1, %r12;
	and.b16  	%rs2, %rs1, 255;
	cvt.u16.u32	%rs3, %r1;
	or.b16  	%rs4, %rs3, %rs2;
	setp.eq.s16	%p1, %rs4, 0;
	mov.f32 	%f366, 0f00000000;
	mov.f32 	%f367, %f366;
	mov.f32 	%f368, %f366;
	@%p1 bra 	BB0_2;

	ld.u8 	%rs5, [%rd6+1];
	and.b16  	%rs7, %rs3, 255;
	cvt.rn.f32.u16	%f121, %rs7;
	div.rn.f32 	%f122, %f121, 0f437F0000;
	fma.rn.f32 	%f123, %f122, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f124, %rs5;
	div.rn.f32 	%f125, %f124, 0f437F0000;
	fma.rn.f32 	%f126, %f125, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f127, %rs2;
	div.rn.f32 	%f128, %f127, 0f437F0000;
	fma.rn.f32 	%f129, %f128, 0f40000000, 0fBF800000;
	mul.f32 	%f130, %f126, %f126;
	fma.rn.f32 	%f131, %f123, %f123, %f130;
	fma.rn.f32 	%f132, %f129, %f129, %f131;
	sqrt.rn.f32 	%f133, %f132;
	rcp.rn.f32 	%f134, %f133;
	mul.f32 	%f366, %f123, %f134;
	mul.f32 	%f367, %f126, %f134;
	mul.f32 	%f368, %f129, %f134;

BB0_2:
	ld.global.v2.u32 	{%r13, %r14}, [pixelID];
	ld.global.v2.u32 	{%r16, %r17}, [tileInfo];
	add.s32 	%r2, %r13, %r16;
	add.s32 	%r3, %r14, %r17;
	setp.eq.f32	%p2, %f367, 0f00000000;
	setp.eq.f32	%p3, %f366, 0f00000000;
	and.pred  	%p4, %p3, %p2;
	setp.eq.f32	%p5, %f368, 0f00000000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB0_27;
	bra.uni 	BB0_3;

BB0_27:
	cvt.u64.u32	%rd107, %r2;
	cvt.u64.u32	%rd108, %r3;
	mov.u64 	%rd111, image_HDR;
	cvta.global.u64 	%rd106, %rd111;
	mov.u32 	%r109, 16;
	// inline asm
	call (%rd105), _rt_buffer_get_64, (%rd106, %r6, %r109, %rd107, %rd108, %rd11, %rd11);
	// inline asm
	mov.f32 	%f354, 0f00000000;
	st.v4.f32 	[%rd105], {%f354, %f354, %f354, %f354};
	bra.uni 	BB0_28;

BB0_3:
	ld.global.v2.u32 	{%r39, %r40}, [pixelID];
	cvt.u64.u32	%rd15, %r39;
	cvt.u64.u32	%rd16, %r40;
	mov.u64 	%rd67, uvpos;
	cvta.global.u64 	%rd14, %rd67;
	mov.u32 	%r36, 16;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r6, %r36, %rd15, %rd16, %rd11, %rd11);
	// inline asm
	ld.f32 	%f135, [%rd13];
	ld.global.v2.u32 	{%r43, %r44}, [pixelID];
	cvt.u64.u32	%rd21, %r43;
	cvt.u64.u32	%rd22, %r44;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd14, %r6, %r36, %rd21, %rd22, %rd11, %rd11);
	// inline asm
	ld.f32 	%f136, [%rd19+4];
	ld.global.v2.u32 	{%r47, %r48}, [pixelID];
	cvt.u64.u32	%rd27, %r47;
	cvt.u64.u32	%rd28, %r48;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd14, %r6, %r36, %rd27, %rd28, %rd11, %rd11);
	// inline asm
	abs.f32 	%f137, %f135;
	setp.gtu.f32	%p7, %f137, 0f7F800000;
	selp.f32	%f7, 0f00000000, %f135, %p7;
	abs.f32 	%f138, %f136;
	setp.gtu.f32	%p8, %f138, 0f7F800000;
	selp.f32	%f8, 0f00000000, %f136, %p8;
	ld.f32 	%f139, [%rd25+8];
	abs.f32 	%f140, %f139;
	setp.gtu.f32	%p9, %f140, 0f7F800000;
	selp.f32	%f9, 0f00000000, %f139, %p9;
	ld.global.v2.u32 	{%r51, %r52}, [pixelID];
	cvt.u64.u32	%rd33, %r51;
	cvt.u64.u32	%rd34, %r52;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd14, %r6, %r36, %rd33, %rd34, %rd11, %rd11);
	// inline asm
	ld.f32 	%f141, [%rd31+12];
	add.f32 	%f10, %f141, 0f38D1B717;
	mul.f32 	%f142, %f7, 0f3456BF95;
	mul.f32 	%f143, %f8, 0f3456BF95;
	mul.f32 	%f144, %f9, 0f3456BF95;
	abs.f32 	%f11, %f366;
	div.rn.f32 	%f145, %f142, %f11;
	abs.f32 	%f146, %f367;
	div.rn.f32 	%f147, %f143, %f146;
	abs.f32 	%f12, %f368;
	div.rn.f32 	%f148, %f144, %f12;
	abs.f32 	%f149, %f145;
	abs.f32 	%f150, %f147;
	abs.f32 	%f151, %f148;
	mov.f32 	%f152, 0f38D1B717;
	max.f32 	%f153, %f149, %f152;
	max.f32 	%f154, %f150, %f152;
	max.f32 	%f155, %f151, %f152;
	mul.f32 	%f13, %f366, %f153;
	mul.f32 	%f14, %f367, %f154;
	mul.f32 	%f15, %f368, %f155;
	add.f32 	%f16, %f7, %f13;
	add.f32 	%f17, %f8, %f14;
	add.f32 	%f18, %f9, %f15;
	ld.global.v2.u32 	{%r55, %r56}, [pixelID];
	cvt.u64.u32	%rd39, %r55;
	cvt.u64.u32	%rd40, %r56;
	mov.u64 	%rd68, uvsmoothpos;
	cvta.global.u64 	%rd38, %rd68;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r6, %r36, %rd39, %rd40, %rd11, %rd11);
	// inline asm
	ld.f32 	%f19, [%rd37];
	ld.global.v2.u32 	{%r59, %r60}, [pixelID];
	cvt.u64.u32	%rd45, %r59;
	cvt.u64.u32	%rd46, %r60;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd38, %r6, %r36, %rd45, %rd46, %rd11, %rd11);
	// inline asm
	ld.f32 	%f20, [%rd43+4];
	ld.global.v2.u32 	{%r63, %r64}, [pixelID];
	cvt.u64.u32	%rd51, %r63;
	cvt.u64.u32	%rd52, %r64;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd38, %r6, %r36, %rd51, %rd52, %rd11, %rd11);
	// inline asm
	ld.f32 	%f21, [%rd49+8];
	ld.global.v2.u32 	{%r67, %r68}, [pixelID];
	cvt.u64.u32	%rd57, %r67;
	cvt.u64.u32	%rd58, %r68;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd38, %r6, %r36, %rd57, %rd58, %rd11, %rd11);
	// inline asm
	ld.f32 	%f156, [%rd55+12];
	cvt.rzi.u32.f32	%r71, %f156;
	cvt.u64.u32	%rd63, %r71;
	mov.u64 	%rd69, triangleMarks;
	cvta.global.u64 	%rd62, %rd69;
	mov.u32 	%r38, 1;
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd62, %r38, %r38, %rd63, %rd11, %rd11, %rd11);
	// inline asm
	ld.u8 	%r128, [%rd61];
	sub.f32 	%f22, %f19, %f7;
	sub.f32 	%f23, %f20, %f8;
	sub.f32 	%f24, %f21, %f9;
	mul.f32 	%f157, %f23, %f23;
	fma.rn.f32 	%f158, %f22, %f22, %f157;
	fma.rn.f32 	%f159, %f24, %f24, %f158;
	sqrt.rn.f32 	%f25, %f159;
	setp.leu.f32	%p10, %f25, 0f3727C5AC;
	setp.eq.s32	%p11, %r128, 255;
	or.pred  	%p12, %p11, %p10;
	@%p12 bra 	BB0_6;

	rcp.rn.f32 	%f168, %f25;
	mul.f32 	%f163, %f22, %f168;
	mul.f32 	%f164, %f23, %f168;
	mul.f32 	%f165, %f24, %f168;
	add.u64 	%rd70, %SP, 12;
	cvta.to.local.u64 	%rd71, %rd70;
	mov.u32 	%r75, 1065353216;
	st.local.u32 	[%rd71], %r75;
	ld.global.u32 	%r72, [root];
	// inline asm
	call _rt_trace_64, (%r72, %f16, %f17, %f18, %f163, %f164, %f165, %r38, %f152, %f25, %rd70, %r7);
	// inline asm
	ld.local.f32 	%f169, [%rd71];
	setp.neu.f32	%p13, %f169, 0f00000000;
	@%p13 bra 	BB0_6;

	// inline asm
	call (%rd72), _rt_buffer_get_64, (%rd62, %r38, %r38, %rd63, %rd11, %rd11, %rd11);
	// inline asm
	mov.u16 	%rs9, 255;
	st.u8 	[%rd72], %rs9;
	mov.u32 	%r128, 255;

BB0_6:
	setp.eq.s32	%p14, %r128, 0;
	selp.f32	%f373, %f19, %f7, %p14;
	selp.f32	%f374, %f20, %f8, %p14;
	selp.f32	%f375, %f21, %f9, %p14;
	add.f32 	%f170, %f13, %f373;
	add.f32 	%f171, %f14, %f374;
	add.f32 	%f172, %f15, %f375;
	neg.f32 	%f179, %f367;
	setp.gt.f32	%p15, %f11, %f12;
	selp.f32	%f180, %f179, 0f00000000, %p15;
	neg.f32 	%f181, %f368;
	selp.f32	%f182, %f366, %f181, %p15;
	selp.f32	%f183, 0f00000000, %f367, %p15;
	mul.f32 	%f184, %f182, %f182;
	fma.rn.f32 	%f185, %f180, %f180, %f184;
	fma.rn.f32 	%f186, %f183, %f183, %f185;
	sqrt.rn.f32 	%f187, %f186;
	rcp.rn.f32 	%f188, %f187;
	mul.f32 	%f32, %f180, %f188;
	mul.f32 	%f33, %f182, %f188;
	mul.f32 	%f34, %f183, %f188;
	mul.f32 	%f189, %f368, %f33;
	mul.f32 	%f190, %f367, %f34;
	sub.f32 	%f35, %f189, %f190;
	mul.f32 	%f191, %f366, %f34;
	mul.f32 	%f192, %f368, %f32;
	sub.f32 	%f36, %f191, %f192;
	mul.f32 	%f193, %f367, %f32;
	mul.f32 	%f194, %f366, %f33;
	sub.f32 	%f37, %f193, %f194;
	mov.f32 	%f195, 0f3F8147AE;
	sqrt.rn.f32 	%f196, %f195;
	rcp.rn.f32 	%f38, %f196;
	neg.f32 	%f39, %f38;
	mul.f32 	%f40, %f38, 0f00000000;
	mul.f32 	%f197, %f38, 0f3DCCCCCD;
	mul.f32 	%f198, %f170, 0f3456BF95;
	mul.f32 	%f199, %f171, 0f3456BF95;
	mul.f32 	%f200, %f172, 0f3456BF95;
	abs.f32 	%f201, %f198;
	abs.f32 	%f202, %f199;
	abs.f32 	%f203, %f200;
	max.f32 	%f204, %f201, %f202;
	max.f32 	%f205, %f204, %f203;
	max.f32 	%f41, %f205, %f152;
	mul.f32 	%f42, %f32, %f40;
	mul.f32 	%f43, %f33, %f40;
	mul.f32 	%f44, %f34, %f40;
	fma.rn.f32 	%f207, %f35, %f39, %f42;
	fma.rn.f32 	%f208, %f36, %f39, %f43;
	fma.rn.f32 	%f209, %f37, %f39, %f44;
	mul.f32 	%f45, %f366, %f197;
	mul.f32 	%f46, %f367, %f197;
	mul.f32 	%f47, %f368, %f197;
	add.f32 	%f173, %f207, %f45;
	add.f32 	%f174, %f208, %f46;
	add.f32 	%f175, %f209, %f47;
	add.u64 	%rd79, %SP, 16;
	cvta.to.local.u64 	%rd80, %rd79;
	mov.u32 	%r80, 0;
	st.local.u32 	[%rd80+8], %r80;
	st.local.u32 	[%rd80+4], %r80;
	st.local.u32 	[%rd80], %r80;
	ld.global.u32 	%r79, [root];
	mul.f32 	%f177, %f10, 0f3FB504F3;
	mov.f32 	%f176, 0f00000000;
	mov.u32 	%r81, 12;
	// inline asm
	call _rt_trace_64, (%r79, %f170, %f171, %f172, %f173, %f174, %f175, %r80, %f176, %f177, %rd79, %r81);
	// inline asm
	ld.local.f32 	%f52, [%rd80+4];
	ld.local.f32 	%f53, [%rd80];
	add.f32 	%f210, %f53, %f52;
	ld.local.f32 	%f54, [%rd80+8];
	add.f32 	%f211, %f210, %f54;
	mov.f32 	%f376, 0f47C34F80;
	setp.eq.f32	%p16, %f211, 0f00000000;
	@%p16 bra 	BB0_9;

	mul.f32 	%f213, %f52, %f52;
	fma.rn.f32 	%f214, %f53, %f53, %f213;
	fma.rn.f32 	%f215, %f54, %f54, %f214;
	sqrt.rn.f32 	%f55, %f215;
	rcp.rn.f32 	%f216, %f55;
	mul.f32 	%f217, %f216, %f53;
	mul.f32 	%f218, %f216, %f52;
	mul.f32 	%f219, %f216, %f54;
	fma.rn.f32 	%f220, %f41, %f217, %f170;
	fma.rn.f32 	%f221, %f41, %f218, %f171;
	fma.rn.f32 	%f222, %f41, %f219, %f172;
	fma.rn.f32 	%f56, %f55, %f173, %f220;
	fma.rn.f32 	%f57, %f55, %f174, %f221;
	fma.rn.f32 	%f58, %f55, %f175, %f222;
	setp.geu.f32	%p17, %f55, 0f47C34F80;
	@%p17 bra 	BB0_9;

	mov.f32 	%f373, %f56;
	mov.f32 	%f374, %f57;
	mov.f32 	%f375, %f58;
	mov.f32 	%f376, %f55;

BB0_9:
	mov.u32 	%r111, 12;
	mov.f32 	%f355, 0f00000000;
	add.u64 	%rd113, %SP, 16;
	cvta.to.local.u64 	%rd112, %rd113;
	mov.u32 	%r110, 0;
	fma.rn.f32 	%f231, %f35, %f38, %f42;
	fma.rn.f32 	%f232, %f36, %f38, %f43;
	fma.rn.f32 	%f233, %f37, %f38, %f44;
	add.f32 	%f226, %f231, %f45;
	add.f32 	%f227, %f232, %f46;
	add.f32 	%f228, %f233, %f47;
	st.local.u32 	[%rd112+8], %r110;
	st.local.u32 	[%rd112+4], %r110;
	st.local.u32 	[%rd112], %r110;
	ld.global.u32 	%r82, [root];
	// inline asm
	call _rt_trace_64, (%r82, %f170, %f171, %f172, %f226, %f227, %f228, %r110, %f355, %f177, %rd113, %r111);
	// inline asm
	ld.local.f32 	%f66, [%rd112+4];
	ld.local.f32 	%f67, [%rd112];
	add.f32 	%f234, %f67, %f66;
	ld.local.f32 	%f68, [%rd112+8];
	add.f32 	%f235, %f234, %f68;
	setp.eq.f32	%p18, %f235, 0f00000000;
	@%p18 bra 	BB0_12;

	mul.f32 	%f236, %f66, %f66;
	fma.rn.f32 	%f237, %f67, %f67, %f236;
	fma.rn.f32 	%f238, %f68, %f68, %f237;
	sqrt.rn.f32 	%f69, %f238;
	rcp.rn.f32 	%f239, %f69;
	mul.f32 	%f240, %f239, %f67;
	mul.f32 	%f241, %f239, %f66;
	mul.f32 	%f242, %f239, %f68;
	fma.rn.f32 	%f243, %f41, %f240, %f170;
	fma.rn.f32 	%f244, %f41, %f241, %f171;
	fma.rn.f32 	%f245, %f41, %f242, %f172;
	fma.rn.f32 	%f70, %f69, %f226, %f243;
	fma.rn.f32 	%f71, %f69, %f227, %f244;
	fma.rn.f32 	%f72, %f69, %f228, %f245;
	setp.geu.f32	%p19, %f69, %f376;
	@%p19 bra 	BB0_12;

	mov.f32 	%f373, %f70;
	mov.f32 	%f374, %f71;
	mov.f32 	%f375, %f72;
	mov.f32 	%f376, %f69;

BB0_12:
	neg.f32 	%f358, %f38;
	mul.f32 	%f357, %f38, 0f00000000;
	mov.u32 	%r113, 12;
	mov.f32 	%f356, 0f00000000;
	add.u64 	%rd116, %SP, 16;
	cvta.to.local.u64 	%rd115, %rd116;
	mov.u32 	%r112, 0;
	mul.f32 	%f77, %f35, %f357;
	fma.rn.f32 	%f254, %f32, %f358, %f77;
	mul.f32 	%f78, %f36, %f357;
	fma.rn.f32 	%f255, %f33, %f358, %f78;
	mul.f32 	%f79, %f37, %f357;
	fma.rn.f32 	%f256, %f34, %f358, %f79;
	add.f32 	%f249, %f254, %f45;
	add.f32 	%f250, %f255, %f46;
	add.f32 	%f251, %f256, %f47;
	st.local.u32 	[%rd115+8], %r112;
	st.local.u32 	[%rd115+4], %r112;
	st.local.u32 	[%rd115], %r112;
	ld.global.u32 	%r85, [root];
	// inline asm
	call _rt_trace_64, (%r85, %f170, %f171, %f172, %f249, %f250, %f251, %r112, %f356, %f177, %rd116, %r113);
	// inline asm
	ld.local.f32 	%f83, [%rd115+4];
	ld.local.f32 	%f84, [%rd115];
	add.f32 	%f257, %f84, %f83;
	ld.local.f32 	%f85, [%rd115+8];
	add.f32 	%f258, %f257, %f85;
	setp.eq.f32	%p20, %f258, 0f00000000;
	@%p20 bra 	BB0_15;

	mul.f32 	%f259, %f83, %f83;
	fma.rn.f32 	%f260, %f84, %f84, %f259;
	fma.rn.f32 	%f261, %f85, %f85, %f260;
	sqrt.rn.f32 	%f86, %f261;
	rcp.rn.f32 	%f262, %f86;
	mul.f32 	%f263, %f262, %f84;
	mul.f32 	%f264, %f262, %f83;
	mul.f32 	%f265, %f262, %f85;
	fma.rn.f32 	%f266, %f41, %f263, %f170;
	fma.rn.f32 	%f267, %f41, %f264, %f171;
	fma.rn.f32 	%f268, %f41, %f265, %f172;
	fma.rn.f32 	%f87, %f86, %f249, %f266;
	fma.rn.f32 	%f88, %f86, %f250, %f267;
	fma.rn.f32 	%f89, %f86, %f251, %f268;
	setp.geu.f32	%p21, %f86, %f376;
	@%p21 bra 	BB0_15;

	mov.f32 	%f373, %f87;
	mov.f32 	%f374, %f88;
	mov.f32 	%f375, %f89;
	mov.f32 	%f376, %f86;

BB0_15:
	mov.u32 	%r115, 12;
	mov.f32 	%f359, 0f00000000;
	add.u64 	%rd119, %SP, 16;
	cvta.to.local.u64 	%rd118, %rd119;
	mov.u32 	%r114, 0;
	fma.rn.f32 	%f277, %f32, %f38, %f77;
	fma.rn.f32 	%f278, %f33, %f38, %f78;
	fma.rn.f32 	%f279, %f34, %f38, %f79;
	add.f32 	%f272, %f277, %f45;
	add.f32 	%f273, %f278, %f46;
	add.f32 	%f274, %f279, %f47;
	st.local.u32 	[%rd118+8], %r114;
	st.local.u32 	[%rd118+4], %r114;
	st.local.u32 	[%rd118], %r114;
	ld.global.u32 	%r88, [root];
	// inline asm
	call _rt_trace_64, (%r88, %f170, %f171, %f172, %f272, %f273, %f274, %r114, %f359, %f177, %rd119, %r115);
	// inline asm
	ld.local.f32 	%f97, [%rd118+4];
	ld.local.f32 	%f98, [%rd118];
	add.f32 	%f280, %f98, %f97;
	ld.local.f32 	%f99, [%rd118+8];
	add.f32 	%f281, %f280, %f99;
	setp.eq.f32	%p22, %f281, 0f00000000;
	@%p22 bra 	BB0_18;

	mul.f32 	%f282, %f97, %f97;
	fma.rn.f32 	%f283, %f98, %f98, %f282;
	fma.rn.f32 	%f284, %f99, %f99, %f283;
	sqrt.rn.f32 	%f285, %f284;
	rcp.rn.f32 	%f286, %f285;
	mul.f32 	%f287, %f286, %f98;
	mul.f32 	%f288, %f286, %f97;
	mul.f32 	%f289, %f286, %f99;
	fma.rn.f32 	%f290, %f41, %f287, %f170;
	fma.rn.f32 	%f291, %f41, %f288, %f171;
	fma.rn.f32 	%f292, %f41, %f289, %f172;
	fma.rn.f32 	%f100, %f285, %f272, %f290;
	fma.rn.f32 	%f101, %f285, %f273, %f291;
	fma.rn.f32 	%f102, %f285, %f274, %f292;
	setp.geu.f32	%p23, %f285, %f376;
	@%p23 bra 	BB0_18;

	mov.f32 	%f373, %f100;
	mov.f32 	%f374, %f101;
	mov.f32 	%f375, %f102;

BB0_18:
	abs.f32 	%f293, %f373;
	setp.gtu.f32	%p24, %f293, 0f7F800000;
	selp.f32	%f384, 0f00000000, %f373, %p24;
	abs.f32 	%f294, %f374;
	setp.gtu.f32	%p25, %f294, 0f7F800000;
	selp.f32	%f385, 0f00000000, %f374, %p25;
	abs.f32 	%f295, %f375;
	setp.gtu.f32	%p26, %f295, 0f7F800000;
	selp.f32	%f386, 0f00000000, %f375, %p26;
	ld.global.f32 	%f109, [fakeBias];
	setp.eq.f32	%p27, %f109, 0f00000000;
	@%p27 bra 	BB0_20;

	fma.rn.f32 	%f384, %f366, %f109, %f384;
	fma.rn.f32 	%f385, %f367, %f109, %f385;
	fma.rn.f32 	%f386, %f368, %f109, %f386;

BB0_20:
	mov.u32 	%r117, 16;
	mov.u64 	%rd121, 0;
	mov.u32 	%r116, 2;
	cvt.u64.u32	%rd90, %r3;
	cvt.u64.u32	%rd89, %r2;
	mov.u64 	%rd93, image_HDR;
	cvta.global.u64 	%rd88, %rd93;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r116, %r117, %rd89, %rd90, %rd121, %rd121);
	// inline asm
	mov.f32 	%f296, 0f3F800000;
	st.v4.f32 	[%rd87], {%f384, %f385, %f386, %f296};
	ld.global.u8 	%rs10, [imageEnabled];
	and.b16  	%rs11, %rs10, 32;
	setp.eq.s16	%p28, %rs11, 0;
	@%p28 bra 	BB0_28;

	add.f32 	%f361, %f141, 0f38D1B717;
	mov.u32 	%r119, 12;
	mov.u32 	%r118, 0;
	mov.f32 	%f360, 0f38D1B717;
	mul.f32 	%f304, %f361, 0f41000000;
	add.u64 	%rd94, %SP, 0;
	cvta.to.local.u64 	%rd5, %rd94;
	st.local.u32 	[%rd5+8], %r118;
	st.local.u32 	[%rd5+4], %r118;
	st.local.u32 	[%rd5], %r118;
	ld.global.u32 	%r93, [root];
	// inline asm
	call _rt_trace_64, (%r93, %f170, %f171, %f172, %f173, %f174, %f175, %r118, %f360, %f304, %rd94, %r119);
	// inline asm
	ld.local.f32 	%f306, [%rd5+4];
	ld.local.f32 	%f307, [%rd5];
	add.f32 	%f308, %f307, %f306;
	ld.local.f32 	%f309, [%rd5+8];
	add.f32 	%f310, %f308, %f309;
	setp.neu.f32	%p29, %f310, 0f00000000;
	mov.f32 	%f387, 0f437F0000;
	@%p29 bra 	BB0_26;

	mov.u32 	%r121, 12;
	mov.u32 	%r120, 0;
	mov.f32 	%f362, 0f38D1B717;
	st.local.u32 	[%rd5+8], %r120;
	st.local.u32 	[%rd5+4], %r120;
	st.local.u32 	[%rd5], %r120;
	ld.global.u32 	%r96, [root];
	// inline asm
	call _rt_trace_64, (%r96, %f170, %f171, %f172, %f226, %f227, %f228, %r120, %f362, %f304, %rd94, %r121);
	// inline asm
	ld.local.f32 	%f320, [%rd5+4];
	ld.local.f32 	%f321, [%rd5];
	add.f32 	%f322, %f321, %f320;
	ld.local.f32 	%f323, [%rd5+8];
	add.f32 	%f324, %f322, %f323;
	setp.neu.f32	%p30, %f324, 0f00000000;
	@%p30 bra 	BB0_26;

	mov.u32 	%r123, 12;
	mov.u32 	%r122, 0;
	mov.f32 	%f363, 0f38D1B717;
	st.local.u32 	[%rd5+8], %r122;
	st.local.u32 	[%rd5+4], %r122;
	st.local.u32 	[%rd5], %r122;
	ld.global.u32 	%r99, [root];
	// inline asm
	call _rt_trace_64, (%r99, %f170, %f171, %f172, %f249, %f250, %f251, %r122, %f363, %f304, %rd94, %r123);
	// inline asm
	ld.local.f32 	%f334, [%rd5+4];
	ld.local.f32 	%f335, [%rd5];
	add.f32 	%f336, %f335, %f334;
	ld.local.f32 	%f337, [%rd5+8];
	add.f32 	%f338, %f336, %f337;
	setp.neu.f32	%p31, %f338, 0f00000000;
	@%p31 bra 	BB0_26;

	mov.u32 	%r125, 12;
	mov.u32 	%r124, 0;
	mov.f32 	%f364, 0f38D1B717;
	st.local.u32 	[%rd5+8], %r124;
	st.local.u32 	[%rd5+4], %r124;
	st.local.u32 	[%rd5], %r124;
	ld.global.u32 	%r102, [root];
	// inline asm
	call _rt_trace_64, (%r102, %f170, %f171, %f172, %f272, %f273, %f274, %r124, %f364, %f304, %rd94, %r125);
	// inline asm
	ld.local.f32 	%f348, [%rd5+4];
	ld.local.f32 	%f349, [%rd5];
	add.f32 	%f350, %f349, %f348;
	ld.local.f32 	%f351, [%rd5+8];
	add.f32 	%f352, %f350, %f351;
	setp.neu.f32	%p32, %f352, 0f00000000;
	@%p32 bra 	BB0_26;

	mov.f32 	%f387, 0f00000000;

BB0_26:
	mov.u32 	%r127, 1;
	mov.u64 	%rd122, 0;
	mov.u32 	%r126, 2;
	mov.u64 	%rd104, image_Mask;
	cvta.global.u64 	%rd99, %rd104;
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd99, %r126, %r127, %rd89, %rd90, %rd122, %rd122);
	// inline asm
	cvt.rzi.u32.f32	%r107, %f387;
	st.u8 	[%rd98], %r107;

BB0_28:
	ret;
}


