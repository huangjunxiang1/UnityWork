//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z9intersecti
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 8 .b8 texCoords[8];
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 index_buffer[1];
.global .align 4 .u32 firstAlphaTriangle;
.global .align 1 .b8 vertex_buffer_uv[1];
.global .align 1 .b8 triangleAlphaIDs[1];
.global .align 1 .b8 alphaTextures[1];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9texCoordsE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18firstAlphaTriangleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9texCoordsE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 4 .b8 _ZN21rti_internal_typename18firstAlphaTriangleE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename3rayE[4] = {82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9texCoordsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18firstAlphaTriangleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic9texCoordsE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 67, 111, 111, 114, 100, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic18firstAlphaTriangleE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9texCoordsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18firstAlphaTriangleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z9intersecti(
	.param .u32 _Z9intersecti_param_0
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<152>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<117>;


	ld.param.u32 	%r2, [_Z9intersecti_param_0];
	cvt.s64.s32	%rd7, %r2;
	mov.u64 	%rd29, index_buffer;
	cvta.global.u64 	%rd6, %rd29;
	mov.u32 	%r9, 1;
	mov.u32 	%r4, 12;
	mov.u64 	%rd28, 0;
	// inline asm
	call (%rd5), _rt_buffer_get_64, (%rd6, %r9, %r4, %rd7, %rd28, %rd28, %rd28);
	// inline asm
	ld.s32 	%rd13, [%rd5];
	mov.u64 	%rd30, vertex_buffer;
	cvta.global.u64 	%rd12, %rd30;
	ld.s32 	%rd19, [%rd5+4];
	ld.s32 	%rd25, [%rd5+8];
	mov.u32 	%r10, 32;
	// inline asm
	call (%rd11), _rt_buffer_get_64, (%rd12, %r9, %r10, %rd13, %rd28, %rd28, %rd28);
	// inline asm
	ld.f32 	%f14, [%rd11+8];
	ld.v2.f32 	{%f15, %f16}, [%rd11];
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd12, %r9, %r10, %rd19, %rd28, %rd28, %rd28);
	// inline asm
	ld.f32 	%f19, [%rd17+8];
	ld.v2.f32 	{%f20, %f21}, [%rd17];
	// inline asm
	call (%rd23), _rt_buffer_get_64, (%rd12, %r9, %r10, %rd25, %rd28, %rd28, %rd28);
	// inline asm
	sub.f32 	%f24, %f20, %f15;
	sub.f32 	%f25, %f21, %f16;
	sub.f32 	%f26, %f19, %f14;
	ld.f32 	%f27, [%rd23+8];
	ld.v2.f32 	{%f28, %f29}, [%rd23];
	sub.f32 	%f32, %f15, %f28;
	sub.f32 	%f33, %f16, %f29;
	sub.f32 	%f34, %f14, %f27;
	mul.f32 	%f35, %f26, %f33;
	mul.f32 	%f36, %f25, %f34;
	sub.f32 	%f37, %f35, %f36;
	mul.f32 	%f38, %f24, %f34;
	mul.f32 	%f39, %f26, %f32;
	sub.f32 	%f40, %f38, %f39;
	mul.f32 	%f41, %f25, %f32;
	mul.f32 	%f42, %f24, %f33;
	sub.f32 	%f43, %f41, %f42;
	ld.global.f32 	%f44, [ray+12];
	ld.global.f32 	%f45, [ray+16];
	mul.f32 	%f46, %f45, %f40;
	fma.rn.f32 	%f47, %f44, %f37, %f46;
	ld.global.f32 	%f48, [ray+20];
	fma.rn.f32 	%f49, %f48, %f43, %f47;
	rcp.rn.f32 	%f50, %f49;
	ld.global.f32 	%f51, [ray];
	sub.f32 	%f52, %f15, %f51;
	ld.global.f32 	%f53, [ray+4];
	sub.f32 	%f54, %f16, %f53;
	ld.global.f32 	%f55, [ray+8];
	sub.f32 	%f56, %f14, %f55;
	mul.f32 	%f57, %f50, %f52;
	mul.f32 	%f58, %f50, %f54;
	mul.f32 	%f59, %f50, %f56;
	mul.f32 	%f60, %f45, %f59;
	mul.f32 	%f61, %f58, %f48;
	sub.f32 	%f62, %f60, %f61;
	mul.f32 	%f63, %f57, %f48;
	mul.f32 	%f64, %f59, %f44;
	sub.f32 	%f65, %f63, %f64;
	mul.f32 	%f66, %f58, %f44;
	mul.f32 	%f67, %f57, %f45;
	sub.f32 	%f68, %f66, %f67;
	mul.f32 	%f69, %f33, %f65;
	fma.rn.f32 	%f70, %f32, %f62, %f69;
	fma.rn.f32 	%f1, %f34, %f68, %f70;
	mul.f32 	%f71, %f25, %f65;
	fma.rn.f32 	%f72, %f24, %f62, %f71;
	fma.rn.f32 	%f2, %f26, %f68, %f72;
	mul.f32 	%f73, %f40, %f58;
	fma.rn.f32 	%f74, %f37, %f57, %f73;
	fma.rn.f32 	%f3, %f43, %f59, %f74;
	ld.global.f32 	%f75, [ray+32];
	setp.geu.f32	%p1, %f3, %f75;
	ld.global.f32 	%f76, [ray+28];
	setp.leu.f32	%p2, %f3, %f76;
	or.pred  	%p3, %p1, %p2;
	setp.ltu.f32	%p4, %f1, 0f00000000;
	or.pred  	%p5, %p3, %p4;
	setp.ltu.f32	%p6, %f2, 0f00000000;
	or.pred  	%p7, %p5, %p6;
	add.f32 	%f77, %f1, %f2;
	setp.gtu.f32	%p8, %f77, 0f3F800000;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_8;

	ld.global.u32 	%r1, [firstAlphaTriangle];
	setp.gt.s32	%p10, %r1, %r2;
	@%p10 bra 	BB0_3;

	sub.s32 	%r29, %r2, %r1;
	cvt.s64.s32	%rd33, %r29;
	mov.u64 	%rd76, triangleAlphaIDs;
	cvta.global.u64 	%rd32, %rd76;
	mov.u32 	%r25, 4;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r9, %r25, %rd33, %rd28, %rd28, %rd28);
	// inline asm
	ld.u32 	%rd77, [%rd31];
	cvt.u32.u64	%r30, %rd77;
	shr.u32 	%r31, %r30, 16;
	mov.u64 	%rd78, vertex_buffer_uv;
	cvta.global.u64 	%rd38, %rd78;
	mov.u32 	%r18, 8;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r9, %r18, %rd13, %rd28, %rd28, %rd28);
	// inline asm
	ld.v2.f32 	{%f78, %f79}, [%rd37];
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd38, %r9, %r18, %rd19, %rd28, %rd28, %rd28);
	// inline asm
	ld.v2.f32 	{%f82, %f83}, [%rd43];
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd38, %r9, %r18, %rd25, %rd28, %rd28, %rd28);
	// inline asm
	mov.f32 	%f86, 0f3F800000;
	sub.f32 	%f87, %f86, %f1;
	sub.f32 	%f88, %f87, %f2;
	mul.f32 	%f89, %f1, %f82;
	mul.f32 	%f90, %f1, %f83;
	fma.rn.f32 	%f91, %f88, %f78, %f89;
	fma.rn.f32 	%f92, %f88, %f79, %f90;
	ld.v2.f32 	{%f93, %f94}, [%rd49];
	fma.rn.f32 	%f97, %f2, %f93, %f91;
	fma.rn.f32 	%f98, %f2, %f94, %f92;
	abs.f32 	%f99, %f97;
	cvt.rmi.f32.f32	%f100, %f99;
	sub.f32 	%f101, %f99, %f100;
	abs.f32 	%f102, %f98;
	cvt.rmi.f32.f32	%f103, %f102;
	sub.f32 	%f104, %f102, %f103;
	and.b64  	%rd57, %rd77, 65535;
	mov.u64 	%rd79, alphaTextures;
	cvta.global.u64 	%rd56, %rd79;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd56, %r9, %r25, %rd57, %rd28, %rd28, %rd28);
	// inline asm
	ld.u32 	%r21, [%rd55];
	mov.u32 	%r27, 2;
	// inline asm
	call (%rd61, %rd62, %rd63, %rd64), _rt_buffer_get_id_size_64, (%r21, %r27, %r9);
	// inline asm
	cvt.rn.f32.u64	%f105, %rd61;
	mul.f32 	%f106, %f101, %f105;
	cvt.rzi.u32.f32	%r32, %f106;
	cvt.rn.f32.u64	%f107, %rd62;
	mul.f32 	%f108, %f104, %f107;
	cvt.rzi.u32.f32	%r33, %f108;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd56, %r9, %r25, %rd57, %rd28, %rd28, %rd28);
	// inline asm
	ld.u32 	%r26, [%rd65];
	cvt.u64.u32	%rd72, %r32;
	cvt.u64.u32	%rd73, %r33;
	// inline asm
	call (%rd71), _rt_buffer_get_id_64, (%r26, %r27, %r9, %rd72, %rd73, %rd28, %rd28);
	// inline asm
	ld.u8 	%r34, [%rd71];
	and.b32  	%r35, %r34, %r31;
	setp.eq.s32	%p11, %r35, 0;
	@%p11 bra 	BB0_8;

BB0_3:
	// inline asm
	call (%r36), _rt_potential_intersection, (%f3);
	// inline asm
	setp.eq.s32	%p12, %r36, 0;
	@%p12 bra 	BB0_8;

	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd12, %r9, %r10, %rd13, %rd28, %rd28, %rd28);
	// inline asm
	ld.f32 	%f110, [%rd80+20];
	ld.f32 	%f111, [%rd80+16];
	ld.f32 	%f112, [%rd80+12];
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd12, %r9, %r10, %rd19, %rd28, %rd28, %rd28);
	// inline asm
	ld.f32 	%f113, [%rd86+20];
	ld.f32 	%f114, [%rd86+16];
	ld.f32 	%f115, [%rd86+12];
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd12, %r9, %r10, %rd25, %rd28, %rd28, %rd28);
	// inline asm
	mov.f32 	%f116, 0f3F800000;
	sub.f32 	%f117, %f116, %f1;
	sub.f32 	%f4, %f117, %f2;
	mul.f32 	%f118, %f1, %f115;
	mul.f32 	%f119, %f1, %f114;
	mul.f32 	%f120, %f1, %f113;
	fma.rn.f32 	%f121, %f4, %f112, %f118;
	fma.rn.f32 	%f122, %f4, %f111, %f119;
	fma.rn.f32 	%f123, %f4, %f110, %f120;
	ld.f32 	%f124, [%rd92+20];
	ld.f32 	%f125, [%rd92+16];
	ld.f32 	%f126, [%rd92+12];
	fma.rn.f32 	%f127, %f2, %f126, %f121;
	fma.rn.f32 	%f128, %f2, %f125, %f122;
	fma.rn.f32 	%f129, %f2, %f124, %f123;
	mul.f32 	%f130, %f128, %f128;
	fma.rn.f32 	%f131, %f127, %f127, %f130;
	fma.rn.f32 	%f132, %f129, %f129, %f131;
	sqrt.rn.f32 	%f133, %f132;
	rcp.rn.f32 	%f134, %f133;
	mul.f32 	%f135, %f134, %f127;
	mul.f32 	%f136, %f134, %f128;
	mul.f32 	%f137, %f134, %f129;
	st.global.f32 	[normal], %f135;
	st.global.f32 	[normal+4], %f136;
	st.global.f32 	[normal+8], %f137;
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd12, %r9, %r10, %rd13, %rd28, %rd28, %rd28);
	// inline asm
	ld.v2.f32 	{%f150, %f139}, [%rd98+24];
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd12, %r9, %r10, %rd19, %rd28, %rd28, %rd28);
	// inline asm
	ld.v2.f32 	{%f140, %f141}, [%rd104+24];
	// inline asm
	call (%rd110), _rt_buffer_get_64, (%rd12, %r9, %r10, %rd25, %rd28, %rd28, %rd28);
	// inline asm
	setp.lt.f32	%p13, %f139, 0f00000000;
	@%p13 bra 	BB0_6;
	bra.uni 	BB0_5;

BB0_6:
	add.f32 	%f151, %f139, 0f3F800000;
	bra.uni 	BB0_7;

BB0_5:
	ld.v2.f32 	{%f142, %f143}, [%rd110+24];
	mul.f32 	%f146, %f1, %f140;
	mul.f32 	%f147, %f1, %f141;
	fma.rn.f32 	%f148, %f4, %f150, %f146;
	fma.rn.f32 	%f149, %f4, %f139, %f147;
	fma.rn.f32 	%f150, %f2, %f142, %f148;
	fma.rn.f32 	%f151, %f2, %f143, %f149;

BB0_7:
	st.global.v2.f32 	[texCoords], {%f150, %f151};
	mov.u32 	%r50, 0;
	// inline asm
	call (%r49), _rt_report_intersection, (%r50);
	// inline asm

BB0_8:
	ret;
}

	// .globl	_Z4bboxiPN5optix4AabbE
.visible .entry _Z4bboxiPN5optix4AabbE(
	.param .u32 _Z4bboxiPN5optix4AabbE_param_0,
	.param .u64 _Z4bboxiPN5optix4AabbE_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<42>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<29>;


	ld.param.u64 	%rd2, [_Z4bboxiPN5optix4AabbE_param_1];
	ld.param.s32 	%rd5, [_Z4bboxiPN5optix4AabbE_param_0];
	mov.u64 	%rd27, index_buffer;
	cvta.global.u64 	%rd4, %rd27;
	mov.u32 	%r7, 1;
	mov.u32 	%r2, 12;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r7, %r2, %rd5, %rd26, %rd26, %rd26);
	// inline asm
	ld.s32 	%rd11, [%rd3];
	mov.u64 	%rd28, vertex_buffer;
	cvta.global.u64 	%rd10, %rd28;
	ld.s32 	%rd17, [%rd3+4];
	ld.s32 	%rd23, [%rd3+8];
	mov.u32 	%r8, 32;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r7, %r8, %rd11, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f3, [%rd9+8];
	ld.f32 	%f2, [%rd9+4];
	ld.f32 	%f1, [%rd9];
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd10, %r7, %r8, %rd17, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f6, [%rd15+8];
	ld.f32 	%f5, [%rd15+4];
	ld.f32 	%f4, [%rd15];
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd10, %r7, %r8, %rd23, %rd26, %rd26, %rd26);
	// inline asm
	sub.f32 	%f11, %f4, %f1;
	sub.f32 	%f12, %f5, %f2;
	sub.f32 	%f13, %f6, %f3;
	ld.f32 	%f9, [%rd21+8];
	ld.f32 	%f8, [%rd21+4];
	ld.f32 	%f7, [%rd21];
	sub.f32 	%f14, %f7, %f1;
	sub.f32 	%f15, %f8, %f2;
	sub.f32 	%f16, %f9, %f3;
	mul.f32 	%f17, %f12, %f16;
	mul.f32 	%f18, %f13, %f15;
	sub.f32 	%f19, %f17, %f18;
	mul.f32 	%f20, %f13, %f14;
	mul.f32 	%f21, %f11, %f16;
	sub.f32 	%f22, %f20, %f21;
	mul.f32 	%f23, %f11, %f15;
	mul.f32 	%f24, %f12, %f14;
	sub.f32 	%f25, %f23, %f24;
	mul.f32 	%f26, %f22, %f22;
	fma.rn.f32 	%f27, %f19, %f19, %f26;
	fma.rn.f32 	%f28, %f25, %f25, %f27;
	sqrt.rn.f32 	%f10, %f28;
	mov.pred 	%p5, 0;
	setp.leu.f32	%p4, %f10, 0f00000000;
	@%p4 bra 	BB1_2;

	abs.f32 	%f29, %f10;
	setp.neu.f32	%p5, %f29, 0f7F800000;

BB1_2:
	cvta.to.global.u64 	%rd1, %rd2;
	@%p5 bra 	BB1_4;
	bra.uni 	BB1_3;

BB1_4:
	min.f32 	%f30, %f1, %f4;
	min.f32 	%f31, %f30, %f7;
	min.f32 	%f32, %f2, %f5;
	min.f32 	%f33, %f32, %f8;
	min.f32 	%f34, %f3, %f6;
	min.f32 	%f35, %f34, %f9;
	st.global.f32 	[%rd1], %f31;
	st.global.f32 	[%rd1+4], %f33;
	st.global.f32 	[%rd1+8], %f35;
	max.f32 	%f36, %f1, %f4;
	max.f32 	%f37, %f36, %f7;
	max.f32 	%f38, %f2, %f5;
	max.f32 	%f39, %f38, %f8;
	max.f32 	%f40, %f3, %f6;
	max.f32 	%f41, %f40, %f9;
	st.global.f32 	[%rd1+12], %f37;
	st.global.f32 	[%rd1+16], %f39;
	st.global.f32 	[%rd1+20], %f41;
	bra.uni 	BB1_5;

BB1_3:
	mov.u32 	%r9, 2096152002;
	st.global.u32 	[%rd1], %r9;
	st.global.u32 	[%rd1+8], %r9;
	st.global.u32 	[%rd1+4], %r9;
	mov.u32 	%r10, -51331646;
	st.global.u32 	[%rd1+12], %r10;
	st.global.u32 	[%rd1+16], %r10;
	st.global.u32 	[%rd1+20], %r10;

BB1_5:
	ret;
}


