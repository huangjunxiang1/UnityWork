//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .f32 lightRadius;
.global .align 4 .f32 intensity;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11lightRadiusE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9intensityE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11lightRadiusE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9intensityE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11lightRadiusE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9intensityE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11lightRadiusE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9intensityE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11lightRadiusE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9intensityE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<61>;
	.reg .b16 	%rs<47>;
	.reg .f32 	%f<345>;
	.reg .b32 	%r<275>;
	.reg .b64 	%rd<112>;


	mov.u64 	%rd111, __local_depot0;
	cvta.local.u64 	%SP, %rd111;
	ld.global.v2.u32 	{%r91, %r92}, [pixelID];
	cvt.u64.u32	%rd22, %r91;
	cvt.u64.u32	%rd23, %r92;
	mov.u64 	%rd26, uvnormal;
	cvta.global.u64 	%rd21, %rd26;
	mov.u32 	%r89, 2;
	mov.u32 	%r90, 4;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r89, %r90, %rd22, %rd23, %rd25, %rd25);
	// inline asm
	ld.u32 	%r1, [%rd20];
	shr.u32 	%r95, %r1, 16;
	cvt.u16.u32	%rs1, %r95;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r1;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p2, %rs5, 0;
	mov.f32 	%f323, 0f00000000;
	mov.f32 	%f324, %f323;
	mov.f32 	%f325, %f323;
	@%p2 bra 	BB0_2;

	ld.u8 	%rs6, [%rd20+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f81, %rs8;
	div.rn.f32 	%f82, %f81, 0f437F0000;
	fma.rn.f32 	%f83, %f82, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f84, %rs6;
	div.rn.f32 	%f85, %f84, 0f437F0000;
	fma.rn.f32 	%f86, %f85, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f87, %rs3;
	div.rn.f32 	%f88, %f87, 0f437F0000;
	fma.rn.f32 	%f89, %f88, 0f40000000, 0fBF800000;
	mul.f32 	%f90, %f86, %f86;
	fma.rn.f32 	%f91, %f83, %f83, %f90;
	fma.rn.f32 	%f92, %f89, %f89, %f91;
	sqrt.rn.f32 	%f93, %f92;
	rcp.rn.f32 	%f94, %f93;
	mul.f32 	%f323, %f83, %f94;
	mul.f32 	%f324, %f86, %f94;
	mul.f32 	%f325, %f89, %f94;

BB0_2:
	ld.global.v2.u32 	{%r96, %r97}, [pixelID];
	ld.global.v2.u32 	{%r99, %r100}, [tileInfo];
	add.s32 	%r2, %r96, %r99;
	add.s32 	%r3, %r97, %r100;
	setp.eq.f32	%p3, %f324, 0f00000000;
	setp.eq.f32	%p4, %f323, 0f00000000;
	and.pred  	%p5, %p4, %p3;
	setp.eq.f32	%p6, %f325, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB0_72;
	bra.uni 	BB0_3;

BB0_72:
	ld.global.u8 	%rs28, [imageEnabled];
	and.b16  	%rs29, %rs28, 4;
	setp.eq.s16	%p58, %rs29, 0;
	@%p58 bra 	BB0_76;

	ld.global.u32 	%r237, [additive];
	setp.eq.s32	%p59, %r237, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	@%p59 bra 	BB0_75;

	mov.u64 	%rd92, image_HDR;
	cvta.global.u64 	%rd81, %rd92;
	mov.u32 	%r241, 8;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r89, %r241, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs36, %rs37, %rs38, %rs39}, [%rd80];
	// inline asm
	{  cvt.f32.f16 %f313, %rs36;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f314, %rs37;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f315, %rs38;}

	// inline asm
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd81, %r89, %r241, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	add.f32 	%f316, %f313, 0f00000000;
	add.f32 	%f317, %f314, 0f00000000;
	add.f32 	%f318, %f315, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs35, %f318;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f317;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f316;}

	// inline asm
	mov.u16 	%rs40, 0;
	st.v4.u16 	[%rd86], {%rs33, %rs34, %rs35, %rs40};
	bra.uni 	BB0_76;

BB0_3:
	ld.global.v2.u32 	{%r108, %r109}, [pixelID];
	cvt.u64.u32	%rd29, %r108;
	cvt.u64.u32	%rd30, %r109;
	mov.u64 	%rd39, uvpos;
	cvta.global.u64 	%rd28, %rd39;
	mov.u32 	%r105, 12;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r89, %r105, %rd29, %rd30, %rd25, %rd25);
	// inline asm
	ld.f32 	%f96, [%rd27+8];
	ld.f32 	%f97, [%rd27+4];
	ld.f32 	%f98, [%rd27];
	mul.f32 	%f99, %f98, 0f3456BF95;
	mul.f32 	%f100, %f97, 0f3456BF95;
	mul.f32 	%f101, %f96, 0f3456BF95;
	abs.f32 	%f102, %f323;
	div.rn.f32 	%f103, %f99, %f102;
	abs.f32 	%f104, %f324;
	div.rn.f32 	%f105, %f100, %f104;
	abs.f32 	%f106, %f325;
	div.rn.f32 	%f107, %f101, %f106;
	abs.f32 	%f108, %f103;
	abs.f32 	%f109, %f105;
	abs.f32 	%f110, %f107;
	mov.f32 	%f111, 0f38D1B717;
	max.f32 	%f112, %f108, %f111;
	max.f32 	%f113, %f109, %f111;
	max.f32 	%f114, %f110, %f111;
	fma.rn.f32 	%f7, %f323, %f112, %f98;
	fma.rn.f32 	%f8, %f324, %f113, %f97;
	fma.rn.f32 	%f9, %f325, %f114, %f96;
	setp.gt.f32	%p8, %f102, %f106;
	neg.f32 	%f115, %f324;
	selp.f32	%f116, %f115, 0f00000000, %p8;
	neg.f32 	%f117, %f325;
	selp.f32	%f118, %f323, %f117, %p8;
	selp.f32	%f119, 0f00000000, %f324, %p8;
	mul.f32 	%f120, %f118, %f118;
	fma.rn.f32 	%f121, %f116, %f116, %f120;
	fma.rn.f32 	%f122, %f119, %f119, %f121;
	sqrt.rn.f32 	%f123, %f122;
	rcp.rn.f32 	%f124, %f123;
	mul.f32 	%f10, %f116, %f124;
	mul.f32 	%f11, %f118, %f124;
	mul.f32 	%f12, %f119, %f124;
	ld.global.v2.u32 	{%r112, %r113}, [pixelID];
	cvt.u64.u32	%rd35, %r112;
	cvt.u64.u32	%rd36, %r113;
	mov.u64 	%rd40, rnd_seeds;
	cvta.global.u64 	%rd34, %rd40;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r89, %r90, %rd35, %rd36, %rd25, %rd25);
	// inline asm
	ld.global.u32 	%r247, [samples];
	mov.f32 	%f340, 0f00000000;
	setp.lt.s32	%p9, %r247, 1;
	@%p9 bra 	BB0_55;

	cvt.rn.f32.s32	%f126, %r247;
	rcp.rn.f32 	%f13, %f126;
	ld.u32 	%r273, [%rd33];
	mul.f32 	%f14, %f7, 0f3456BF95;
	mul.f32 	%f15, %f8, 0f3456BF95;
	mul.f32 	%f16, %f9, 0f3456BF95;
	mul.f32 	%f127, %f323, %f11;
	mul.f32 	%f128, %f324, %f10;
	sub.f32 	%f17, %f128, %f127;
	mul.f32 	%f129, %f325, %f10;
	mul.f32 	%f130, %f323, %f12;
	sub.f32 	%f18, %f130, %f129;
	mul.f32 	%f131, %f324, %f12;
	mul.f32 	%f132, %f325, %f11;
	sub.f32 	%f19, %f132, %f131;
	mov.f32 	%f340, 0f00000000;
	mov.u32 	%r248, 0;
	abs.f32 	%f133, %f15;
	abs.f32 	%f134, %f14;
	max.f32 	%f135, %f134, %f133;
	abs.f32 	%f136, %f16;
	max.f32 	%f137, %f135, %f136;

BB0_5:
	setp.lt.s32	%p10, %r247, 1;
	@%p10 bra 	BB0_54;

	cvt.rn.f32.s32	%f21, %r248;
	max.f32 	%f22, %f137, %f111;
	mov.u32 	%r250, 0;

BB0_7:
	mad.lo.s32 	%r118, %r273, 1664525, 1013904223;
	and.b32  	%r119, %r118, 16777215;
	cvt.rn.f32.u32	%f139, %r119;
	fma.rn.f32 	%f140, %f139, 0f33800000, %f21;
	mul.f32 	%f141, %f13, %f140;
	mad.lo.s32 	%r273, %r118, 1664525, 1013904223;
	and.b32  	%r120, %r273, 16777215;
	cvt.rn.f32.u32	%f142, %r120;
	cvt.rn.f32.s32	%f143, %r250;
	fma.rn.f32 	%f144, %f142, 0f33800000, %f143;
	mul.f32 	%f145, %f13, %f144;
	sqrt.rn.f32 	%f24, %f141;
	mul.f32 	%f334, %f145, 0f40C90FDB;
	abs.f32 	%f26, %f334;
	setp.neu.f32	%p11, %f26, 0f7F800000;
	mov.f32 	%f328, %f334;
	@%p11 bra 	BB0_9;

	mov.f32 	%f146, 0f00000000;
	mul.rn.f32 	%f328, %f334, %f146;

BB0_9:
	mul.f32 	%f147, %f328, 0f3F22F983;
	cvt.rni.s32.f32	%r261, %f147;
	cvt.rn.f32.s32	%f148, %r261;
	neg.f32 	%f149, %f148;
	mov.f32 	%f150, 0f3FC90FDA;
	fma.rn.f32 	%f151, %f149, %f150, %f328;
	mov.f32 	%f152, 0f33A22168;
	fma.rn.f32 	%f153, %f149, %f152, %f151;
	mov.f32 	%f154, 0f27C234C5;
	fma.rn.f32 	%f329, %f149, %f154, %f153;
	abs.f32 	%f155, %f328;
	setp.leu.f32	%p12, %f155, 0f47CE4780;
	@%p12 bra 	BB0_20;

	mov.b32 	 %r13, %f328;
	shr.u32 	%r14, %r13, 23;
	shl.b32 	%r123, %r13, 8;
	or.b32  	%r15, %r123, -2147483648;
	add.u64 	%rd42, %SP, 4;
	cvta.to.local.u64 	%rd108, %rd42;
	mov.u32 	%r253, 0;
	mov.u64 	%rd107, __cudart_i2opi_f;
	mov.u32 	%r252, -6;

BB0_11:
	.pragma "nounroll";
	ld.const.u32 	%r126, [%rd107];
	// inline asm
	{
	mad.lo.cc.u32   %r124, %r126, %r15, %r253;
	madc.hi.u32     %r253, %r126, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd108], %r124;
	add.s64 	%rd108, %rd108, 4;
	add.s64 	%rd107, %rd107, 4;
	add.s32 	%r252, %r252, 1;
	setp.ne.s32	%p13, %r252, 0;
	@%p13 bra 	BB0_11;

	and.b32  	%r129, %r14, 255;
	add.s32 	%r130, %r129, -128;
	shr.u32 	%r131, %r130, 5;
	and.b32  	%r20, %r13, -2147483648;
	cvta.to.local.u64 	%rd44, %rd42;
	st.local.u32 	[%rd44+24], %r253;
	mov.u32 	%r132, 6;
	sub.s32 	%r133, %r132, %r131;
	mul.wide.s32 	%rd45, %r133, 4;
	add.s64 	%rd8, %rd44, %rd45;
	ld.local.u32 	%r254, [%rd8];
	ld.local.u32 	%r255, [%rd8+-4];
	and.b32  	%r23, %r14, 31;
	setp.eq.s32	%p14, %r23, 0;
	@%p14 bra 	BB0_14;

	mov.u32 	%r134, 32;
	sub.s32 	%r135, %r134, %r23;
	shr.u32 	%r136, %r255, %r135;
	shl.b32 	%r137, %r254, %r23;
	add.s32 	%r254, %r136, %r137;
	ld.local.u32 	%r138, [%rd8+-8];
	shr.u32 	%r139, %r138, %r135;
	shl.b32 	%r140, %r255, %r23;
	add.s32 	%r255, %r139, %r140;

BB0_14:
	shr.u32 	%r141, %r255, 30;
	shl.b32 	%r142, %r254, 2;
	add.s32 	%r256, %r141, %r142;
	shl.b32 	%r29, %r255, 2;
	shr.u32 	%r143, %r256, 31;
	shr.u32 	%r144, %r254, 30;
	add.s32 	%r30, %r143, %r144;
	setp.eq.s32	%p15, %r143, 0;
	@%p15 bra 	BB0_15;
	bra.uni 	BB0_16;

BB0_15:
	mov.u32 	%r257, %r20;
	mov.u32 	%r258, %r29;
	bra.uni 	BB0_17;

BB0_16:
	not.b32 	%r145, %r256;
	neg.s32 	%r258, %r29;
	setp.eq.s32	%p16, %r29, 0;
	selp.u32	%r146, 1, 0, %p16;
	add.s32 	%r256, %r146, %r145;
	xor.b32  	%r257, %r20, -2147483648;

BB0_17:
	clz.b32 	%r260, %r256;
	setp.eq.s32	%p17, %r260, 0;
	shl.b32 	%r147, %r256, %r260;
	mov.u32 	%r148, 32;
	sub.s32 	%r149, %r148, %r260;
	shr.u32 	%r150, %r258, %r149;
	add.s32 	%r151, %r150, %r147;
	selp.b32	%r38, %r256, %r151, %p17;
	mov.u32 	%r152, -921707870;
	mul.hi.u32 	%r259, %r38, %r152;
	setp.eq.s32	%p18, %r20, 0;
	neg.s32 	%r153, %r30;
	selp.b32	%r261, %r30, %r153, %p18;
	setp.lt.s32	%p19, %r259, 1;
	@%p19 bra 	BB0_19;

	mul.lo.s32 	%r154, %r38, -921707870;
	shr.u32 	%r155, %r154, 31;
	shl.b32 	%r156, %r259, 1;
	add.s32 	%r259, %r155, %r156;
	add.s32 	%r260, %r260, 1;

BB0_19:
	mov.u32 	%r157, 126;
	sub.s32 	%r158, %r157, %r260;
	shl.b32 	%r159, %r158, 23;
	add.s32 	%r160, %r259, 1;
	shr.u32 	%r161, %r160, 7;
	add.s32 	%r162, %r161, 1;
	shr.u32 	%r163, %r162, 1;
	add.s32 	%r164, %r163, %r159;
	or.b32  	%r165, %r164, %r257;
	mov.b32 	 %f329, %r165;

BB0_20:
	mul.rn.f32 	%f32, %f329, %f329;
	add.s32 	%r46, %r261, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p20, %r47, 0;
	@%p20 bra 	BB0_22;
	bra.uni 	BB0_21;

BB0_22:
	mov.f32 	%f158, 0f3C08839E;
	mov.f32 	%f159, 0fB94CA1F9;
	fma.rn.f32 	%f330, %f159, %f32, %f158;
	bra.uni 	BB0_23;

BB0_21:
	mov.f32 	%f156, 0fBAB6061A;
	mov.f32 	%f157, 0f37CCF5CE;
	fma.rn.f32 	%f330, %f157, %f32, %f156;

BB0_23:
	@%p20 bra 	BB0_25;
	bra.uni 	BB0_24;

BB0_25:
	mov.f32 	%f163, 0fBE2AAAA3;
	fma.rn.f32 	%f164, %f330, %f32, %f163;
	mov.f32 	%f165, 0f00000000;
	fma.rn.f32 	%f331, %f164, %f32, %f165;
	bra.uni 	BB0_26;

BB0_24:
	mov.f32 	%f160, 0f3D2AAAA5;
	fma.rn.f32 	%f161, %f330, %f32, %f160;
	mov.f32 	%f162, 0fBF000000;
	fma.rn.f32 	%f331, %f161, %f32, %f162;

BB0_26:
	fma.rn.f32 	%f332, %f331, %f329, %f329;
	@%p20 bra 	BB0_28;

	mov.f32 	%f166, 0f3F800000;
	fma.rn.f32 	%f332, %f331, %f32, %f166;

BB0_28:
	and.b32  	%r166, %r46, 2;
	setp.eq.s32	%p23, %r166, 0;
	@%p23 bra 	BB0_30;

	mov.f32 	%f167, 0f00000000;
	mov.f32 	%f168, 0fBF800000;
	fma.rn.f32 	%f332, %f332, %f168, %f167;

BB0_30:
	@%p11 bra 	BB0_32;

	mov.f32 	%f169, 0f00000000;
	mul.rn.f32 	%f334, %f334, %f169;

BB0_32:
	mul.f32 	%f170, %f334, 0f3F22F983;
	cvt.rni.s32.f32	%r271, %f170;
	cvt.rn.f32.s32	%f171, %r271;
	neg.f32 	%f172, %f171;
	fma.rn.f32 	%f174, %f172, %f150, %f334;
	fma.rn.f32 	%f176, %f172, %f152, %f174;
	fma.rn.f32 	%f335, %f172, %f154, %f176;
	abs.f32 	%f178, %f334;
	setp.leu.f32	%p25, %f178, 0f47CE4780;
	@%p25 bra 	BB0_43;

	mov.b32 	 %r49, %f334;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r169, %r49, 8;
	or.b32  	%r51, %r169, -2147483648;
	add.u64 	%rd47, %SP, 4;
	cvta.to.local.u64 	%rd110, %rd47;
	mov.u32 	%r263, 0;
	mov.u64 	%rd109, __cudart_i2opi_f;
	mov.u32 	%r262, -6;

BB0_34:
	.pragma "nounroll";
	ld.const.u32 	%r172, [%rd109];
	// inline asm
	{
	mad.lo.cc.u32   %r170, %r172, %r51, %r263;
	madc.hi.u32     %r263, %r172, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd110], %r170;
	add.s64 	%rd110, %rd110, 4;
	add.s64 	%rd109, %rd109, 4;
	add.s32 	%r262, %r262, 1;
	setp.ne.s32	%p26, %r262, 0;
	@%p26 bra 	BB0_34;

	and.b32  	%r175, %r50, 255;
	add.s32 	%r176, %r175, -128;
	shr.u32 	%r177, %r176, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd49, %rd47;
	st.local.u32 	[%rd49+24], %r263;
	mov.u32 	%r178, 6;
	sub.s32 	%r179, %r178, %r177;
	mul.wide.s32 	%rd50, %r179, 4;
	add.s64 	%rd14, %rd49, %rd50;
	ld.local.u32 	%r264, [%rd14];
	ld.local.u32 	%r265, [%rd14+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p27, %r59, 0;
	@%p27 bra 	BB0_37;

	mov.u32 	%r180, 32;
	sub.s32 	%r181, %r180, %r59;
	shr.u32 	%r182, %r265, %r181;
	shl.b32 	%r183, %r264, %r59;
	add.s32 	%r264, %r182, %r183;
	ld.local.u32 	%r184, [%rd14+-8];
	shr.u32 	%r185, %r184, %r181;
	shl.b32 	%r186, %r265, %r59;
	add.s32 	%r265, %r185, %r186;

BB0_37:
	shr.u32 	%r187, %r265, 30;
	shl.b32 	%r188, %r264, 2;
	add.s32 	%r266, %r187, %r188;
	shl.b32 	%r65, %r265, 2;
	shr.u32 	%r189, %r266, 31;
	shr.u32 	%r190, %r264, 30;
	add.s32 	%r66, %r189, %r190;
	setp.eq.s32	%p28, %r189, 0;
	@%p28 bra 	BB0_38;
	bra.uni 	BB0_39;

BB0_38:
	mov.u32 	%r267, %r56;
	mov.u32 	%r268, %r65;
	bra.uni 	BB0_40;

BB0_39:
	not.b32 	%r191, %r266;
	neg.s32 	%r268, %r65;
	setp.eq.s32	%p29, %r65, 0;
	selp.u32	%r192, 1, 0, %p29;
	add.s32 	%r266, %r192, %r191;
	xor.b32  	%r267, %r56, -2147483648;

BB0_40:
	clz.b32 	%r270, %r266;
	setp.eq.s32	%p30, %r270, 0;
	shl.b32 	%r193, %r266, %r270;
	mov.u32 	%r194, 32;
	sub.s32 	%r195, %r194, %r270;
	shr.u32 	%r196, %r268, %r195;
	add.s32 	%r197, %r196, %r193;
	selp.b32	%r74, %r266, %r197, %p30;
	mov.u32 	%r198, -921707870;
	mul.hi.u32 	%r269, %r74, %r198;
	setp.eq.s32	%p31, %r56, 0;
	neg.s32 	%r199, %r66;
	selp.b32	%r271, %r66, %r199, %p31;
	setp.lt.s32	%p32, %r269, 1;
	@%p32 bra 	BB0_42;

	mul.lo.s32 	%r200, %r74, -921707870;
	shr.u32 	%r201, %r200, 31;
	shl.b32 	%r202, %r269, 1;
	add.s32 	%r269, %r201, %r202;
	add.s32 	%r270, %r270, 1;

BB0_42:
	mov.u32 	%r203, 126;
	sub.s32 	%r204, %r203, %r270;
	shl.b32 	%r205, %r204, 23;
	add.s32 	%r206, %r269, 1;
	shr.u32 	%r207, %r206, 7;
	add.s32 	%r208, %r207, 1;
	shr.u32 	%r209, %r208, 1;
	add.s32 	%r210, %r209, %r205;
	or.b32  	%r211, %r210, %r267;
	mov.b32 	 %f335, %r211;

BB0_43:
	mul.rn.f32 	%f49, %f335, %f335;
	and.b32  	%r82, %r271, 1;
	setp.eq.s32	%p33, %r82, 0;
	@%p33 bra 	BB0_45;
	bra.uni 	BB0_44;

BB0_45:
	mov.f32 	%f181, 0f3C08839E;
	mov.f32 	%f182, 0fB94CA1F9;
	fma.rn.f32 	%f336, %f182, %f49, %f181;
	bra.uni 	BB0_46;

BB0_44:
	mov.f32 	%f179, 0fBAB6061A;
	mov.f32 	%f180, 0f37CCF5CE;
	fma.rn.f32 	%f336, %f180, %f49, %f179;

BB0_46:
	@%p33 bra 	BB0_48;
	bra.uni 	BB0_47;

BB0_48:
	mov.f32 	%f186, 0fBE2AAAA3;
	fma.rn.f32 	%f187, %f336, %f49, %f186;
	mov.f32 	%f188, 0f00000000;
	fma.rn.f32 	%f337, %f187, %f49, %f188;
	bra.uni 	BB0_49;

BB0_47:
	mov.f32 	%f183, 0f3D2AAAA5;
	fma.rn.f32 	%f184, %f336, %f49, %f183;
	mov.f32 	%f185, 0fBF000000;
	fma.rn.f32 	%f337, %f184, %f49, %f185;

BB0_49:
	fma.rn.f32 	%f338, %f337, %f335, %f335;
	@%p33 bra 	BB0_51;

	mov.f32 	%f189, 0f3F800000;
	fma.rn.f32 	%f338, %f337, %f49, %f189;

BB0_51:
	and.b32  	%r212, %r271, 2;
	setp.eq.s32	%p36, %r212, 0;
	@%p36 bra 	BB0_53;

	mov.f32 	%f190, 0f00000000;
	mov.f32 	%f191, 0fBF800000;
	fma.rn.f32 	%f338, %f338, %f191, %f190;

BB0_53:
	mul.f32 	%f200, %f24, %f332;
	add.u64 	%rd51, %SP, 0;
	cvta.to.local.u64 	%rd52, %rd51;
	mul.f32 	%f201, %f200, %f200;
	mov.f32 	%f202, 0f3F800000;
	sub.f32 	%f203, %f202, %f201;
	mul.f32 	%f204, %f24, %f338;
	mul.f32 	%f205, %f204, %f204;
	sub.f32 	%f206, %f203, %f205;
	mov.f32 	%f207, 0f00000000;
	max.f32 	%f208, %f207, %f206;
	sqrt.rn.f32 	%f209, %f208;
	mul.f32 	%f210, %f10, %f204;
	mul.f32 	%f211, %f11, %f204;
	mul.f32 	%f212, %f12, %f204;
	fma.rn.f32 	%f213, %f19, %f200, %f210;
	fma.rn.f32 	%f214, %f18, %f200, %f211;
	fma.rn.f32 	%f215, %f17, %f200, %f212;
	fma.rn.f32 	%f195, %f323, %f209, %f213;
	fma.rn.f32 	%f196, %f324, %f209, %f214;
	fma.rn.f32 	%f197, %f325, %f209, %f215;
	ld.global.f32 	%f199, [lightRadius];
	mov.u32 	%r216, 1065353216;
	st.local.u32 	[%rd52], %r216;
	ld.global.u32 	%r213, [root];
	mov.u32 	%r214, 1;
	// inline asm
	call _rt_trace_64, (%r213, %f7, %f8, %f9, %f195, %f196, %f197, %r214, %f22, %f199, %rd51, %r90);
	// inline asm
	ld.local.f32 	%f216, [%rd52];
	add.f32 	%f340, %f340, %f216;
	ld.global.u32 	%r247, [samples];
	add.s32 	%r250, %r250, 1;
	setp.lt.s32	%p37, %r250, %r247;
	@%p37 bra 	BB0_7;

BB0_54:
	add.s32 	%r248, %r248, 1;
	setp.lt.s32	%p38, %r248, %r247;
	@%p38 bra 	BB0_5;

BB0_55:
	mul.lo.s32 	%r217, %r247, %r247;
	cvt.rn.f32.s32	%f217, %r217;
	div.rn.f32 	%f218, %f340, %f217;
	add.f32 	%f219, %f218, 0fBF800000;
	ld.global.f32 	%f220, [intensity];
	fma.rn.f32 	%f221, %f220, %f219, 0f3F800000;
	cvt.sat.f32.f32	%f64, %f221;
	ld.global.u8 	%rs10, [imageEnabled];
	and.b16  	%rs11, %rs10, 4;
	setp.eq.s16	%p39, %rs11, 0;
	@%p39 bra 	BB0_59;

	ld.global.u32 	%r218, [additive];
	setp.eq.s32	%p40, %r218, 0;
	cvt.u64.u32	%rd15, %r2;
	cvt.u64.u32	%rd16, %r3;
	mov.f32 	%f222, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs12, %f222;}

	// inline asm
	@%p40 bra 	BB0_58;

	mov.u64 	%rd65, image_HDR;
	cvta.global.u64 	%rd54, %rd65;
	mov.u32 	%r222, 8;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r89, %r222, %rd15, %rd16, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs19, %rs20, %rs21, %rs22}, [%rd53];
	// inline asm
	{  cvt.f32.f16 %f223, %rs19;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f224, %rs20;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f225, %rs21;}

	// inline asm
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd54, %r89, %r222, %rd15, %rd16, %rd25, %rd25);
	// inline asm
	add.f32 	%f226, %f64, %f223;
	add.f32 	%f227, %f64, %f224;
	add.f32 	%f228, %f64, %f225;
	// inline asm
	{  cvt.rn.f16.f32 %rs18, %f228;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs17, %f227;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs16, %f226;}

	// inline asm
	st.v4.u16 	[%rd59], {%rs16, %rs17, %rs18, %rs12};
	bra.uni 	BB0_59;

BB0_75:
	mov.u64 	%rd99, image_HDR;
	cvta.global.u64 	%rd94, %rd99;
	mov.u32 	%r243, 8;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r89, %r243, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	mov.f32 	%f319, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f319;}

	// inline asm
	mov.u16 	%rs42, 0;
	st.v4.u16 	[%rd93], {%rs41, %rs41, %rs41, %rs42};

BB0_76:
	ld.global.u8 	%rs43, [imageEnabled];
	and.b16  	%rs44, %rs43, 8;
	setp.eq.s16	%p60, %rs44, 0;
	@%p60 bra 	BB0_78;

	cvt.u64.u32	%rd102, %r2;
	cvt.u64.u32	%rd103, %r3;
	mov.u64 	%rd106, image_Mask;
	cvta.global.u64 	%rd101, %rd106;
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd101, %r89, %r89, %rd102, %rd103, %rd25, %rd25);
	// inline asm
	mov.f32 	%f322, 0f00000000;
	cvt.rzi.u32.f32	%r246, %f322;
	cvt.u16.u32	%rs45, %r246;
	mov.u16 	%rs46, 0;
	st.v2.u8 	[%rd100], {%rs45, %rs46};
	bra.uni 	BB0_78;

BB0_58:
	mov.u64 	%rd72, image_HDR;
	cvta.global.u64 	%rd67, %rd72;
	mov.u32 	%r224, 8;
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd67, %r89, %r224, %rd15, %rd16, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f64;}

	// inline asm
	st.v4.u16 	[%rd66], {%rs23, %rs23, %rs23, %rs12};

BB0_59:
	ld.global.u8 	%rs24, [imageEnabled];
	and.b16  	%rs25, %rs24, 8;
	setp.eq.s16	%p41, %rs25, 0;
	@%p41 bra 	BB0_78;

	cvt.u64.u32	%rd75, %r2;
	cvt.u64.u32	%rd76, %r3;
	mov.u64 	%rd79, image_Mask;
	cvta.global.u64 	%rd74, %rd79;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd74, %r89, %r89, %rd75, %rd76, %rd25, %rd25);
	// inline asm
	mov.f32 	%f232, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f233, %f232;
	fma.rn.f32 	%f234, %f233, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f65, %f234;
	abs.f32 	%f66, %f64;
	setp.lt.f32	%p42, %f66, 0f00800000;
	mul.f32 	%f235, %f66, 0f4B800000;
	selp.f32	%f236, 0fC3170000, 0fC2FE0000, %p42;
	selp.f32	%f237, %f235, %f66, %p42;
	mov.b32 	 %r227, %f237;
	and.b32  	%r228, %r227, 8388607;
	or.b32  	%r229, %r228, 1065353216;
	mov.b32 	 %f238, %r229;
	shr.u32 	%r230, %r227, 23;
	cvt.rn.f32.u32	%f239, %r230;
	add.f32 	%f240, %f236, %f239;
	setp.gt.f32	%p43, %f238, 0f3FB504F3;
	mul.f32 	%f241, %f238, 0f3F000000;
	add.f32 	%f242, %f240, 0f3F800000;
	selp.f32	%f243, %f241, %f238, %p43;
	selp.f32	%f244, %f242, %f240, %p43;
	add.f32 	%f245, %f243, 0fBF800000;
	add.f32 	%f231, %f243, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f230,%f231;
	// inline asm
	add.f32 	%f246, %f245, %f245;
	mul.f32 	%f247, %f230, %f246;
	mul.f32 	%f248, %f247, %f247;
	mov.f32 	%f249, 0f3C4CAF63;
	mov.f32 	%f250, 0f3B18F0FE;
	fma.rn.f32 	%f251, %f250, %f248, %f249;
	mov.f32 	%f252, 0f3DAAAABD;
	fma.rn.f32 	%f253, %f251, %f248, %f252;
	mul.rn.f32 	%f254, %f253, %f248;
	mul.rn.f32 	%f255, %f254, %f247;
	sub.f32 	%f256, %f245, %f247;
	neg.f32 	%f257, %f247;
	add.f32 	%f258, %f256, %f256;
	fma.rn.f32 	%f259, %f257, %f245, %f258;
	mul.rn.f32 	%f260, %f230, %f259;
	add.f32 	%f261, %f255, %f247;
	sub.f32 	%f262, %f247, %f261;
	add.f32 	%f263, %f255, %f262;
	add.f32 	%f264, %f260, %f263;
	add.f32 	%f265, %f261, %f264;
	sub.f32 	%f266, %f261, %f265;
	add.f32 	%f267, %f264, %f266;
	mov.f32 	%f268, 0f3F317200;
	mul.rn.f32 	%f269, %f244, %f268;
	mov.f32 	%f270, 0f35BFBE8E;
	mul.rn.f32 	%f271, %f244, %f270;
	add.f32 	%f272, %f269, %f265;
	sub.f32 	%f273, %f269, %f272;
	add.f32 	%f274, %f265, %f273;
	add.f32 	%f275, %f267, %f274;
	add.f32 	%f276, %f271, %f275;
	add.f32 	%f277, %f272, %f276;
	sub.f32 	%f278, %f272, %f277;
	add.f32 	%f279, %f276, %f278;
	mov.f32 	%f280, 0f3EE8BA2E;
	mul.rn.f32 	%f281, %f280, %f277;
	neg.f32 	%f282, %f281;
	fma.rn.f32 	%f283, %f280, %f277, %f282;
	fma.rn.f32 	%f284, %f280, %f279, %f283;
	mov.f32 	%f285, 0f00000000;
	fma.rn.f32 	%f286, %f285, %f277, %f284;
	add.rn.f32 	%f287, %f281, %f286;
	neg.f32 	%f288, %f287;
	add.rn.f32 	%f289, %f281, %f288;
	add.rn.f32 	%f290, %f289, %f286;
	mov.b32 	 %r231, %f287;
	setp.eq.s32	%p44, %r231, 1118925336;
	add.s32 	%r232, %r231, -1;
	mov.b32 	 %f291, %r232;
	add.f32 	%f292, %f290, 0f37000000;
	selp.f32	%f293, %f291, %f287, %p44;
	selp.f32	%f67, %f292, %f290, %p44;
	mul.f32 	%f294, %f293, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f295, %f294;
	mov.f32 	%f296, 0fBF317200;
	fma.rn.f32 	%f297, %f295, %f296, %f293;
	mov.f32 	%f298, 0fB5BFBE8E;
	fma.rn.f32 	%f299, %f295, %f298, %f297;
	mul.f32 	%f300, %f299, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f301, %f300;
	add.f32 	%f302, %f295, 0f00000000;
	ex2.approx.f32 	%f303, %f302;
	mul.f32 	%f304, %f301, %f303;
	setp.lt.f32	%p45, %f293, 0fC2D20000;
	selp.f32	%f305, 0f00000000, %f304, %p45;
	setp.gt.f32	%p46, %f293, 0f42D20000;
	selp.f32	%f342, 0f7F800000, %f305, %p46;
	setp.eq.f32	%p47, %f342, 0f7F800000;
	@%p47 bra 	BB0_62;

	fma.rn.f32 	%f342, %f342, %f67, %f342;

BB0_62:
	setp.lt.f32	%p48, %f64, 0f00000000;
	setp.eq.f32	%p49, %f65, 0f3F800000;
	and.pred  	%p1, %p48, %p49;
	mov.b32 	 %r233, %f342;
	xor.b32  	%r234, %r233, -2147483648;
	mov.b32 	 %f306, %r234;
	selp.f32	%f344, %f306, %f342, %p1;
	setp.eq.f32	%p50, %f64, 0f00000000;
	@%p50 bra 	BB0_65;
	bra.uni 	BB0_63;

BB0_65:
	add.f32 	%f309, %f64, %f64;
	selp.f32	%f344, %f309, 0f00000000, %p49;
	bra.uni 	BB0_66;

BB0_63:
	setp.geu.f32	%p51, %f64, 0f00000000;
	@%p51 bra 	BB0_66;

	cvt.rzi.f32.f32	%f308, %f280;
	setp.neu.f32	%p52, %f308, 0f3EE8BA2E;
	selp.f32	%f344, 0f7FFFFFFF, %f344, %p52;

BB0_66:
	add.f32 	%f310, %f66, 0f3EE8BA2E;
	mov.b32 	 %r235, %f310;
	setp.lt.s32	%p54, %r235, 2139095040;
	@%p54 bra 	BB0_71;

	setp.gtu.f32	%p55, %f66, 0f7F800000;
	@%p55 bra 	BB0_70;
	bra.uni 	BB0_68;

BB0_70:
	add.f32 	%f344, %f64, 0f3EE8BA2E;
	bra.uni 	BB0_71;

BB0_68:
	setp.neu.f32	%p56, %f66, 0f7F800000;
	@%p56 bra 	BB0_71;

	selp.f32	%f344, 0fFF800000, 0f7F800000, %p1;

BB0_71:
	mul.f32 	%f311, %f344, 0f437F0000;
	setp.eq.f32	%p57, %f64, 0f3F800000;
	selp.f32	%f312, 0f437F0000, %f311, %p57;
	cvt.rzi.u32.f32	%r236, %f312;
	cvt.u16.u32	%rs26, %r236;
	mov.u16 	%rs27, 255;
	st.v2.u8 	[%rd73], {%rs26, %rs27};

BB0_78:
	ret;
}


