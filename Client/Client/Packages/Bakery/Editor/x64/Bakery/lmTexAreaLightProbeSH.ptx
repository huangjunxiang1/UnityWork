//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 1 .b8 rnd_seeds2[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[44];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<148>;
	.reg .b16 	%rs<159>;
	.reg .f32 	%f<1253>;
	.reg .b32 	%r<417>;
	.reg .b64 	%rd<329>;


	mov.u64 	%rd328, __local_depot0;
	cvta.local.u64 	%SP, %rd328;
	ld.global.u32 	%r1, [lightMeshBufferSize];
	abs.s32 	%r2, %r1;
	ld.global.u32 	%r3, [samples];
	shl.b32 	%r4, %r3, 1;
	ld.global.v2.u32 	{%r103, %r104}, [pixelID];
	cvt.u64.u32	%rd24, %r103;
	cvt.u64.u32	%rd25, %r104;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r101, 2;
	mov.u32 	%r102, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r101, %r102, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r5, [%rd22];
	shr.u32 	%r107, %r5, 16;
	cvt.u16.u32	%rs1, %r107;
	and.b16  	%rs7, %rs1, 255;
	cvt.u16.u32	%rs8, %r5;
	or.b16  	%rs9, %rs8, %rs7;
	setp.eq.s16	%p7, %rs9, 0;
	mov.f32 	%f1114, 0f00000000;
	mov.f32 	%f1115, %f1114;
	mov.f32 	%f1116, %f1114;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs10, [%rd22+1];
	and.b16  	%rs12, %rs8, 255;
	cvt.rn.f32.u16	%f334, %rs12;
	div.rn.f32 	%f335, %f334, 0f437F0000;
	fma.rn.f32 	%f336, %f335, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f337, %rs10;
	div.rn.f32 	%f338, %f337, 0f437F0000;
	fma.rn.f32 	%f339, %f338, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f340, %rs7;
	div.rn.f32 	%f341, %f340, 0f437F0000;
	fma.rn.f32 	%f342, %f341, 0f40000000, 0fBF800000;
	mul.f32 	%f343, %f339, %f339;
	fma.rn.f32 	%f344, %f336, %f336, %f343;
	fma.rn.f32 	%f345, %f342, %f342, %f344;
	sqrt.rn.f32 	%f346, %f345;
	rcp.rn.f32 	%f347, %f346;
	mul.f32 	%f1114, %f336, %f347;
	mul.f32 	%f1115, %f339, %f347;
	mul.f32 	%f1116, %f342, %f347;

BB0_2:
	ld.global.v2.u32 	{%r108, %r109}, [pixelID];
	ld.global.v2.u32 	{%r111, %r112}, [tileInfo];
	add.s32 	%r6, %r108, %r111;
	add.s32 	%r7, %r109, %r112;
	setp.eq.f32	%p8, %f1115, 0f00000000;
	setp.eq.f32	%p9, %f1114, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f1116, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_140;
	bra.uni 	BB0_3;

BB0_140:
	ld.global.u32 	%r416, [imageEnabled];
	and.b32  	%r340, %r416, 1;
	setp.eq.b32	%p139, %r340, 1;
	@!%p139 bra 	BB0_142;
	bra.uni 	BB0_141;

BB0_141:
	cvt.u64.u32	%rd206, %r6;
	cvt.u64.u32	%rd207, %r7;
	mov.u64 	%rd210, image;
	cvta.global.u64 	%rd205, %rd210;
	mov.u64 	%rd209, 0;
	// inline asm
	call (%rd204), _rt_buffer_get_64, (%rd205, %r101, %r102, %rd206, %rd207, %rd209, %rd209);
	// inline asm
	mov.u16 	%rs91, 0;
	st.v4.u8 	[%rd204], {%rs91, %rs91, %rs91, %rs91};
	ld.global.u32 	%r416, [imageEnabled];

BB0_142:
	and.b32  	%r343, %r416, 8;
	setp.eq.s32	%p140, %r343, 0;
	@%p140 bra 	BB0_144;

	cvt.u64.u32	%rd214, %r7;
	cvt.u64.u32	%rd213, %r6;
	mov.u64 	%rd217, image_Mask;
	cvta.global.u64 	%rd212, %rd217;
	mov.u64 	%rd216, 0;
	// inline asm
	call (%rd211), _rt_buffer_get_64, (%rd212, %r101, %r101, %rd213, %rd214, %rd216, %rd216);
	// inline asm
	mov.f32 	%f1071, 0f00000000;
	cvt.rzi.u32.f32	%r346, %f1071;
	cvt.u16.u32	%rs92, %r346;
	mov.u16 	%rs93, 0;
	st.v2.u8 	[%rd211], {%rs92, %rs93};
	ld.global.u32 	%r416, [imageEnabled];

BB0_144:
	cvt.u64.u32	%rd20, %r6;
	cvt.u64.u32	%rd21, %r7;
	and.b32  	%r347, %r416, 4;
	setp.eq.s32	%p141, %r347, 0;
	@%p141 bra 	BB0_148;

	ld.global.u32 	%r348, [additive];
	setp.eq.s32	%p142, %r348, 0;
	@%p142 bra 	BB0_147;

	mov.u64 	%rd230, image_HDR;
	cvta.global.u64 	%rd219, %rd230;
	mov.u32 	%r352, 8;
	mov.u64 	%rd229, 0;
	// inline asm
	call (%rd218), _rt_buffer_get_64, (%rd219, %r101, %r352, %rd20, %rd21, %rd229, %rd229);
	// inline asm
	ld.v4.u16 	{%rs100, %rs101, %rs102, %rs103}, [%rd218];
	// inline asm
	{  cvt.f32.f16 %f1072, %rs100;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1073, %rs101;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1074, %rs102;}

	// inline asm
	// inline asm
	call (%rd224), _rt_buffer_get_64, (%rd219, %r101, %r352, %rd20, %rd21, %rd229, %rd229);
	// inline asm
	add.f32 	%f1075, %f1072, 0f00000000;
	add.f32 	%f1076, %f1073, 0f00000000;
	add.f32 	%f1077, %f1074, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f1077;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f1076;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f1075;}

	// inline asm
	mov.u16 	%rs104, 0;
	st.v4.u16 	[%rd224], {%rs97, %rs98, %rs99, %rs104};
	bra.uni 	BB0_148;

BB0_3:
	ld.global.v2.u32 	{%r121, %r122}, [pixelID];
	cvt.u64.u32	%rd31, %r121;
	cvt.u64.u32	%rd32, %r122;
	mov.u64 	%rd41, uvpos;
	cvta.global.u64 	%rd30, %rd41;
	mov.u32 	%r117, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r101, %r117, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f9, [%rd29+8];
	ld.f32 	%f8, [%rd29+4];
	ld.f32 	%f7, [%rd29];
	mul.f32 	%f364, %f7, 0f3456BF95;
	mul.f32 	%f365, %f8, 0f3456BF95;
	mul.f32 	%f366, %f9, 0f3456BF95;
	abs.f32 	%f367, %f1114;
	div.rn.f32 	%f368, %f364, %f367;
	abs.f32 	%f369, %f1115;
	div.rn.f32 	%f370, %f365, %f369;
	abs.f32 	%f371, %f1116;
	div.rn.f32 	%f372, %f366, %f371;
	abs.f32 	%f373, %f368;
	abs.f32 	%f374, %f370;
	abs.f32 	%f375, %f372;
	mov.f32 	%f376, 0f38D1B717;
	max.f32 	%f377, %f373, %f376;
	max.f32 	%f378, %f374, %f376;
	max.f32 	%f379, %f375, %f376;
	fma.rn.f32 	%f10, %f1114, %f377, %f7;
	fma.rn.f32 	%f11, %f1115, %f378, %f8;
	fma.rn.f32 	%f12, %f1116, %f379, %f9;
	ld.global.v2.u32 	{%r125, %r126}, [pixelID];
	cvt.u64.u32	%rd37, %r125;
	cvt.u64.u32	%rd38, %r126;
	mov.u64 	%rd42, rnd_seeds;
	cvta.global.u64 	%rd36, %rd42;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r101, %r102, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.u32 	%r392, [%rd35];
	mov.pred 	%p13, 0;
	mov.f32 	%f17, 0f00000000;
	mov.u32 	%r388, 0;
	setp.lt.s32	%p14, %r2, 1;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f13, [lightPointSize];
	mul.f32 	%f14, %f10, 0f3456BF95;
	mul.f32 	%f15, %f11, 0f3456BF95;
	mul.f32 	%f16, %f12, 0f3456BF95;
	mov.f32 	%f17, 0f00000000;
	mov.u32 	%r388, 0;
	abs.f32 	%f519, %f15;
	abs.f32 	%f520, %f14;
	max.f32 	%f521, %f520, %f519;
	abs.f32 	%f522, %f16;
	max.f32 	%f523, %f521, %f522;
	mov.f32 	%f18, %f17;
	mov.f32 	%f19, %f17;
	mov.f32 	%f20, %f17;
	mov.f32 	%f21, %f17;
	mov.f32 	%f22, %f17;
	mov.f32 	%f23, %f17;
	mov.f32 	%f24, %f17;
	mov.f32 	%f25, %f17;
	mov.f32 	%f26, %f17;
	mov.f32 	%f27, %f17;
	mov.f32 	%f28, %f17;
	mov.f32 	%f29, %f17;
	mov.f32 	%f30, %f17;
	mov.f32 	%f31, %f17;
	mov.f32 	%f32, %f17;

BB0_6:
	mul.lo.s32 	%r10, %r388, 3;
	cvt.s64.s32	%rd45, %r10;
	mov.u64 	%rd55, lightMeshBuffer;
	cvta.global.u64 	%rd44, %rd55;
	mov.u32 	%r130, 1;
	mov.u64 	%rd54, 0;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r130, %r117, %rd45, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f396, [%rd43];
	sub.f32 	%f397, %f396, %f7;
	ld.f32 	%f398, [%rd43+4];
	sub.f32 	%f399, %f398, %f8;
	ld.f32 	%f400, [%rd43+8];
	sub.f32 	%f401, %f400, %f9;
	mul.f32 	%f402, %f399, %f399;
	fma.rn.f32 	%f403, %f397, %f397, %f402;
	fma.rn.f32 	%f404, %f401, %f401, %f403;
	sqrt.rn.f32 	%f33, %f404;
	rcp.rn.f32 	%f405, %f33;
	mul.f32 	%f34, %f397, %f405;
	mul.f32 	%f35, %f399, %f405;
	mul.f32 	%f36, %f401, %f405;
	mul.f32 	%f406, %f33, %f33;
	div.rn.f32 	%f37, %f13, %f406;
	ld.global.v2.u32 	{%r134, %r135}, [pixelID];
	cvt.u64.u32	%rd56, %r135;
	cvt.u64.u32	%rd57, %r134;
	and.b64  	%rd51, %rd57, 255;
	and.b64  	%rd52, %rd56, 255;
	mov.u64 	%rd58, rnd_seeds2;
	cvta.global.u64 	%rd50, %rd58;
	mov.u32 	%r133, 3;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r101, %r133, %rd51, %rd52, %rd54, %rd54);
	// inline asm
	setp.eq.s32	%p15, %r3, 0;
	@%p15 bra 	BB0_8;

	ld.u8 	%rs14, [%rd49];
	cvt.rn.f32.u16	%f407, %rs14;
	div.rn.f32 	%f408, %f407, 0fC37F0000;
	fma.rn.f32 	%f409, %f408, 0f3F333333, 0f3F800000;
	setp.gt.f32	%p17, %f37, %f409;
	mov.pred 	%p147, -1;
	@%p17 bra 	BB0_23;

BB0_8:
	ld.global.f32 	%f412, [lightInvCutoff];
	mul.f32 	%f38, %f33, %f412;
	mov.f32 	%f416, 0f40800000;
	abs.f32 	%f40, %f38;
	setp.lt.f32	%p18, %f40, 0f00800000;
	mul.f32 	%f418, %f40, 0f4B800000;
	selp.f32	%f419, 0fC3170000, 0fC2FE0000, %p18;
	selp.f32	%f420, %f418, %f40, %p18;
	mov.b32 	 %r138, %f420;
	and.b32  	%r139, %r138, 8388607;
	or.b32  	%r140, %r139, 1065353216;
	mov.b32 	 %f421, %r140;
	shr.u32 	%r141, %r138, 23;
	cvt.rn.f32.u32	%f422, %r141;
	add.f32 	%f423, %f419, %f422;
	setp.gt.f32	%p19, %f421, 0f3FB504F3;
	mul.f32 	%f424, %f421, 0f3F000000;
	add.f32 	%f425, %f423, 0f3F800000;
	selp.f32	%f426, %f424, %f421, %p19;
	selp.f32	%f427, %f425, %f423, %p19;
	add.f32 	%f428, %f426, 0fBF800000;
	add.f32 	%f411, %f426, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f410,%f411;
	// inline asm
	add.f32 	%f429, %f428, %f428;
	mul.f32 	%f430, %f410, %f429;
	mul.f32 	%f431, %f430, %f430;
	mov.f32 	%f432, 0f3C4CAF63;
	mov.f32 	%f433, 0f3B18F0FE;
	fma.rn.f32 	%f434, %f433, %f431, %f432;
	mov.f32 	%f435, 0f3DAAAABD;
	fma.rn.f32 	%f436, %f434, %f431, %f435;
	mul.rn.f32 	%f437, %f436, %f431;
	mul.rn.f32 	%f438, %f437, %f430;
	sub.f32 	%f439, %f428, %f430;
	neg.f32 	%f440, %f430;
	add.f32 	%f441, %f439, %f439;
	fma.rn.f32 	%f442, %f440, %f428, %f441;
	mul.rn.f32 	%f443, %f410, %f442;
	add.f32 	%f444, %f438, %f430;
	sub.f32 	%f445, %f430, %f444;
	add.f32 	%f446, %f438, %f445;
	add.f32 	%f447, %f443, %f446;
	add.f32 	%f448, %f444, %f447;
	sub.f32 	%f449, %f444, %f448;
	add.f32 	%f450, %f447, %f449;
	mov.f32 	%f451, 0f3F317200;
	mul.rn.f32 	%f452, %f427, %f451;
	mov.f32 	%f453, 0f35BFBE8E;
	mul.rn.f32 	%f454, %f427, %f453;
	add.f32 	%f455, %f452, %f448;
	sub.f32 	%f456, %f452, %f455;
	add.f32 	%f457, %f448, %f456;
	add.f32 	%f458, %f450, %f457;
	add.f32 	%f459, %f454, %f458;
	add.f32 	%f460, %f455, %f459;
	sub.f32 	%f461, %f455, %f460;
	add.f32 	%f462, %f459, %f461;
	mul.rn.f32 	%f463, %f416, %f460;
	neg.f32 	%f464, %f463;
	fma.rn.f32 	%f465, %f416, %f460, %f464;
	fma.rn.f32 	%f466, %f416, %f462, %f465;
	mov.f32 	%f467, 0f00000000;
	fma.rn.f32 	%f468, %f467, %f460, %f466;
	add.rn.f32 	%f469, %f463, %f468;
	neg.f32 	%f470, %f469;
	add.rn.f32 	%f471, %f463, %f470;
	add.rn.f32 	%f472, %f471, %f468;
	mov.b32 	 %r142, %f469;
	setp.eq.s32	%p20, %r142, 1118925336;
	add.s32 	%r143, %r142, -1;
	mov.b32 	 %f473, %r143;
	add.f32 	%f474, %f472, 0f37000000;
	selp.f32	%f475, %f473, %f469, %p20;
	selp.f32	%f41, %f474, %f472, %p20;
	mul.f32 	%f476, %f475, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f477, %f476;
	mov.f32 	%f478, 0fBF317200;
	fma.rn.f32 	%f479, %f477, %f478, %f475;
	mov.f32 	%f480, 0fB5BFBE8E;
	fma.rn.f32 	%f481, %f477, %f480, %f479;
	mul.f32 	%f482, %f481, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f483, %f482;
	add.f32 	%f484, %f477, 0f00000000;
	ex2.approx.f32 	%f485, %f484;
	mul.f32 	%f486, %f483, %f485;
	setp.lt.f32	%p21, %f475, 0fC2D20000;
	selp.f32	%f487, 0f00000000, %f486, %p21;
	setp.gt.f32	%p22, %f475, 0f42D20000;
	selp.f32	%f1133, 0f7F800000, %f487, %p22;
	setp.eq.f32	%p23, %f1133, 0f7F800000;
	@%p23 bra 	BB0_10;

	fma.rn.f32 	%f1133, %f1133, %f41, %f1133;

BB0_10:
	mov.f32 	%f1112, 0f40000000;
	cvt.rzi.f32.f32	%f1111, %f1112;
	add.f32 	%f1110, %f1111, %f1111;
	mov.f32 	%f1109, 0f40800000;
	sub.f32 	%f1108, %f1109, %f1110;
	abs.f32 	%f1107, %f1108;
	setp.lt.f32	%p24, %f38, 0f00000000;
	setp.eq.f32	%p25, %f1107, 0f3F800000;
	and.pred  	%p1, %p24, %p25;
	mov.b32 	 %r144, %f1133;
	xor.b32  	%r145, %r144, -2147483648;
	mov.b32 	 %f488, %r145;
	selp.f32	%f1135, %f488, %f1133, %p1;
	setp.eq.f32	%p26, %f38, 0f00000000;
	@%p26 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f491, %f38, %f38;
	selp.f32	%f1135, %f491, 0f00000000, %p25;
	bra.uni 	BB0_14;

BB0_11:
	setp.geu.f32	%p27, %f38, 0f00000000;
	@%p27 bra 	BB0_14;

	mov.f32 	%f1113, 0f40800000;
	cvt.rzi.f32.f32	%f490, %f1113;
	setp.neu.f32	%p28, %f490, 0f40800000;
	selp.f32	%f1135, 0f7FFFFFFF, %f1135, %p28;

BB0_14:
	add.f32 	%f492, %f40, 0f40800000;
	mov.b32 	 %r146, %f492;
	setp.lt.s32	%p30, %r146, 2139095040;
	@%p30 bra 	BB0_19;

	setp.gtu.f32	%p31, %f40, 0f7F800000;
	@%p31 bra 	BB0_18;
	bra.uni 	BB0_16;

BB0_18:
	add.f32 	%f1135, %f38, 0f40800000;
	bra.uni 	BB0_19;

BB0_16:
	setp.neu.f32	%p32, %f40, 0f7F800000;
	@%p32 bra 	BB0_19;

	selp.f32	%f1135, 0fFF800000, 0f7F800000, %p1;

BB0_19:
	mov.u64 	%rd320, 0;
	mov.u32 	%r384, 1;
	mov.u64 	%rd319, lightMeshBuffer;
	cvta.global.u64 	%rd318, %rd319;
	mul.lo.s32 	%r383, %r388, 3;
	mov.f32 	%f493, 0f3F800000;
	sub.f32 	%f494, %f493, %f1135;
	setp.eq.f32	%p33, %f38, 0f3F800000;
	selp.f32	%f495, 0f00000000, %f494, %p33;
	cvt.sat.f32.f32	%f496, %f495;
	mul.f32 	%f497, %f37, %f496;
	add.s32 	%r149, %r383, 1;
	cvt.s64.s32	%rd61, %r149;
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd318, %r384, %r117, %rd61, %rd320, %rd320, %rd320);
	// inline asm
	ld.f32 	%f498, [%rd59];
	mul.f32 	%f499, %f34, %f498;
	ld.f32 	%f500, [%rd59+4];
	mul.f32 	%f501, %f35, %f500;
	neg.f32 	%f502, %f501;
	sub.f32 	%f503, %f502, %f499;
	ld.f32 	%f504, [%rd59+8];
	mul.f32 	%f505, %f36, %f504;
	sub.f32 	%f506, %f503, %f505;
	cvt.sat.f32.f32	%f507, %f506;
	mul.f32 	%f52, %f497, %f507;
	mul.f32 	%f508, %f1115, %f35;
	fma.rn.f32 	%f509, %f1114, %f34, %f508;
	fma.rn.f32 	%f53, %f1116, %f36, %f509;
	setp.leu.f32	%p34, %f52, 0f3727C5AC;
	@%p34 bra 	BB0_21;

	mov.u64 	%rd323, 0;
	mov.u32 	%r386, 1;
	mov.u64 	%rd322, lightMeshBuffer;
	cvta.global.u64 	%rd321, %rd322;
	mul.lo.s32 	%r385, %r388, 3;
	cvt.sat.f32.f32	%f518, %f53;
	add.u64 	%rd66, %SP, 12;
	cvta.to.local.u64 	%rd73, %rd66;
	max.f32 	%f516, %f523, %f376;
	sub.f32 	%f517, %f33, %f516;
	mov.u32 	%r155, 1065353216;
	st.local.u32 	[%rd73], %r155;
	ld.global.u32 	%r150, [root];
	// inline asm
	call _rt_trace_64, (%r150, %f10, %f11, %f12, %f34, %f35, %f36, %r386, %f516, %f517, %rd66, %r102);
	// inline asm
	add.s32 	%r156, %r385, 2;
	cvt.s64.s32	%rd69, %r156;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd321, %r386, %r117, %rd69, %rd323, %rd323, %rd323);
	// inline asm
	ld.f32 	%f525, [%rd67];
	ld.local.f32 	%f526, [%rd73];
	mul.f32 	%f527, %f526, %f525;
	ld.f32 	%f528, [%rd67+4];
	mul.f32 	%f529, %f526, %f528;
	ld.f32 	%f530, [%rd67+8];
	mul.f32 	%f531, %f526, %f530;
	mul.f32 	%f532, %f52, 0f3EA2F983;
	mul.f32 	%f533, %f532, %f527;
	mul.f32 	%f534, %f532, %f529;
	mul.f32 	%f535, %f532, %f531;
	fma.rn.f32 	%f20, %f518, %f533, %f20;
	fma.rn.f32 	%f19, %f518, %f534, %f19;
	fma.rn.f32 	%f18, %f518, %f535, %f18;
	fma.rn.f32 	%f26, %f34, %f533, %f26;
	fma.rn.f32 	%f25, %f34, %f534, %f25;
	fma.rn.f32 	%f24, %f34, %f535, %f24;
	fma.rn.f32 	%f29, %f35, %f533, %f29;
	fma.rn.f32 	%f28, %f35, %f534, %f28;
	fma.rn.f32 	%f27, %f35, %f535, %f27;
	fma.rn.f32 	%f32, %f36, %f533, %f32;
	fma.rn.f32 	%f31, %f36, %f534, %f31;
	fma.rn.f32 	%f30, %f36, %f535, %f30;
	add.f32 	%f23, %f23, %f533;
	add.f32 	%f22, %f22, %f534;
	add.f32 	%f21, %f21, %f535;
	add.f32 	%f17, %f17, %f526;

BB0_21:
	add.s32 	%r388, %r388, 1;
	setp.lt.s32	%p36, %r388, %r2;
	@%p36 bra 	BB0_6;
	bra.uni 	BB0_22;

BB0_4:
	mov.f32 	%f18, %f17;
	mov.f32 	%f19, %f17;
	mov.f32 	%f20, %f17;
	mov.f32 	%f21, %f17;
	mov.f32 	%f22, %f17;
	mov.f32 	%f23, %f17;
	mov.f32 	%f24, %f17;
	mov.f32 	%f25, %f17;
	mov.f32 	%f26, %f17;
	mov.f32 	%f27, %f17;
	mov.f32 	%f28, %f17;
	mov.f32 	%f29, %f17;
	mov.f32 	%f30, %f17;
	mov.f32 	%f31, %f17;
	mov.f32 	%f32, %f17;

BB0_22:
	mov.pred 	%p147, %p13;

BB0_23:
	cvt.rn.f32.s32	%f536, %r388;
	mov.f32 	%f537, 0f3F800000;
	max.f32 	%f538, %f536, %f537;
	rcp.rn.f32 	%f539, %f538;
	mul.f32 	%f1237, %f20, %f539;
	mul.f32 	%f1238, %f19, %f539;
	mul.f32 	%f1239, %f18, %f539;
	div.rn.f32 	%f1240, %f17, %f538;
	mul.f32 	%f1234, %f23, %f539;
	mul.f32 	%f1235, %f22, %f539;
	mul.f32 	%f1236, %f21, %f539;
	mul.f32 	%f1231, %f26, %f539;
	mul.f32 	%f1232, %f25, %f539;
	mul.f32 	%f1233, %f24, %f539;
	mul.f32 	%f1228, %f29, %f539;
	mul.f32 	%f1229, %f28, %f539;
	mul.f32 	%f1230, %f27, %f539;
	mul.f32 	%f1225, %f32, %f539;
	mul.f32 	%f1226, %f31, %f539;
	mul.f32 	%f1227, %f30, %f539;
	@!%p147 bra 	BB0_76;
	bra.uni 	BB0_24;

BB0_24:
	mov.f32 	%f554, 0f00000000;
	setp.lt.s32	%p37, %r3, 1;
	mov.f32 	%f1183, %f554;
	mov.f32 	%f1184, %f554;
	mov.f32 	%f1185, %f554;
	mov.f32 	%f1186, %f554;
	mov.f32 	%f1187, %f554;
	mov.f32 	%f1188, %f554;
	mov.f32 	%f1189, %f554;
	mov.f32 	%f1190, %f554;
	mov.f32 	%f1191, %f554;
	mov.f32 	%f1192, %f554;
	mov.f32 	%f1193, %f554;
	mov.f32 	%f1194, %f554;
	mov.f32 	%f1195, %f554;
	mov.f32 	%f1196, %f554;
	mov.f32 	%f1197, %f554;
	@%p37 bra 	BB0_75;

	cvt.rn.f32.s32	%f570, %r4;
	rcp.rn.f32 	%f118, %f570;
	add.u64 	%rd75, %SP, 16;
	cvta.to.local.u64 	%rd3, %rd75;
	mul.f32 	%f119, %f10, 0f3456BF95;
	mul.f32 	%f120, %f11, 0f3456BF95;
	mul.f32 	%f121, %f12, 0f3456BF95;
	add.u64 	%rd76, %SP, 0;
	cvta.to.local.u64 	%rd4, %rd76;
	mov.f32 	%f1183, 0f00000000;
	mov.u32 	%r157, 0;
	abs.f32 	%f571, %f120;
	abs.f32 	%f572, %f119;
	max.f32 	%f573, %f572, %f571;
	abs.f32 	%f574, %f121;
	max.f32 	%f575, %f573, %f574;
	mov.u32 	%r389, %r157;
	mov.f32 	%f1184, %f1183;
	mov.f32 	%f1185, %f1183;
	mov.f32 	%f1186, %f1183;
	mov.f32 	%f1187, %f1183;
	mov.f32 	%f1188, %f1183;
	mov.f32 	%f1189, %f1183;
	mov.f32 	%f1190, %f1183;
	mov.f32 	%f1191, %f1183;
	mov.f32 	%f1192, %f1183;
	mov.f32 	%f1193, %f1183;
	mov.f32 	%f1194, %f1183;
	mov.f32 	%f1195, %f1183;
	mov.f32 	%f1196, %f1183;
	mov.f32 	%f1197, %f1183;

BB0_26:
	cvt.rn.f32.s32	%f137, %r389;
	max.f32 	%f138, %f575, %f376;
	mov.u32 	%r391, %r157;

BB0_27:
	mad.lo.s32 	%r159, %r392, 1664525, 1013904223;
	and.b32  	%r160, %r159, 16777215;
	cvt.rn.f32.u32	%f577, %r160;
	fma.rn.f32 	%f578, %f577, 0f33800000, %f137;
	mul.f32 	%f579, %f118, %f578;
	mad.lo.s32 	%r392, %r159, 1664525, 1013904223;
	and.b32  	%r161, %r392, 16777215;
	cvt.rn.f32.u32	%f580, %r161;
	cvt.rn.f32.s32	%f581, %r391;
	fma.rn.f32 	%f582, %f580, 0f33800000, %f581;
	mul.f32 	%f583, %f118, %f582;
	fma.rn.f32 	%f154, %f579, 0fC0000000, 0f3F800000;
	mul.f32 	%f584, %f154, %f154;
	sub.f32 	%f586, %f537, %f584;
	mov.f32 	%f587, 0f00000000;
	max.f32 	%f588, %f587, %f586;
	sqrt.rn.f32 	%f155, %f588;
	mul.f32 	%f1204, %f583, 0f40C90FDB;
	abs.f32 	%f157, %f1204;
	setp.neu.f32	%p38, %f157, 0f7F800000;
	mov.f32 	%f1198, %f1204;
	@%p38 bra 	BB0_29;

	mul.rn.f32 	%f1198, %f1204, %f587;

BB0_29:
	mul.f32 	%f590, %f1198, 0f3F22F983;
	cvt.rni.s32.f32	%r402, %f590;
	cvt.rn.f32.s32	%f591, %r402;
	neg.f32 	%f592, %f591;
	mov.f32 	%f593, 0f3FC90FDA;
	fma.rn.f32 	%f594, %f592, %f593, %f1198;
	mov.f32 	%f595, 0f33A22168;
	fma.rn.f32 	%f596, %f592, %f595, %f594;
	mov.f32 	%f597, 0f27C234C5;
	fma.rn.f32 	%f1199, %f592, %f597, %f596;
	abs.f32 	%f598, %f1198;
	setp.leu.f32	%p39, %f598, 0f47CE4780;
	@%p39 bra 	BB0_40;

	mov.b32 	 %r19, %f1198;
	shr.u32 	%r20, %r19, 23;
	shl.b32 	%r164, %r19, 8;
	or.b32  	%r21, %r164, -2147483648;
	mov.u32 	%r393, 0;
	mov.u64 	%rd325, 0;
	mov.u64 	%rd324, %rd3;
	mov.u32 	%r394, %r393;

BB0_31:
	.pragma "nounroll";
	shl.b64 	%rd78, %rd325, 2;
	mov.u64 	%rd79, __cudart_i2opi_f;
	add.s64 	%rd80, %rd79, %rd78;
	ld.const.u32 	%r167, [%rd80];
	// inline asm
	{
	mad.lo.cc.u32   %r165, %r167, %r21, %r394;
	madc.hi.u32     %r394, %r167, %r21,  0;
	}
	// inline asm
	st.local.u32 	[%rd324], %r165;
	add.s32 	%r393, %r393, 1;
	cvt.s64.s32	%rd325, %r393;
	mul.wide.s32 	%rd81, %r393, 4;
	add.s64 	%rd324, %rd3, %rd81;
	setp.ne.s32	%p40, %r393, 6;
	@%p40 bra 	BB0_31;

	and.b32  	%r170, %r20, 255;
	add.s32 	%r171, %r170, -128;
	shr.u32 	%r172, %r171, 5;
	and.b32  	%r26, %r19, -2147483648;
	st.local.u32 	[%rd3+24], %r394;
	mov.u32 	%r173, 6;
	sub.s32 	%r174, %r173, %r172;
	mul.wide.s32 	%rd82, %r174, 4;
	add.s64 	%rd10, %rd3, %rd82;
	ld.local.u32 	%r395, [%rd10];
	ld.local.u32 	%r396, [%rd10+-4];
	and.b32  	%r29, %r20, 31;
	setp.eq.s32	%p41, %r29, 0;
	@%p41 bra 	BB0_34;

	mov.u32 	%r175, 32;
	sub.s32 	%r176, %r175, %r29;
	shr.u32 	%r177, %r396, %r176;
	shl.b32 	%r178, %r395, %r29;
	add.s32 	%r395, %r177, %r178;
	ld.local.u32 	%r179, [%rd10+-8];
	shr.u32 	%r180, %r179, %r176;
	shl.b32 	%r181, %r396, %r29;
	add.s32 	%r396, %r180, %r181;

BB0_34:
	shr.u32 	%r182, %r396, 30;
	shl.b32 	%r183, %r395, 2;
	add.s32 	%r397, %r182, %r183;
	shl.b32 	%r35, %r396, 2;
	shr.u32 	%r184, %r397, 31;
	shr.u32 	%r185, %r395, 30;
	add.s32 	%r36, %r184, %r185;
	setp.eq.s32	%p42, %r184, 0;
	@%p42 bra 	BB0_35;
	bra.uni 	BB0_36;

BB0_35:
	mov.u32 	%r398, %r26;
	mov.u32 	%r399, %r35;
	bra.uni 	BB0_37;

BB0_36:
	not.b32 	%r186, %r397;
	neg.s32 	%r399, %r35;
	setp.eq.s32	%p43, %r35, 0;
	selp.u32	%r187, 1, 0, %p43;
	add.s32 	%r397, %r187, %r186;
	xor.b32  	%r398, %r26, -2147483648;

BB0_37:
	clz.b32 	%r401, %r397;
	setp.eq.s32	%p44, %r401, 0;
	shl.b32 	%r188, %r397, %r401;
	mov.u32 	%r189, 32;
	sub.s32 	%r190, %r189, %r401;
	shr.u32 	%r191, %r399, %r190;
	add.s32 	%r192, %r191, %r188;
	selp.b32	%r44, %r397, %r192, %p44;
	mov.u32 	%r193, -921707870;
	mul.hi.u32 	%r400, %r44, %r193;
	setp.eq.s32	%p45, %r26, 0;
	neg.s32 	%r194, %r36;
	selp.b32	%r402, %r36, %r194, %p45;
	setp.lt.s32	%p46, %r400, 1;
	@%p46 bra 	BB0_39;

	mul.lo.s32 	%r195, %r44, -921707870;
	shr.u32 	%r196, %r195, 31;
	shl.b32 	%r197, %r400, 1;
	add.s32 	%r400, %r196, %r197;
	add.s32 	%r401, %r401, 1;

BB0_39:
	mov.u32 	%r198, 126;
	sub.s32 	%r199, %r198, %r401;
	shl.b32 	%r200, %r199, 23;
	add.s32 	%r201, %r400, 1;
	shr.u32 	%r202, %r201, 7;
	add.s32 	%r203, %r202, 1;
	shr.u32 	%r204, %r203, 1;
	add.s32 	%r205, %r204, %r200;
	or.b32  	%r206, %r205, %r398;
	mov.b32 	 %f1199, %r206;

BB0_40:
	mul.rn.f32 	%f163, %f1199, %f1199;
	add.s32 	%r52, %r402, 1;
	and.b32  	%r53, %r52, 1;
	setp.eq.s32	%p47, %r53, 0;
	@%p47 bra 	BB0_42;
	bra.uni 	BB0_41;

BB0_42:
	mov.f32 	%f601, 0f3C08839E;
	mov.f32 	%f602, 0fB94CA1F9;
	fma.rn.f32 	%f1200, %f602, %f163, %f601;
	bra.uni 	BB0_43;

BB0_41:
	mov.f32 	%f599, 0fBAB6061A;
	mov.f32 	%f600, 0f37CCF5CE;
	fma.rn.f32 	%f1200, %f600, %f163, %f599;

BB0_43:
	@%p47 bra 	BB0_45;
	bra.uni 	BB0_44;

BB0_45:
	mov.f32 	%f606, 0fBE2AAAA3;
	fma.rn.f32 	%f607, %f1200, %f163, %f606;
	fma.rn.f32 	%f1201, %f607, %f163, %f587;
	bra.uni 	BB0_46;

BB0_44:
	mov.f32 	%f603, 0f3D2AAAA5;
	fma.rn.f32 	%f604, %f1200, %f163, %f603;
	mov.f32 	%f605, 0fBF000000;
	fma.rn.f32 	%f1201, %f604, %f163, %f605;

BB0_46:
	fma.rn.f32 	%f1202, %f1201, %f1199, %f1199;
	@%p47 bra 	BB0_48;

	fma.rn.f32 	%f1202, %f1201, %f163, %f537;

BB0_48:
	and.b32  	%r207, %r52, 2;
	setp.eq.s32	%p50, %r207, 0;
	@%p50 bra 	BB0_50;

	mov.f32 	%f611, 0fBF800000;
	fma.rn.f32 	%f1202, %f1202, %f611, %f587;

BB0_50:
	@%p38 bra 	BB0_52;

	mul.rn.f32 	%f1204, %f1204, %f587;

BB0_52:
	mul.f32 	%f613, %f1204, 0f3F22F983;
	cvt.rni.s32.f32	%r412, %f613;
	cvt.rn.f32.s32	%f614, %r412;
	neg.f32 	%f615, %f614;
	fma.rn.f32 	%f617, %f615, %f593, %f1204;
	fma.rn.f32 	%f619, %f615, %f595, %f617;
	fma.rn.f32 	%f1205, %f615, %f597, %f619;
	abs.f32 	%f621, %f1204;
	setp.leu.f32	%p52, %f621, 0f47CE4780;
	@%p52 bra 	BB0_63;

	mov.b32 	 %r55, %f1204;
	shr.u32 	%r56, %r55, 23;
	shl.b32 	%r210, %r55, 8;
	or.b32  	%r57, %r210, -2147483648;
	mov.u32 	%r403, 0;
	mov.u64 	%rd326, %rd3;
	mov.u64 	%rd327, %rd27;
	mov.u32 	%r404, %r403;

BB0_54:
	.pragma "nounroll";
	shl.b64 	%rd84, %rd327, 2;
	mov.u64 	%rd85, __cudart_i2opi_f;
	add.s64 	%rd86, %rd85, %rd84;
	ld.const.u32 	%r213, [%rd86];
	// inline asm
	{
	mad.lo.cc.u32   %r211, %r213, %r57, %r404;
	madc.hi.u32     %r404, %r213, %r57,  0;
	}
	// inline asm
	st.local.u32 	[%rd326], %r211;
	add.s32 	%r403, %r403, 1;
	cvt.s64.s32	%rd327, %r403;
	mul.wide.s32 	%rd87, %r403, 4;
	add.s64 	%rd326, %rd3, %rd87;
	setp.ne.s32	%p53, %r403, 6;
	@%p53 bra 	BB0_54;

	and.b32  	%r216, %r56, 255;
	add.s32 	%r217, %r216, -128;
	shr.u32 	%r218, %r217, 5;
	and.b32  	%r62, %r55, -2147483648;
	st.local.u32 	[%rd3+24], %r404;
	mov.u32 	%r219, 6;
	sub.s32 	%r220, %r219, %r218;
	mul.wide.s32 	%rd88, %r220, 4;
	add.s64 	%rd16, %rd3, %rd88;
	ld.local.u32 	%r405, [%rd16];
	ld.local.u32 	%r406, [%rd16+-4];
	and.b32  	%r65, %r56, 31;
	setp.eq.s32	%p54, %r65, 0;
	@%p54 bra 	BB0_57;

	mov.u32 	%r221, 32;
	sub.s32 	%r222, %r221, %r65;
	shr.u32 	%r223, %r406, %r222;
	shl.b32 	%r224, %r405, %r65;
	add.s32 	%r405, %r223, %r224;
	ld.local.u32 	%r225, [%rd16+-8];
	shr.u32 	%r226, %r225, %r222;
	shl.b32 	%r227, %r406, %r65;
	add.s32 	%r406, %r226, %r227;

BB0_57:
	shr.u32 	%r228, %r406, 30;
	shl.b32 	%r229, %r405, 2;
	add.s32 	%r407, %r228, %r229;
	shl.b32 	%r71, %r406, 2;
	shr.u32 	%r230, %r407, 31;
	shr.u32 	%r231, %r405, 30;
	add.s32 	%r72, %r230, %r231;
	setp.eq.s32	%p55, %r230, 0;
	@%p55 bra 	BB0_58;
	bra.uni 	BB0_59;

BB0_58:
	mov.u32 	%r408, %r62;
	mov.u32 	%r409, %r71;
	bra.uni 	BB0_60;

BB0_59:
	not.b32 	%r232, %r407;
	neg.s32 	%r409, %r71;
	setp.eq.s32	%p56, %r71, 0;
	selp.u32	%r233, 1, 0, %p56;
	add.s32 	%r407, %r233, %r232;
	xor.b32  	%r408, %r62, -2147483648;

BB0_60:
	clz.b32 	%r411, %r407;
	setp.eq.s32	%p57, %r411, 0;
	shl.b32 	%r234, %r407, %r411;
	mov.u32 	%r235, 32;
	sub.s32 	%r236, %r235, %r411;
	shr.u32 	%r237, %r409, %r236;
	add.s32 	%r238, %r237, %r234;
	selp.b32	%r80, %r407, %r238, %p57;
	mov.u32 	%r239, -921707870;
	mul.hi.u32 	%r410, %r80, %r239;
	setp.eq.s32	%p58, %r62, 0;
	neg.s32 	%r240, %r72;
	selp.b32	%r412, %r72, %r240, %p58;
	setp.lt.s32	%p59, %r410, 1;
	@%p59 bra 	BB0_62;

	mul.lo.s32 	%r241, %r80, -921707870;
	shr.u32 	%r242, %r241, 31;
	shl.b32 	%r243, %r410, 1;
	add.s32 	%r410, %r242, %r243;
	add.s32 	%r411, %r411, 1;

BB0_62:
	mov.u32 	%r244, 126;
	sub.s32 	%r245, %r244, %r411;
	shl.b32 	%r246, %r245, 23;
	add.s32 	%r247, %r410, 1;
	shr.u32 	%r248, %r247, 7;
	add.s32 	%r249, %r248, 1;
	shr.u32 	%r250, %r249, 1;
	add.s32 	%r251, %r250, %r246;
	or.b32  	%r252, %r251, %r408;
	mov.b32 	 %f1205, %r252;

BB0_63:
	mul.rn.f32 	%f180, %f1205, %f1205;
	and.b32  	%r88, %r412, 1;
	setp.eq.s32	%p60, %r88, 0;
	@%p60 bra 	BB0_65;
	bra.uni 	BB0_64;

BB0_65:
	mov.f32 	%f624, 0f3C08839E;
	mov.f32 	%f625, 0fB94CA1F9;
	fma.rn.f32 	%f1206, %f625, %f180, %f624;
	bra.uni 	BB0_66;

BB0_64:
	mov.f32 	%f622, 0fBAB6061A;
	mov.f32 	%f623, 0f37CCF5CE;
	fma.rn.f32 	%f1206, %f623, %f180, %f622;

BB0_66:
	@%p60 bra 	BB0_68;
	bra.uni 	BB0_67;

BB0_68:
	mov.f32 	%f629, 0fBE2AAAA3;
	fma.rn.f32 	%f630, %f1206, %f180, %f629;
	fma.rn.f32 	%f1207, %f630, %f180, %f587;
	bra.uni 	BB0_69;

BB0_67:
	mov.f32 	%f626, 0f3D2AAAA5;
	fma.rn.f32 	%f627, %f1206, %f180, %f626;
	mov.f32 	%f628, 0fBF000000;
	fma.rn.f32 	%f1207, %f627, %f180, %f628;

BB0_69:
	fma.rn.f32 	%f1208, %f1207, %f1205, %f1205;
	@%p60 bra 	BB0_71;

	fma.rn.f32 	%f1208, %f1207, %f180, %f537;

BB0_71:
	and.b32  	%r253, %r412, 2;
	setp.eq.s32	%p63, %r253, 0;
	@%p63 bra 	BB0_73;

	mov.f32 	%f634, 0fBF800000;
	fma.rn.f32 	%f1208, %f1208, %f634, %f587;

BB0_73:
	mul.f32 	%f638, %f155, %f1202;
	mov.u32 	%r255, 0;
	st.local.u32 	[%rd4+8], %r255;
	st.local.u32 	[%rd4+4], %r255;
	st.local.u32 	[%rd4], %r255;
	ld.global.u32 	%r254, [root];
	mul.f32 	%f639, %f155, %f1208;
	mov.f32 	%f642, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r254, %f10, %f11, %f12, %f638, %f639, %f154, %r255, %f138, %f642, %rd76, %r117);
	// inline asm
	ld.local.f32 	%f643, [%rd4];
	max.f32 	%f645, %f643, %f587;
	ld.local.f32 	%f646, [%rd4+4];
	max.f32 	%f647, %f646, %f587;
	ld.local.f32 	%f648, [%rd4+8];
	max.f32 	%f649, %f648, %f587;
	fma.rn.f32 	%f1191, %f638, %f645, %f1191;
	fma.rn.f32 	%f1190, %f638, %f647, %f1190;
	fma.rn.f32 	%f1189, %f638, %f649, %f1189;
	fma.rn.f32 	%f1194, %f639, %f645, %f1194;
	fma.rn.f32 	%f1193, %f639, %f647, %f1193;
	fma.rn.f32 	%f1192, %f639, %f649, %f1192;
	fma.rn.f32 	%f1197, %f154, %f645, %f1197;
	fma.rn.f32 	%f1196, %f154, %f647, %f1196;
	fma.rn.f32 	%f1195, %f154, %f649, %f1195;
	add.f32 	%f1188, %f1188, %f645;
	add.f32 	%f1187, %f1187, %f647;
	add.f32 	%f1186, %f1186, %f649;
	mul.f32 	%f650, %f1115, %f639;
	fma.rn.f32 	%f651, %f1114, %f638, %f650;
	fma.rn.f32 	%f652, %f1116, %f154, %f651;
	cvt.sat.f32.f32	%f653, %f652;
	fma.rn.f32 	%f1185, %f645, %f653, %f1185;
	fma.rn.f32 	%f1184, %f647, %f653, %f1184;
	fma.rn.f32 	%f1183, %f649, %f653, %f1183;
	add.s32 	%r391, %r391, 1;
	setp.lt.s32	%p64, %r391, %r4;
	@%p64 bra 	BB0_27;

	add.s32 	%r389, %r389, 1;
	setp.lt.s32	%p65, %r389, %r4;
	@%p65 bra 	BB0_26;

BB0_75:
	mul.lo.s32 	%r257, %r4, %r4;
	cvt.rn.f32.s32	%f654, %r257;
	rcp.rn.f32 	%f655, %f654;
	mul.f32 	%f656, %f1185, %f655;
	mul.f32 	%f657, %f1184, %f655;
	mul.f32 	%f658, %f1183, %f655;
	div.rn.f32 	%f1240, %f554, %f654;
	mul.f32 	%f1234, %f1188, %f655;
	mul.f32 	%f1235, %f1187, %f655;
	mul.f32 	%f1236, %f1186, %f655;
	mul.f32 	%f1231, %f1191, %f655;
	mul.f32 	%f1232, %f1190, %f655;
	mul.f32 	%f1233, %f1189, %f655;
	mul.f32 	%f1228, %f1194, %f655;
	mul.f32 	%f1229, %f1193, %f655;
	mul.f32 	%f1230, %f1192, %f655;
	mul.f32 	%f1225, %f1197, %f655;
	mul.f32 	%f1226, %f1196, %f655;
	mul.f32 	%f1227, %f1195, %f655;
	fma.rn.f32 	%f1237, %f1185, %f655, %f656;
	fma.rn.f32 	%f1238, %f1184, %f655, %f657;
	fma.rn.f32 	%f1239, %f1183, %f655, %f658;

BB0_76:
	setp.gt.s32	%p66, %r1, -1;
	selp.f32	%f254, %f1240, %f1237, %p66;
	ld.global.u32 	%r414, [imageEnabled];
	and.b32  	%r258, %r414, 8;
	setp.eq.s32	%p67, %r258, 0;
	@%p67 bra 	BB0_89;

	cvt.u64.u32	%rd92, %r6;
	cvt.u64.u32	%rd93, %r7;
	mov.u64 	%rd96, image_Mask;
	cvta.global.u64 	%rd91, %rd96;
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd91, %r101, %r101, %rd92, %rd93, %rd27, %rd27);
	// inline asm
	mov.f32 	%f662, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f663, %f662;
	fma.rn.f32 	%f664, %f663, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f255, %f664;
	abs.f32 	%f256, %f254;
	setp.lt.f32	%p68, %f256, 0f00800000;
	mul.f32 	%f665, %f256, 0f4B800000;
	selp.f32	%f666, 0fC3170000, 0fC2FE0000, %p68;
	selp.f32	%f667, %f665, %f256, %p68;
	mov.b32 	 %r261, %f667;
	and.b32  	%r262, %r261, 8388607;
	or.b32  	%r263, %r262, 1065353216;
	mov.b32 	 %f668, %r263;
	shr.u32 	%r264, %r261, 23;
	cvt.rn.f32.u32	%f669, %r264;
	add.f32 	%f670, %f666, %f669;
	setp.gt.f32	%p69, %f668, 0f3FB504F3;
	mul.f32 	%f671, %f668, 0f3F000000;
	add.f32 	%f672, %f670, 0f3F800000;
	selp.f32	%f673, %f671, %f668, %p69;
	selp.f32	%f674, %f672, %f670, %p69;
	add.f32 	%f675, %f673, 0fBF800000;
	add.f32 	%f661, %f673, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f660,%f661;
	// inline asm
	add.f32 	%f676, %f675, %f675;
	mul.f32 	%f677, %f660, %f676;
	mul.f32 	%f678, %f677, %f677;
	mov.f32 	%f679, 0f3C4CAF63;
	mov.f32 	%f680, 0f3B18F0FE;
	fma.rn.f32 	%f681, %f680, %f678, %f679;
	mov.f32 	%f682, 0f3DAAAABD;
	fma.rn.f32 	%f683, %f681, %f678, %f682;
	mul.rn.f32 	%f684, %f683, %f678;
	mul.rn.f32 	%f685, %f684, %f677;
	sub.f32 	%f686, %f675, %f677;
	neg.f32 	%f687, %f677;
	add.f32 	%f688, %f686, %f686;
	fma.rn.f32 	%f689, %f687, %f675, %f688;
	mul.rn.f32 	%f690, %f660, %f689;
	add.f32 	%f691, %f685, %f677;
	sub.f32 	%f692, %f677, %f691;
	add.f32 	%f693, %f685, %f692;
	add.f32 	%f694, %f690, %f693;
	add.f32 	%f695, %f691, %f694;
	sub.f32 	%f696, %f691, %f695;
	add.f32 	%f697, %f694, %f696;
	mov.f32 	%f698, 0f3F317200;
	mul.rn.f32 	%f699, %f674, %f698;
	mov.f32 	%f700, 0f35BFBE8E;
	mul.rn.f32 	%f701, %f674, %f700;
	add.f32 	%f702, %f699, %f695;
	sub.f32 	%f703, %f699, %f702;
	add.f32 	%f704, %f695, %f703;
	add.f32 	%f705, %f697, %f704;
	add.f32 	%f706, %f701, %f705;
	add.f32 	%f707, %f702, %f706;
	sub.f32 	%f708, %f702, %f707;
	add.f32 	%f709, %f706, %f708;
	mov.f32 	%f710, 0f3EE8BA2E;
	mul.rn.f32 	%f711, %f710, %f707;
	neg.f32 	%f712, %f711;
	fma.rn.f32 	%f713, %f710, %f707, %f712;
	fma.rn.f32 	%f714, %f710, %f709, %f713;
	mov.f32 	%f715, 0f00000000;
	fma.rn.f32 	%f716, %f715, %f707, %f714;
	add.rn.f32 	%f717, %f711, %f716;
	neg.f32 	%f718, %f717;
	add.rn.f32 	%f719, %f711, %f718;
	add.rn.f32 	%f720, %f719, %f716;
	mov.b32 	 %r265, %f717;
	setp.eq.s32	%p70, %r265, 1118925336;
	add.s32 	%r266, %r265, -1;
	mov.b32 	 %f721, %r266;
	add.f32 	%f722, %f720, 0f37000000;
	selp.f32	%f723, %f721, %f717, %p70;
	selp.f32	%f257, %f722, %f720, %p70;
	mul.f32 	%f724, %f723, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f725, %f724;
	mov.f32 	%f726, 0fBF317200;
	fma.rn.f32 	%f727, %f725, %f726, %f723;
	mov.f32 	%f728, 0fB5BFBE8E;
	fma.rn.f32 	%f729, %f725, %f728, %f727;
	mul.f32 	%f730, %f729, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f731, %f730;
	add.f32 	%f732, %f725, 0f00000000;
	ex2.approx.f32 	%f733, %f732;
	mul.f32 	%f734, %f731, %f733;
	setp.lt.f32	%p71, %f723, 0fC2D20000;
	selp.f32	%f735, 0f00000000, %f734, %p71;
	setp.gt.f32	%p72, %f723, 0f42D20000;
	selp.f32	%f1241, 0f7F800000, %f735, %p72;
	setp.eq.f32	%p73, %f1241, 0f7F800000;
	@%p73 bra 	BB0_79;

	fma.rn.f32 	%f1241, %f1241, %f257, %f1241;

BB0_79:
	setp.lt.f32	%p74, %f254, 0f00000000;
	setp.eq.f32	%p75, %f255, 0f3F800000;
	and.pred  	%p3, %p74, %p75;
	mov.b32 	 %r267, %f1241;
	xor.b32  	%r268, %r267, -2147483648;
	mov.b32 	 %f736, %r268;
	selp.f32	%f1243, %f736, %f1241, %p3;
	setp.eq.f32	%p76, %f254, 0f00000000;
	@%p76 bra 	BB0_82;
	bra.uni 	BB0_80;

BB0_82:
	add.f32 	%f739, %f254, %f254;
	selp.f32	%f1243, %f739, 0f00000000, %p75;
	bra.uni 	BB0_83;

BB0_147:
	mov.u64 	%rd237, image_HDR;
	cvta.global.u64 	%rd232, %rd237;
	mov.u32 	%r354, 8;
	mov.u64 	%rd236, 0;
	// inline asm
	call (%rd231), _rt_buffer_get_64, (%rd232, %r101, %r354, %rd20, %rd21, %rd236, %rd236);
	// inline asm
	mov.f32 	%f1078, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs105, %f1078;}

	// inline asm
	mov.u16 	%rs106, 0;
	st.v4.u16 	[%rd231], {%rs105, %rs105, %rs105, %rs106};

BB0_148:
	ld.global.u32 	%r355, [additive];
	setp.eq.s32	%p143, %r355, 0;
	@%p143 bra 	BB0_150;

	mov.u64 	%rd250, image_RNM0;
	cvta.global.u64 	%rd239, %rd250;
	mov.u32 	%r359, 8;
	mov.u64 	%rd249, 0;
	// inline asm
	call (%rd238), _rt_buffer_get_64, (%rd239, %r101, %r359, %rd20, %rd21, %rd249, %rd249);
	// inline asm
	ld.v4.u16 	{%rs113, %rs114, %rs115, %rs116}, [%rd238];
	// inline asm
	{  cvt.f32.f16 %f1079, %rs113;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1080, %rs114;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1081, %rs115;}

	// inline asm
	// inline asm
	call (%rd244), _rt_buffer_get_64, (%rd239, %r101, %r359, %rd20, %rd21, %rd249, %rd249);
	// inline asm
	add.f32 	%f1082, %f1079, 0f00000000;
	add.f32 	%f1083, %f1080, 0f00000000;
	add.f32 	%f1084, %f1081, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs112, %f1084;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs111, %f1083;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f1082;}

	// inline asm
	mov.u16 	%rs117, 0;
	st.v4.u16 	[%rd244], {%rs110, %rs111, %rs112, %rs117};
	bra.uni 	BB0_151;

BB0_150:
	mov.u64 	%rd257, image_RNM0;
	cvta.global.u64 	%rd252, %rd257;
	mov.u32 	%r361, 8;
	mov.u64 	%rd256, 0;
	// inline asm
	call (%rd251), _rt_buffer_get_64, (%rd252, %r101, %r361, %rd20, %rd21, %rd256, %rd256);
	// inline asm
	mov.f32 	%f1085, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs118, %f1085;}

	// inline asm
	mov.u16 	%rs119, 0;
	st.v4.u16 	[%rd251], {%rs118, %rs118, %rs118, %rs119};

BB0_151:
	ld.global.u32 	%r362, [additive];
	setp.eq.s32	%p144, %r362, 0;
	@%p144 bra 	BB0_153;

	mov.u64 	%rd270, image_RNM1;
	cvta.global.u64 	%rd259, %rd270;
	mov.u32 	%r366, 8;
	mov.u64 	%rd269, 0;
	// inline asm
	call (%rd258), _rt_buffer_get_64, (%rd259, %r101, %r366, %rd20, %rd21, %rd269, %rd269);
	// inline asm
	ld.v4.u16 	{%rs126, %rs127, %rs128, %rs129}, [%rd258];
	// inline asm
	{  cvt.f32.f16 %f1086, %rs126;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1087, %rs127;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1088, %rs128;}

	// inline asm
	// inline asm
	call (%rd264), _rt_buffer_get_64, (%rd259, %r101, %r366, %rd20, %rd21, %rd269, %rd269);
	// inline asm
	add.f32 	%f1089, %f1086, 0f00000000;
	add.f32 	%f1090, %f1087, 0f00000000;
	add.f32 	%f1091, %f1088, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs125, %f1091;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs124, %f1090;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f1089;}

	// inline asm
	mov.u16 	%rs130, 0;
	st.v4.u16 	[%rd264], {%rs123, %rs124, %rs125, %rs130};
	bra.uni 	BB0_154;

BB0_153:
	mov.u64 	%rd277, image_RNM1;
	cvta.global.u64 	%rd272, %rd277;
	mov.u32 	%r368, 8;
	mov.u64 	%rd276, 0;
	// inline asm
	call (%rd271), _rt_buffer_get_64, (%rd272, %r101, %r368, %rd20, %rd21, %rd276, %rd276);
	// inline asm
	mov.f32 	%f1092, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs131, %f1092;}

	// inline asm
	mov.u16 	%rs132, 0;
	st.v4.u16 	[%rd271], {%rs131, %rs131, %rs131, %rs132};

BB0_154:
	ld.global.u32 	%r369, [additive];
	setp.eq.s32	%p145, %r369, 0;
	@%p145 bra 	BB0_156;

	mov.u64 	%rd290, image_RNM2;
	cvta.global.u64 	%rd279, %rd290;
	mov.u32 	%r373, 8;
	mov.u64 	%rd289, 0;
	// inline asm
	call (%rd278), _rt_buffer_get_64, (%rd279, %r101, %r373, %rd20, %rd21, %rd289, %rd289);
	// inline asm
	ld.v4.u16 	{%rs139, %rs140, %rs141, %rs142}, [%rd278];
	// inline asm
	{  cvt.f32.f16 %f1093, %rs139;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1094, %rs140;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1095, %rs141;}

	// inline asm
	// inline asm
	call (%rd284), _rt_buffer_get_64, (%rd279, %r101, %r373, %rd20, %rd21, %rd289, %rd289);
	// inline asm
	add.f32 	%f1096, %f1093, 0f00000000;
	add.f32 	%f1097, %f1094, 0f00000000;
	add.f32 	%f1098, %f1095, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs138, %f1098;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs137, %f1097;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f1096;}

	// inline asm
	mov.u16 	%rs143, 0;
	st.v4.u16 	[%rd284], {%rs136, %rs137, %rs138, %rs143};
	bra.uni 	BB0_157;

BB0_156:
	mov.u64 	%rd297, image_RNM2;
	cvta.global.u64 	%rd292, %rd297;
	mov.u32 	%r375, 8;
	mov.u64 	%rd296, 0;
	// inline asm
	call (%rd291), _rt_buffer_get_64, (%rd292, %r101, %r375, %rd20, %rd21, %rd296, %rd296);
	// inline asm
	mov.f32 	%f1099, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs144, %f1099;}

	// inline asm
	mov.u16 	%rs145, 0;
	st.v4.u16 	[%rd291], {%rs144, %rs144, %rs144, %rs145};

BB0_157:
	ld.global.u32 	%r376, [additive];
	setp.eq.s32	%p146, %r376, 0;
	@%p146 bra 	BB0_159;

	mov.u64 	%rd310, image_RNM3;
	cvta.global.u64 	%rd299, %rd310;
	mov.u32 	%r380, 8;
	mov.u64 	%rd309, 0;
	// inline asm
	call (%rd298), _rt_buffer_get_64, (%rd299, %r101, %r380, %rd20, %rd21, %rd309, %rd309);
	// inline asm
	ld.v4.u16 	{%rs152, %rs153, %rs154, %rs155}, [%rd298];
	// inline asm
	{  cvt.f32.f16 %f1100, %rs152;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1101, %rs153;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1102, %rs154;}

	// inline asm
	// inline asm
	call (%rd304), _rt_buffer_get_64, (%rd299, %r101, %r380, %rd20, %rd21, %rd309, %rd309);
	// inline asm
	add.f32 	%f1103, %f1100, 0f00000000;
	add.f32 	%f1104, %f1101, 0f00000000;
	add.f32 	%f1105, %f1102, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs151, %f1105;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs150, %f1104;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs149, %f1103;}

	// inline asm
	mov.u16 	%rs156, 0;
	st.v4.u16 	[%rd304], {%rs149, %rs150, %rs151, %rs156};
	bra.uni 	BB0_160;

BB0_159:
	mov.u64 	%rd317, image_RNM3;
	cvta.global.u64 	%rd312, %rd317;
	mov.u32 	%r382, 8;
	mov.u64 	%rd316, 0;
	// inline asm
	call (%rd311), _rt_buffer_get_64, (%rd312, %r101, %r382, %rd20, %rd21, %rd316, %rd316);
	// inline asm
	mov.f32 	%f1106, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs157, %f1106;}

	// inline asm
	mov.u16 	%rs158, 0;
	st.v4.u16 	[%rd311], {%rs157, %rs157, %rs157, %rs158};
	bra.uni 	BB0_160;

BB0_80:
	setp.geu.f32	%p77, %f254, 0f00000000;
	@%p77 bra 	BB0_83;

	cvt.rzi.f32.f32	%f738, %f710;
	setp.neu.f32	%p78, %f738, 0f3EE8BA2E;
	selp.f32	%f1243, 0f7FFFFFFF, %f1243, %p78;

BB0_83:
	add.f32 	%f740, %f256, 0f3EE8BA2E;
	mov.b32 	 %r269, %f740;
	setp.lt.s32	%p80, %r269, 2139095040;
	@%p80 bra 	BB0_88;

	setp.gtu.f32	%p81, %f256, 0f7F800000;
	@%p81 bra 	BB0_87;
	bra.uni 	BB0_85;

BB0_87:
	add.f32 	%f1243, %f254, 0f3EE8BA2E;
	bra.uni 	BB0_88;

BB0_85:
	setp.neu.f32	%p82, %f256, 0f7F800000;
	@%p82 bra 	BB0_88;

	selp.f32	%f1243, 0fFF800000, 0f7F800000, %p3;

BB0_88:
	mul.f32 	%f741, %f1243, 0f437F0000;
	setp.eq.f32	%p83, %f254, 0f3F800000;
	selp.f32	%f742, 0f437F0000, %f741, %p83;
	cvt.rzi.u32.f32	%r270, %f742;
	cvt.u16.u32	%rs15, %r270;
	mov.u16 	%rs16, 255;
	st.v2.u8 	[%rd90], {%rs15, %rs16};
	ld.global.u32 	%r414, [imageEnabled];

BB0_89:
	ld.global.f32 	%f743, [lightColor];
	mul.f32 	%f268, %f1237, %f743;
	ld.global.f32 	%f744, [lightColor+4];
	mul.f32 	%f269, %f1238, %f744;
	ld.global.f32 	%f745, [lightColor+8];
	mul.f32 	%f270, %f1239, %f745;
	and.b32  	%r271, %r414, 1;
	setp.eq.b32	%p84, %r271, 1;
	@!%p84 bra 	BB0_124;
	bra.uni 	BB0_90;

BB0_90:
	mov.f32 	%f748, 0f3E666666;
	cvt.rzi.f32.f32	%f749, %f748;
	fma.rn.f32 	%f750, %f749, 0fC0000000, 0f3EE66666;
	abs.f32 	%f271, %f750;
	abs.f32 	%f272, %f268;
	setp.lt.f32	%p85, %f272, 0f00800000;
	mul.f32 	%f751, %f272, 0f4B800000;
	selp.f32	%f752, 0fC3170000, 0fC2FE0000, %p85;
	selp.f32	%f753, %f751, %f272, %p85;
	mov.b32 	 %r272, %f753;
	and.b32  	%r273, %r272, 8388607;
	or.b32  	%r274, %r273, 1065353216;
	mov.b32 	 %f754, %r274;
	shr.u32 	%r275, %r272, 23;
	cvt.rn.f32.u32	%f755, %r275;
	add.f32 	%f756, %f752, %f755;
	setp.gt.f32	%p86, %f754, 0f3FB504F3;
	mul.f32 	%f757, %f754, 0f3F000000;
	add.f32 	%f758, %f756, 0f3F800000;
	selp.f32	%f759, %f757, %f754, %p86;
	selp.f32	%f760, %f758, %f756, %p86;
	add.f32 	%f761, %f759, 0fBF800000;
	add.f32 	%f747, %f759, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f746,%f747;
	// inline asm
	add.f32 	%f762, %f761, %f761;
	mul.f32 	%f763, %f746, %f762;
	mul.f32 	%f764, %f763, %f763;
	mov.f32 	%f765, 0f3C4CAF63;
	mov.f32 	%f766, 0f3B18F0FE;
	fma.rn.f32 	%f767, %f766, %f764, %f765;
	mov.f32 	%f768, 0f3DAAAABD;
	fma.rn.f32 	%f769, %f767, %f764, %f768;
	mul.rn.f32 	%f770, %f769, %f764;
	mul.rn.f32 	%f771, %f770, %f763;
	sub.f32 	%f772, %f761, %f763;
	neg.f32 	%f773, %f763;
	add.f32 	%f774, %f772, %f772;
	fma.rn.f32 	%f775, %f773, %f761, %f774;
	mul.rn.f32 	%f776, %f746, %f775;
	add.f32 	%f777, %f771, %f763;
	sub.f32 	%f778, %f763, %f777;
	add.f32 	%f779, %f771, %f778;
	add.f32 	%f780, %f776, %f779;
	add.f32 	%f781, %f777, %f780;
	sub.f32 	%f782, %f777, %f781;
	add.f32 	%f783, %f780, %f782;
	mov.f32 	%f784, 0f3F317200;
	mul.rn.f32 	%f785, %f760, %f784;
	mov.f32 	%f786, 0f35BFBE8E;
	mul.rn.f32 	%f787, %f760, %f786;
	add.f32 	%f788, %f785, %f781;
	sub.f32 	%f789, %f785, %f788;
	add.f32 	%f790, %f781, %f789;
	add.f32 	%f791, %f783, %f790;
	add.f32 	%f792, %f787, %f791;
	add.f32 	%f793, %f788, %f792;
	sub.f32 	%f794, %f788, %f793;
	add.f32 	%f795, %f792, %f794;
	mov.f32 	%f796, 0f3EE66666;
	mul.rn.f32 	%f797, %f796, %f793;
	neg.f32 	%f798, %f797;
	fma.rn.f32 	%f799, %f796, %f793, %f798;
	fma.rn.f32 	%f800, %f796, %f795, %f799;
	mov.f32 	%f801, 0f00000000;
	fma.rn.f32 	%f802, %f801, %f793, %f800;
	add.rn.f32 	%f803, %f797, %f802;
	neg.f32 	%f804, %f803;
	add.rn.f32 	%f805, %f797, %f804;
	add.rn.f32 	%f806, %f805, %f802;
	mov.b32 	 %r276, %f803;
	setp.eq.s32	%p87, %r276, 1118925336;
	add.s32 	%r277, %r276, -1;
	mov.b32 	 %f807, %r277;
	add.f32 	%f808, %f806, 0f37000000;
	selp.f32	%f809, %f807, %f803, %p87;
	selp.f32	%f273, %f808, %f806, %p87;
	mul.f32 	%f810, %f809, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f811, %f810;
	mov.f32 	%f812, 0fBF317200;
	fma.rn.f32 	%f813, %f811, %f812, %f809;
	mov.f32 	%f814, 0fB5BFBE8E;
	fma.rn.f32 	%f815, %f811, %f814, %f813;
	mul.f32 	%f816, %f815, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f817, %f816;
	add.f32 	%f818, %f811, 0f00000000;
	ex2.approx.f32 	%f819, %f818;
	mul.f32 	%f820, %f817, %f819;
	setp.lt.f32	%p88, %f809, 0fC2D20000;
	selp.f32	%f821, 0f00000000, %f820, %p88;
	setp.gt.f32	%p89, %f809, 0f42D20000;
	selp.f32	%f1244, 0f7F800000, %f821, %p89;
	setp.eq.f32	%p90, %f1244, 0f7F800000;
	@%p90 bra 	BB0_92;

	fma.rn.f32 	%f1244, %f1244, %f273, %f1244;

BB0_92:
	setp.lt.f32	%p91, %f268, 0f00000000;
	setp.eq.f32	%p92, %f271, 0f3F800000;
	and.pred  	%p4, %p91, %p92;
	mov.b32 	 %r278, %f1244;
	xor.b32  	%r279, %r278, -2147483648;
	mov.b32 	 %f822, %r279;
	selp.f32	%f1246, %f822, %f1244, %p4;
	setp.eq.f32	%p93, %f268, 0f00000000;
	@%p93 bra 	BB0_95;
	bra.uni 	BB0_93;

BB0_95:
	add.f32 	%f825, %f268, %f268;
	selp.f32	%f1246, %f825, 0f00000000, %p92;
	bra.uni 	BB0_96;

BB0_93:
	setp.geu.f32	%p94, %f268, 0f00000000;
	@%p94 bra 	BB0_96;

	cvt.rzi.f32.f32	%f824, %f796;
	setp.neu.f32	%p95, %f824, 0f3EE66666;
	selp.f32	%f1246, 0f7FFFFFFF, %f1246, %p95;

BB0_96:
	add.f32 	%f826, %f272, 0f3EE66666;
	mov.b32 	 %r280, %f826;
	setp.lt.s32	%p97, %r280, 2139095040;
	@%p97 bra 	BB0_101;

	setp.gtu.f32	%p98, %f272, 0f7F800000;
	@%p98 bra 	BB0_100;
	bra.uni 	BB0_98;

BB0_100:
	add.f32 	%f1246, %f268, 0f3EE66666;
	bra.uni 	BB0_101;

BB0_98:
	setp.neu.f32	%p99, %f272, 0f7F800000;
	@%p99 bra 	BB0_101;

	selp.f32	%f1246, 0fFF800000, 0f7F800000, %p4;

BB0_101:
	setp.eq.f32	%p100, %f268, 0f3F800000;
	selp.f32	%f284, 0f3F800000, %f1246, %p100;
	abs.f32 	%f285, %f269;
	setp.lt.f32	%p101, %f285, 0f00800000;
	mul.f32 	%f829, %f285, 0f4B800000;
	selp.f32	%f830, 0fC3170000, 0fC2FE0000, %p101;
	selp.f32	%f831, %f829, %f285, %p101;
	mov.b32 	 %r281, %f831;
	and.b32  	%r282, %r281, 8388607;
	or.b32  	%r283, %r282, 1065353216;
	mov.b32 	 %f832, %r283;
	shr.u32 	%r284, %r281, 23;
	cvt.rn.f32.u32	%f833, %r284;
	add.f32 	%f834, %f830, %f833;
	setp.gt.f32	%p102, %f832, 0f3FB504F3;
	mul.f32 	%f835, %f832, 0f3F000000;
	add.f32 	%f836, %f834, 0f3F800000;
	selp.f32	%f837, %f835, %f832, %p102;
	selp.f32	%f838, %f836, %f834, %p102;
	add.f32 	%f839, %f837, 0fBF800000;
	add.f32 	%f828, %f837, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f827,%f828;
	// inline asm
	add.f32 	%f840, %f839, %f839;
	mul.f32 	%f841, %f827, %f840;
	mul.f32 	%f842, %f841, %f841;
	fma.rn.f32 	%f845, %f766, %f842, %f765;
	fma.rn.f32 	%f847, %f845, %f842, %f768;
	mul.rn.f32 	%f848, %f847, %f842;
	mul.rn.f32 	%f849, %f848, %f841;
	sub.f32 	%f850, %f839, %f841;
	neg.f32 	%f851, %f841;
	add.f32 	%f852, %f850, %f850;
	fma.rn.f32 	%f853, %f851, %f839, %f852;
	mul.rn.f32 	%f854, %f827, %f853;
	add.f32 	%f855, %f849, %f841;
	sub.f32 	%f856, %f841, %f855;
	add.f32 	%f857, %f849, %f856;
	add.f32 	%f858, %f854, %f857;
	add.f32 	%f859, %f855, %f858;
	sub.f32 	%f860, %f855, %f859;
	add.f32 	%f861, %f858, %f860;
	mul.rn.f32 	%f863, %f838, %f784;
	mul.rn.f32 	%f865, %f838, %f786;
	add.f32 	%f866, %f863, %f859;
	sub.f32 	%f867, %f863, %f866;
	add.f32 	%f868, %f859, %f867;
	add.f32 	%f869, %f861, %f868;
	add.f32 	%f870, %f865, %f869;
	add.f32 	%f871, %f866, %f870;
	sub.f32 	%f872, %f866, %f871;
	add.f32 	%f873, %f870, %f872;
	mul.rn.f32 	%f875, %f796, %f871;
	neg.f32 	%f876, %f875;
	fma.rn.f32 	%f877, %f796, %f871, %f876;
	fma.rn.f32 	%f878, %f796, %f873, %f877;
	fma.rn.f32 	%f880, %f801, %f871, %f878;
	add.rn.f32 	%f881, %f875, %f880;
	neg.f32 	%f882, %f881;
	add.rn.f32 	%f883, %f875, %f882;
	add.rn.f32 	%f884, %f883, %f880;
	mov.b32 	 %r285, %f881;
	setp.eq.s32	%p103, %r285, 1118925336;
	add.s32 	%r286, %r285, -1;
	mov.b32 	 %f885, %r286;
	add.f32 	%f886, %f884, 0f37000000;
	selp.f32	%f887, %f885, %f881, %p103;
	selp.f32	%f286, %f886, %f884, %p103;
	mul.f32 	%f888, %f887, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f889, %f888;
	fma.rn.f32 	%f891, %f889, %f812, %f887;
	fma.rn.f32 	%f893, %f889, %f814, %f891;
	mul.f32 	%f894, %f893, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f895, %f894;
	add.f32 	%f896, %f889, 0f00000000;
	ex2.approx.f32 	%f897, %f896;
	mul.f32 	%f898, %f895, %f897;
	setp.lt.f32	%p104, %f887, 0fC2D20000;
	selp.f32	%f899, 0f00000000, %f898, %p104;
	setp.gt.f32	%p105, %f887, 0f42D20000;
	selp.f32	%f1247, 0f7F800000, %f899, %p105;
	setp.eq.f32	%p106, %f1247, 0f7F800000;
	@%p106 bra 	BB0_103;

	fma.rn.f32 	%f1247, %f1247, %f286, %f1247;

BB0_103:
	setp.lt.f32	%p107, %f269, 0f00000000;
	and.pred  	%p5, %p107, %p92;
	mov.b32 	 %r287, %f1247;
	xor.b32  	%r288, %r287, -2147483648;
	mov.b32 	 %f900, %r288;
	selp.f32	%f1249, %f900, %f1247, %p5;
	setp.eq.f32	%p109, %f269, 0f00000000;
	@%p109 bra 	BB0_106;
	bra.uni 	BB0_104;

BB0_106:
	add.f32 	%f903, %f269, %f269;
	selp.f32	%f1249, %f903, 0f00000000, %p92;
	bra.uni 	BB0_107;

BB0_104:
	setp.geu.f32	%p110, %f269, 0f00000000;
	@%p110 bra 	BB0_107;

	cvt.rzi.f32.f32	%f902, %f796;
	setp.neu.f32	%p111, %f902, 0f3EE66666;
	selp.f32	%f1249, 0f7FFFFFFF, %f1249, %p111;

BB0_107:
	add.f32 	%f904, %f285, 0f3EE66666;
	mov.b32 	 %r289, %f904;
	setp.lt.s32	%p113, %r289, 2139095040;
	@%p113 bra 	BB0_112;

	setp.gtu.f32	%p114, %f285, 0f7F800000;
	@%p114 bra 	BB0_111;
	bra.uni 	BB0_109;

BB0_111:
	add.f32 	%f1249, %f269, 0f3EE66666;
	bra.uni 	BB0_112;

BB0_109:
	setp.neu.f32	%p115, %f285, 0f7F800000;
	@%p115 bra 	BB0_112;

	selp.f32	%f1249, 0fFF800000, 0f7F800000, %p5;

BB0_112:
	setp.eq.f32	%p116, %f269, 0f3F800000;
	selp.f32	%f297, 0f3F800000, %f1249, %p116;
	abs.f32 	%f298, %f270;
	setp.lt.f32	%p117, %f298, 0f00800000;
	mul.f32 	%f907, %f298, 0f4B800000;
	selp.f32	%f908, 0fC3170000, 0fC2FE0000, %p117;
	selp.f32	%f909, %f907, %f298, %p117;
	mov.b32 	 %r290, %f909;
	and.b32  	%r291, %r290, 8388607;
	or.b32  	%r292, %r291, 1065353216;
	mov.b32 	 %f910, %r292;
	shr.u32 	%r293, %r290, 23;
	cvt.rn.f32.u32	%f911, %r293;
	add.f32 	%f912, %f908, %f911;
	setp.gt.f32	%p118, %f910, 0f3FB504F3;
	mul.f32 	%f913, %f910, 0f3F000000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32	%f915, %f913, %f910, %p118;
	selp.f32	%f916, %f914, %f912, %p118;
	add.f32 	%f917, %f915, 0fBF800000;
	add.f32 	%f906, %f915, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f905,%f906;
	// inline asm
	add.f32 	%f918, %f917, %f917;
	mul.f32 	%f919, %f905, %f918;
	mul.f32 	%f920, %f919, %f919;
	fma.rn.f32 	%f923, %f766, %f920, %f765;
	fma.rn.f32 	%f925, %f923, %f920, %f768;
	mul.rn.f32 	%f926, %f925, %f920;
	mul.rn.f32 	%f927, %f926, %f919;
	sub.f32 	%f928, %f917, %f919;
	neg.f32 	%f929, %f919;
	add.f32 	%f930, %f928, %f928;
	fma.rn.f32 	%f931, %f929, %f917, %f930;
	mul.rn.f32 	%f932, %f905, %f931;
	add.f32 	%f933, %f927, %f919;
	sub.f32 	%f934, %f919, %f933;
	add.f32 	%f935, %f927, %f934;
	add.f32 	%f936, %f932, %f935;
	add.f32 	%f937, %f933, %f936;
	sub.f32 	%f938, %f933, %f937;
	add.f32 	%f939, %f936, %f938;
	mul.rn.f32 	%f941, %f916, %f784;
	mul.rn.f32 	%f943, %f916, %f786;
	add.f32 	%f944, %f941, %f937;
	sub.f32 	%f945, %f941, %f944;
	add.f32 	%f946, %f937, %f945;
	add.f32 	%f947, %f939, %f946;
	add.f32 	%f948, %f943, %f947;
	add.f32 	%f949, %f944, %f948;
	sub.f32 	%f950, %f944, %f949;
	add.f32 	%f951, %f948, %f950;
	mul.rn.f32 	%f953, %f796, %f949;
	neg.f32 	%f954, %f953;
	fma.rn.f32 	%f955, %f796, %f949, %f954;
	fma.rn.f32 	%f956, %f796, %f951, %f955;
	fma.rn.f32 	%f958, %f801, %f949, %f956;
	add.rn.f32 	%f959, %f953, %f958;
	neg.f32 	%f960, %f959;
	add.rn.f32 	%f961, %f953, %f960;
	add.rn.f32 	%f962, %f961, %f958;
	mov.b32 	 %r294, %f959;
	setp.eq.s32	%p119, %r294, 1118925336;
	add.s32 	%r295, %r294, -1;
	mov.b32 	 %f963, %r295;
	add.f32 	%f964, %f962, 0f37000000;
	selp.f32	%f965, %f963, %f959, %p119;
	selp.f32	%f299, %f964, %f962, %p119;
	mul.f32 	%f966, %f965, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f967, %f966;
	fma.rn.f32 	%f969, %f967, %f812, %f965;
	fma.rn.f32 	%f971, %f967, %f814, %f969;
	mul.f32 	%f972, %f971, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f973, %f972;
	add.f32 	%f974, %f967, 0f00000000;
	ex2.approx.f32 	%f975, %f974;
	mul.f32 	%f976, %f973, %f975;
	setp.lt.f32	%p120, %f965, 0fC2D20000;
	selp.f32	%f977, 0f00000000, %f976, %p120;
	setp.gt.f32	%p121, %f965, 0f42D20000;
	selp.f32	%f1250, 0f7F800000, %f977, %p121;
	setp.eq.f32	%p122, %f1250, 0f7F800000;
	@%p122 bra 	BB0_114;

	fma.rn.f32 	%f1250, %f1250, %f299, %f1250;

BB0_114:
	setp.lt.f32	%p123, %f270, 0f00000000;
	and.pred  	%p6, %p123, %p92;
	mov.b32 	 %r296, %f1250;
	xor.b32  	%r297, %r296, -2147483648;
	mov.b32 	 %f978, %r297;
	selp.f32	%f1252, %f978, %f1250, %p6;
	setp.eq.f32	%p125, %f270, 0f00000000;
	@%p125 bra 	BB0_117;
	bra.uni 	BB0_115;

BB0_117:
	add.f32 	%f981, %f270, %f270;
	selp.f32	%f1252, %f981, 0f00000000, %p92;
	bra.uni 	BB0_118;

BB0_115:
	setp.geu.f32	%p126, %f270, 0f00000000;
	@%p126 bra 	BB0_118;

	cvt.rzi.f32.f32	%f980, %f796;
	setp.neu.f32	%p127, %f980, 0f3EE66666;
	selp.f32	%f1252, 0f7FFFFFFF, %f1252, %p127;

BB0_118:
	add.f32 	%f982, %f298, 0f3EE66666;
	mov.b32 	 %r298, %f982;
	setp.lt.s32	%p129, %r298, 2139095040;
	@%p129 bra 	BB0_123;

	setp.gtu.f32	%p130, %f298, 0f7F800000;
	@%p130 bra 	BB0_122;
	bra.uni 	BB0_120;

BB0_122:
	add.f32 	%f1252, %f270, 0f3EE66666;
	bra.uni 	BB0_123;

BB0_120:
	setp.neu.f32	%p131, %f298, 0f7F800000;
	@%p131 bra 	BB0_123;

	selp.f32	%f1252, 0fFF800000, 0f7F800000, %p6;

BB0_123:
	setp.eq.f32	%p132, %f270, 0f3F800000;
	selp.f32	%f983, 0f3F800000, %f1252, %p132;
	cvt.u64.u32	%rd100, %r7;
	cvt.u64.u32	%rd99, %r6;
	mov.u64 	%rd103, image;
	cvta.global.u64 	%rd98, %rd103;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r101, %r102, %rd99, %rd100, %rd27, %rd27);
	// inline asm
	cvt.sat.f32.f32	%f984, %f983;
	mul.f32 	%f985, %f984, 0f437FFD71;
	cvt.rzi.u32.f32	%r301, %f985;
	cvt.sat.f32.f32	%f986, %f297;
	mul.f32 	%f987, %f986, 0f437FFD71;
	cvt.rzi.u32.f32	%r302, %f987;
	cvt.sat.f32.f32	%f988, %f284;
	mul.f32 	%f989, %f988, 0f437FFD71;
	cvt.rzi.u32.f32	%r303, %f989;
	cvt.u16.u32	%rs17, %r301;
	cvt.u16.u32	%rs18, %r303;
	cvt.u16.u32	%rs19, %r302;
	mov.u16 	%rs20, 255;
	st.v4.u8 	[%rd97], {%rs17, %rs19, %rs18, %rs20};
	ld.global.u32 	%r414, [imageEnabled];

BB0_124:
	cvt.u64.u32	%rd18, %r6;
	cvt.u64.u32	%rd19, %r7;
	and.b32  	%r304, %r414, 4;
	setp.eq.s32	%p133, %r304, 0;
	@%p133 bra 	BB0_128;

	ld.global.u32 	%r305, [additive];
	setp.eq.s32	%p134, %r305, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f537;}

	// inline asm
	@%p134 bra 	BB0_127;

	mov.u64 	%rd116, image_HDR;
	cvta.global.u64 	%rd105, %rd116;
	mov.u32 	%r309, 8;
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd105, %r101, %r309, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs28, %rs29, %rs30, %rs31}, [%rd104];
	// inline asm
	{  cvt.f32.f16 %f991, %rs28;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f992, %rs29;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f993, %rs30;}

	// inline asm
	// inline asm
	call (%rd110), _rt_buffer_get_64, (%rd105, %r101, %r309, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f994, %f268, %f991;
	add.f32 	%f995, %f269, %f992;
	add.f32 	%f996, %f270, %f993;
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f996;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f995;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f994;}

	// inline asm
	st.v4.u16 	[%rd110], {%rs25, %rs26, %rs27, %rs21};
	bra.uni 	BB0_128;

BB0_127:
	mov.u64 	%rd123, image_HDR;
	cvta.global.u64 	%rd118, %rd123;
	mov.u32 	%r311, 8;
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd118, %r101, %r311, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f270;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f269;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f268;}

	// inline asm
	st.v4.u16 	[%rd117], {%rs32, %rs33, %rs34, %rs21};

BB0_128:
	selp.f32	%f1001, 0f3F800000, 0f3E800000, %p147;
	mul.f32 	%f1002, %f1001, %f1234;
	mul.f32 	%f1003, %f1001, %f1235;
	mul.f32 	%f1004, %f1001, %f1236;
	mul.f32 	%f1005, %f1001, %f1231;
	mul.f32 	%f1006, %f1001, %f1232;
	mul.f32 	%f1007, %f1001, %f1233;
	mul.f32 	%f1008, %f1001, %f1228;
	mul.f32 	%f1009, %f1001, %f1229;
	mul.f32 	%f1010, %f1001, %f1230;
	mul.f32 	%f1011, %f1001, %f1225;
	mul.f32 	%f1012, %f1001, %f1226;
	mul.f32 	%f1013, %f1001, %f1227;
	ld.global.f32 	%f1014, [lightColor];
	mul.f32 	%f310, %f1002, %f1014;
	ld.global.f32 	%f1015, [lightColor+4];
	mul.f32 	%f311, %f1003, %f1015;
	ld.global.f32 	%f1016, [lightColor+8];
	mul.f32 	%f312, %f1004, %f1016;
	mul.f32 	%f313, %f1005, %f1014;
	mul.f32 	%f314, %f1006, %f1015;
	mul.f32 	%f315, %f1007, %f1016;
	mul.f32 	%f316, %f1008, %f1014;
	mul.f32 	%f317, %f1009, %f1015;
	mul.f32 	%f318, %f1010, %f1016;
	mul.f32 	%f319, %f1011, %f1014;
	mul.f32 	%f320, %f1012, %f1015;
	mul.f32 	%f321, %f1013, %f1016;
	ld.global.u32 	%r312, [additive];
	setp.eq.s32	%p135, %r312, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs35, %f537;}

	// inline asm
	@%p135 bra 	BB0_130;

	mov.u64 	%rd136, image_RNM0;
	cvta.global.u64 	%rd125, %rd136;
	mov.u32 	%r316, 8;
	// inline asm
	call (%rd124), _rt_buffer_get_64, (%rd125, %r101, %r316, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs42, %rs43, %rs44, %rs45}, [%rd124];
	// inline asm
	{  cvt.f32.f16 %f1017, %rs42;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1018, %rs43;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1019, %rs44;}

	// inline asm
	// inline asm
	call (%rd130), _rt_buffer_get_64, (%rd125, %r101, %r316, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1020, %f310, %f1017;
	add.f32 	%f1021, %f311, %f1018;
	add.f32 	%f1022, %f312, %f1019;
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f1022;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f1021;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs39, %f1020;}

	// inline asm
	st.v4.u16 	[%rd130], {%rs39, %rs40, %rs41, %rs35};
	bra.uni 	BB0_131;

BB0_130:
	mov.u64 	%rd143, image_RNM0;
	cvta.global.u64 	%rd138, %rd143;
	mov.u32 	%r318, 8;
	// inline asm
	call (%rd137), _rt_buffer_get_64, (%rd138, %r101, %r318, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f312;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f311;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f310;}

	// inline asm
	st.v4.u16 	[%rd137], {%rs46, %rs47, %rs48, %rs35};

BB0_131:
	mov.f32 	%f1027, 0f34000000;
	max.f32 	%f1028, %f310, %f1027;
	div.rn.f32 	%f1029, %f313, %f1028;
	max.f32 	%f1030, %f311, %f1027;
	div.rn.f32 	%f1031, %f314, %f1030;
	max.f32 	%f1032, %f312, %f1027;
	div.rn.f32 	%f1033, %f315, %f1032;
	fma.rn.f32 	%f322, %f1029, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f323, %f1031, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f324, %f1033, 0f3F000000, 0f3F000000;
	div.rn.f32 	%f1034, %f316, %f1028;
	div.rn.f32 	%f1035, %f317, %f1030;
	div.rn.f32 	%f1036, %f318, %f1032;
	fma.rn.f32 	%f325, %f1034, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f326, %f1035, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f327, %f1036, 0f3F000000, 0f3F000000;
	div.rn.f32 	%f1037, %f319, %f1028;
	div.rn.f32 	%f1038, %f320, %f1030;
	div.rn.f32 	%f1039, %f321, %f1032;
	fma.rn.f32 	%f328, %f1037, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f329, %f1038, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f330, %f1039, 0f3F000000, 0f3F000000;
	ld.global.u32 	%r319, [additive];
	setp.eq.s32	%p136, %r319, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f537;}

	// inline asm
	@%p136 bra 	BB0_133;

	mov.u64 	%rd156, image_RNM1;
	cvta.global.u64 	%rd145, %rd156;
	mov.u32 	%r323, 8;
	// inline asm
	call (%rd144), _rt_buffer_get_64, (%rd145, %r101, %r323, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs56, %rs57, %rs58, %rs59}, [%rd144];
	// inline asm
	{  cvt.f32.f16 %f1040, %rs56;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1041, %rs57;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1042, %rs58;}

	// inline asm
	// inline asm
	call (%rd150), _rt_buffer_get_64, (%rd145, %r101, %r323, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1043, %f322, %f1040;
	add.f32 	%f1044, %f323, %f1041;
	add.f32 	%f1045, %f324, %f1042;
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f1045;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs54, %f1044;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs53, %f1043;}

	// inline asm
	st.v4.u16 	[%rd150], {%rs53, %rs54, %rs55, %rs49};
	bra.uni 	BB0_134;

BB0_133:
	mov.u64 	%rd163, image_RNM1;
	cvta.global.u64 	%rd158, %rd163;
	mov.u32 	%r325, 8;
	// inline asm
	call (%rd157), _rt_buffer_get_64, (%rd158, %r101, %r325, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f324;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs61, %f323;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f322;}

	// inline asm
	st.v4.u16 	[%rd157], {%rs60, %rs61, %rs62, %rs49};

BB0_134:
	ld.global.u32 	%r326, [additive];
	setp.eq.s32	%p137, %r326, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f537;}

	// inline asm
	@%p137 bra 	BB0_136;

	mov.u64 	%rd176, image_RNM2;
	cvta.global.u64 	%rd165, %rd176;
	mov.u32 	%r330, 8;
	// inline asm
	call (%rd164), _rt_buffer_get_64, (%rd165, %r101, %r330, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs70, %rs71, %rs72, %rs73}, [%rd164];
	// inline asm
	{  cvt.f32.f16 %f1050, %rs70;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1051, %rs71;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1052, %rs72;}

	// inline asm
	// inline asm
	call (%rd170), _rt_buffer_get_64, (%rd165, %r101, %r330, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1053, %f325, %f1050;
	add.f32 	%f1054, %f326, %f1051;
	add.f32 	%f1055, %f327, %f1052;
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f1055;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs68, %f1054;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs67, %f1053;}

	// inline asm
	st.v4.u16 	[%rd170], {%rs67, %rs68, %rs69, %rs63};
	bra.uni 	BB0_137;

BB0_136:
	mov.u64 	%rd183, image_RNM2;
	cvta.global.u64 	%rd178, %rd183;
	mov.u32 	%r332, 8;
	// inline asm
	call (%rd177), _rt_buffer_get_64, (%rd178, %r101, %r332, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f327;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs75, %f326;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f325;}

	// inline asm
	st.v4.u16 	[%rd177], {%rs74, %rs75, %rs76, %rs63};

BB0_137:
	ld.global.u32 	%r333, [additive];
	setp.eq.s32	%p138, %r333, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f537;}

	// inline asm
	@%p138 bra 	BB0_139;

	mov.u64 	%rd196, image_RNM3;
	cvta.global.u64 	%rd185, %rd196;
	mov.u32 	%r337, 8;
	// inline asm
	call (%rd184), _rt_buffer_get_64, (%rd185, %r101, %r337, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs84, %rs85, %rs86, %rs87}, [%rd184];
	// inline asm
	{  cvt.f32.f16 %f1060, %rs84;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1061, %rs85;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1062, %rs86;}

	// inline asm
	// inline asm
	call (%rd190), _rt_buffer_get_64, (%rd185, %r101, %r337, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1063, %f328, %f1060;
	add.f32 	%f1064, %f329, %f1061;
	add.f32 	%f1065, %f330, %f1062;
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f1065;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f1064;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f1063;}

	// inline asm
	st.v4.u16 	[%rd190], {%rs81, %rs82, %rs83, %rs77};
	bra.uni 	BB0_160;

BB0_139:
	mov.u64 	%rd203, image_RNM3;
	cvta.global.u64 	%rd198, %rd203;
	mov.u32 	%r339, 8;
	// inline asm
	call (%rd197), _rt_buffer_get_64, (%rd198, %r101, %r339, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f330;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f329;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f328;}

	// inline asm
	st.v4.u16 	[%rd197], {%rs88, %rs89, %rs90, %rs77};

BB0_160:
	ret;
}


