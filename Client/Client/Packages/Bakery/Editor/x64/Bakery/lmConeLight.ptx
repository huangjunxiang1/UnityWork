//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 4 .u32 samples;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightRadius;
.global .align 4 .b8 lightPos[12];
.global .align 4 .b8 lightColor[12];
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 lightConeDir[12];
.global .align 8 .b8 lightCone[8];
.global .align 4 .f32 lightFalloffFakeDistanceMult;
.global .align 4 .f32 lightFalloffMinRadiusSq;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11lightRadiusE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8lightPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12lightConeDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9lightConeE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo28lightFalloffFakeDistanceMultE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo23lightFalloffMinRadiusSqE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11lightRadiusE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8lightPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12lightConeDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9lightConeE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename28lightFalloffFakeDistanceMultE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename23lightFalloffMinRadiusSqE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11lightRadiusE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8lightPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12lightConeDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9lightConeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum28lightFalloffFakeDistanceMultE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum23lightFalloffMinRadiusSqE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11lightRadiusE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8lightPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12lightConeDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9lightConeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic28lightFalloffFakeDistanceMultE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic23lightFalloffMinRadiusSqE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11lightRadiusE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8lightPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12lightConeDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9lightConeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation28lightFalloffFakeDistanceMultE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation23lightFalloffMinRadiusSqE[1];

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<113>;
	.reg .b16 	%rs<76>;
	.reg .f32 	%f<773>;
	.reg .b32 	%r<167>;
	.reg .b64 	%rd<150>;


	mov.u64 	%rd149, __local_depot0;
	cvta.local.u64 	%SP, %rd149;
	ld.global.v2.u32 	{%r28, %r29}, [pixelID];
	cvt.u64.u32	%rd12, %r28;
	cvt.u64.u32	%rd13, %r29;
	mov.u64 	%rd16, uvnormal;
	cvta.global.u64 	%rd11, %rd16;
	mov.u32 	%r26, 2;
	mov.u32 	%r27, 4;
	mov.u64 	%rd15, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r26, %r27, %rd12, %rd13, %rd15, %rd15);
	// inline asm
	ld.u32 	%r1, [%rd10];
	shr.u32 	%r32, %r1, 16;
	cvt.u16.u32	%rs1, %r32;
	and.b16  	%rs4, %rs1, 255;
	cvt.u16.u32	%rs5, %r1;
	or.b16  	%rs6, %rs5, %rs4;
	setp.eq.s16	%p6, %rs6, 0;
	mov.f32 	%f749, 0f00000000;
	mov.f32 	%f750, %f749;
	mov.f32 	%f751, %f749;
	@%p6 bra 	BB0_2;

	ld.u8 	%rs7, [%rd10+1];
	and.b16  	%rs9, %rs5, 255;
	cvt.rn.f32.u16	%f105, %rs9;
	div.rn.f32 	%f106, %f105, 0f437F0000;
	fma.rn.f32 	%f107, %f106, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f108, %rs7;
	div.rn.f32 	%f109, %f108, 0f437F0000;
	fma.rn.f32 	%f110, %f109, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f111, %rs4;
	div.rn.f32 	%f112, %f111, 0f437F0000;
	fma.rn.f32 	%f113, %f112, 0f40000000, 0fBF800000;
	mul.f32 	%f114, %f110, %f110;
	fma.rn.f32 	%f115, %f107, %f107, %f114;
	fma.rn.f32 	%f116, %f113, %f113, %f115;
	sqrt.rn.f32 	%f117, %f116;
	rcp.rn.f32 	%f118, %f117;
	mul.f32 	%f749, %f107, %f118;
	mul.f32 	%f750, %f110, %f118;
	mul.f32 	%f751, %f113, %f118;

BB0_2:
	ld.global.v2.u32 	{%r33, %r34}, [pixelID];
	ld.global.v2.u32 	{%r36, %r37}, [tileInfo];
	add.s32 	%r2, %r33, %r36;
	add.s32 	%r3, %r34, %r37;
	setp.eq.f32	%p7, %f750, 0f00000000;
	setp.eq.f32	%p8, %f749, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	setp.eq.f32	%p10, %f751, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB0_85;
	bra.uni 	BB0_3;

BB0_85:
	ld.global.u32 	%r166, [imageEnabled];
	and.b32  	%r141, %r166, 1;
	setp.eq.b32	%p108, %r141, 1;
	@!%p108 bra 	BB0_87;
	bra.uni 	BB0_86;

BB0_86:
	cvt.u64.u32	%rd110, %r2;
	cvt.u64.u32	%rd111, %r3;
	mov.u64 	%rd114, image;
	cvta.global.u64 	%rd109, %rd114;
	// inline asm
	call (%rd108), _rt_buffer_get_64, (%rd109, %r26, %r27, %rd110, %rd111, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs57, 0;
	st.v4.u8 	[%rd108], {%rs57, %rs57, %rs57, %rs57};
	ld.global.u32 	%r166, [imageEnabled];

BB0_87:
	and.b32  	%r144, %r166, 8;
	setp.eq.s32	%p109, %r144, 0;
	@%p109 bra 	BB0_89;

	cvt.u64.u32	%rd117, %r2;
	cvt.u64.u32	%rd118, %r3;
	mov.u64 	%rd121, image_Mask;
	cvta.global.u64 	%rd116, %rd121;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd116, %r26, %r26, %rd117, %rd118, %rd15, %rd15);
	// inline asm
	mov.f32 	%f690, 0f00000000;
	cvt.rzi.u32.f32	%r147, %f690;
	cvt.u16.u32	%rs58, %r147;
	mov.u16 	%rs59, 0;
	st.v2.u8 	[%rd115], {%rs58, %rs59};
	ld.global.u32 	%r166, [imageEnabled];

BB0_89:
	and.b32  	%r148, %r166, 4;
	setp.eq.s32	%p110, %r148, 0;
	@%p110 bra 	BB0_93;

	ld.global.u32 	%r149, [additive];
	setp.eq.s32	%p111, %r149, 0;
	cvt.u64.u32	%rd8, %r2;
	cvt.u64.u32	%rd9, %r3;
	@%p111 bra 	BB0_92;

	mov.u64 	%rd134, image_HDR;
	cvta.global.u64 	%rd123, %rd134;
	mov.u32 	%r153, 8;
	// inline asm
	call (%rd122), _rt_buffer_get_64, (%rd123, %r26, %r153, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs66, %rs67, %rs68, %rs69}, [%rd122];
	// inline asm
	{  cvt.f32.f16 %f691, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f692, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f693, %rs68;}

	// inline asm
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd123, %r26, %r153, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	add.f32 	%f694, %f691, 0f00000000;
	add.f32 	%f695, %f692, 0f00000000;
	add.f32 	%f696, %f693, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f696;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f695;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f694;}

	// inline asm
	mov.u16 	%rs70, 0;
	st.v4.u16 	[%rd128], {%rs63, %rs64, %rs65, %rs70};
	bra.uni 	BB0_93;

BB0_3:
	ld.global.v2.u32 	{%r43, %r44}, [pixelID];
	cvt.u64.u32	%rd19, %r43;
	cvt.u64.u32	%rd20, %r44;
	mov.u64 	%rd23, uvpos;
	cvta.global.u64 	%rd18, %rd23;
	mov.u32 	%r42, 12;
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd18, %r26, %r42, %rd19, %rd20, %rd15, %rd15);
	// inline asm
	ld.global.f32 	%f7, [lightPos];
	ld.f32 	%f12, [%rd17+8];
	ld.f32 	%f10, [%rd17+4];
	ld.f32 	%f8, [%rd17];
	sub.f32 	%f121, %f7, %f8;
	ld.global.f32 	%f9, [lightPos+4];
	sub.f32 	%f122, %f9, %f10;
	ld.global.f32 	%f11, [lightPos+8];
	sub.f32 	%f123, %f11, %f12;
	mul.f32 	%f124, %f122, %f122;
	fma.rn.f32 	%f125, %f121, %f121, %f124;
	fma.rn.f32 	%f126, %f123, %f123, %f125;
	sqrt.rn.f32 	%f127, %f126;
	rcp.rn.f32 	%f128, %f127;
	ld.global.f32 	%f129, [lightFalloffFakeDistanceMult];
	mul.f32 	%f16, %f127, %f129;
	ld.global.f32 	%f130, [lightInvCutoff];
	mul.f32 	%f17, %f127, %f130;
	mov.f32 	%f134, 0f40800000;
	abs.f32 	%f19, %f17;
	setp.lt.f32	%p12, %f19, 0f00800000;
	mul.f32 	%f136, %f19, 0f4B800000;
	selp.f32	%f137, 0fC3170000, 0fC2FE0000, %p12;
	selp.f32	%f138, %f136, %f19, %p12;
	mov.b32 	 %r47, %f138;
	and.b32  	%r48, %r47, 8388607;
	or.b32  	%r49, %r48, 1065353216;
	mov.b32 	 %f139, %r49;
	shr.u32 	%r50, %r47, 23;
	cvt.rn.f32.u32	%f140, %r50;
	add.f32 	%f141, %f137, %f140;
	setp.gt.f32	%p13, %f139, 0f3FB504F3;
	mul.f32 	%f142, %f139, 0f3F000000;
	add.f32 	%f143, %f141, 0f3F800000;
	selp.f32	%f144, %f142, %f139, %p13;
	selp.f32	%f145, %f143, %f141, %p13;
	add.f32 	%f146, %f144, 0fBF800000;
	add.f32 	%f120, %f144, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f119,%f120;
	// inline asm
	add.f32 	%f147, %f146, %f146;
	mul.f32 	%f148, %f119, %f147;
	mul.f32 	%f149, %f148, %f148;
	mov.f32 	%f150, 0f3C4CAF63;
	mov.f32 	%f151, 0f3B18F0FE;
	fma.rn.f32 	%f152, %f151, %f149, %f150;
	mov.f32 	%f153, 0f3DAAAABD;
	fma.rn.f32 	%f154, %f152, %f149, %f153;
	mul.rn.f32 	%f155, %f154, %f149;
	mul.rn.f32 	%f156, %f155, %f148;
	sub.f32 	%f157, %f146, %f148;
	neg.f32 	%f158, %f148;
	add.f32 	%f159, %f157, %f157;
	fma.rn.f32 	%f160, %f158, %f146, %f159;
	mul.rn.f32 	%f161, %f119, %f160;
	add.f32 	%f162, %f156, %f148;
	sub.f32 	%f163, %f148, %f162;
	add.f32 	%f164, %f156, %f163;
	add.f32 	%f165, %f161, %f164;
	add.f32 	%f166, %f162, %f165;
	sub.f32 	%f167, %f162, %f166;
	add.f32 	%f168, %f165, %f167;
	mov.f32 	%f169, 0f3F317200;
	mul.rn.f32 	%f170, %f145, %f169;
	mov.f32 	%f171, 0f35BFBE8E;
	mul.rn.f32 	%f172, %f145, %f171;
	add.f32 	%f173, %f170, %f166;
	sub.f32 	%f174, %f170, %f173;
	add.f32 	%f175, %f166, %f174;
	add.f32 	%f176, %f168, %f175;
	add.f32 	%f177, %f172, %f176;
	add.f32 	%f178, %f173, %f177;
	sub.f32 	%f179, %f173, %f178;
	add.f32 	%f180, %f177, %f179;
	mul.rn.f32 	%f181, %f134, %f178;
	neg.f32 	%f182, %f181;
	fma.rn.f32 	%f183, %f134, %f178, %f182;
	fma.rn.f32 	%f184, %f134, %f180, %f183;
	mov.f32 	%f185, 0f00000000;
	fma.rn.f32 	%f186, %f185, %f178, %f184;
	add.rn.f32 	%f187, %f181, %f186;
	neg.f32 	%f188, %f187;
	add.rn.f32 	%f189, %f181, %f188;
	add.rn.f32 	%f190, %f189, %f186;
	mov.b32 	 %r51, %f187;
	setp.eq.s32	%p14, %r51, 1118925336;
	add.s32 	%r52, %r51, -1;
	mov.b32 	 %f191, %r52;
	add.f32 	%f192, %f190, 0f37000000;
	selp.f32	%f193, %f191, %f187, %p14;
	selp.f32	%f20, %f192, %f190, %p14;
	mul.f32 	%f194, %f193, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f195, %f194;
	mov.f32 	%f196, 0fBF317200;
	fma.rn.f32 	%f197, %f195, %f196, %f193;
	mov.f32 	%f198, 0fB5BFBE8E;
	fma.rn.f32 	%f199, %f195, %f198, %f197;
	mul.f32 	%f200, %f199, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f201, %f200;
	add.f32 	%f202, %f195, 0f00000000;
	ex2.approx.f32 	%f203, %f202;
	mul.f32 	%f204, %f201, %f203;
	setp.lt.f32	%p15, %f193, 0fC2D20000;
	selp.f32	%f205, 0f00000000, %f204, %p15;
	setp.gt.f32	%p16, %f193, 0f42D20000;
	selp.f32	%f752, 0f7F800000, %f205, %p16;
	setp.eq.f32	%p17, %f752, 0f7F800000;
	@%p17 bra 	BB0_5;

	fma.rn.f32 	%f752, %f752, %f20, %f752;

BB0_5:
	mov.f32 	%f703, 0f40000000;
	cvt.rzi.f32.f32	%f702, %f703;
	add.f32 	%f701, %f702, %f702;
	mov.f32 	%f700, 0f40800000;
	sub.f32 	%f699, %f700, %f701;
	abs.f32 	%f698, %f699;
	setp.lt.f32	%p18, %f17, 0f00000000;
	setp.eq.f32	%p19, %f698, 0f3F800000;
	and.pred  	%p1, %p18, %p19;
	mov.b32 	 %r53, %f752;
	xor.b32  	%r54, %r53, -2147483648;
	mov.b32 	 %f206, %r54;
	selp.f32	%f754, %f206, %f752, %p1;
	setp.eq.f32	%p20, %f17, 0f00000000;
	@%p20 bra 	BB0_8;
	bra.uni 	BB0_6;

BB0_8:
	add.f32 	%f209, %f17, %f17;
	selp.f32	%f754, %f209, 0f00000000, %p19;
	bra.uni 	BB0_9;

BB0_6:
	setp.geu.f32	%p21, %f17, 0f00000000;
	@%p21 bra 	BB0_9;

	mov.f32 	%f748, 0f40800000;
	cvt.rzi.f32.f32	%f208, %f748;
	setp.neu.f32	%p22, %f208, 0f40800000;
	selp.f32	%f754, 0f7FFFFFFF, %f754, %p22;

BB0_9:
	abs.f32 	%f704, %f17;
	add.f32 	%f210, %f704, 0f40800000;
	mov.b32 	 %r55, %f210;
	setp.lt.s32	%p24, %r55, 2139095040;
	@%p24 bra 	BB0_14;

	abs.f32 	%f746, %f17;
	setp.gtu.f32	%p25, %f746, 0f7F800000;
	@%p25 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f754, %f17, 0f40800000;
	bra.uni 	BB0_14;

BB0_11:
	abs.f32 	%f747, %f17;
	setp.neu.f32	%p26, %f747, 0f7F800000;
	@%p26 bra 	BB0_14;

	selp.f32	%f754, 0fFF800000, 0f7F800000, %p1;

BB0_14:
	sub.f32 	%f710, %f11, %f12;
	mul.f32 	%f709, %f710, %f128;
	sub.f32 	%f708, %f7, %f8;
	mul.f32 	%f707, %f708, %f128;
	sub.f32 	%f706, %f9, %f10;
	mul.f32 	%f705, %f706, %f128;
	mov.f32 	%f760, 0f3F800000;
	sub.f32 	%f212, %f760, %f754;
	setp.eq.f32	%p27, %f17, 0f3F800000;
	selp.f32	%f213, 0f00000000, %f212, %p27;
	cvt.sat.f32.f32	%f214, %f213;
	ld.global.f32 	%f215, [lightFalloffMinRadiusSq];
	fma.rn.f32 	%f216, %f16, %f16, %f215;
	div.rn.f32 	%f217, %f214, %f216;
	mul.f32 	%f218, %f750, %f705;
	fma.rn.f32 	%f219, %f749, %f707, %f218;
	fma.rn.f32 	%f220, %f751, %f709, %f219;
	ld.global.u32 	%r164, [imageEnabled];
	and.b32  	%r56, %r164, 32;
	ld.global.u32 	%r57, [ignoreNormal];
	or.b32  	%r58, %r56, %r57;
	setp.eq.s32	%p28, %r58, 0;
	selp.f32	%f221, %f220, 0f3F800000, %p28;
	cvt.sat.f32.f32	%f222, %f221;
	ld.global.f32 	%f223, [lightConeDir];
	mul.f32 	%f224, %f707, %f223;
	ld.global.f32 	%f225, [lightConeDir+4];
	mul.f32 	%f226, %f705, %f225;
	neg.f32 	%f227, %f226;
	sub.f32 	%f228, %f227, %f224;
	ld.global.f32 	%f229, [lightConeDir+8];
	mul.f32 	%f230, %f709, %f229;
	sub.f32 	%f231, %f228, %f230;
	ld.global.v2.f32 	{%f232, %f233}, [lightCone];
	fma.rn.f32 	%f236, %f232, %f231, %f233;
	cvt.sat.f32.f32	%f237, %f236;
	mul.f32 	%f238, %f237, %f237;
	mul.f32 	%f239, %f217, %f238;
	mul.f32 	%f31, %f222, %f239;
	ld.global.f32 	%f240, [lightColor+4];
	ld.global.f32 	%f241, [lightColor];
	max.f32 	%f242, %f241, %f240;
	ld.global.f32 	%f243, [lightColor+8];
	max.f32 	%f244, %f242, %f243;
	mul.f32 	%f245, %f31, %f244;
	setp.lt.f32	%p29, %f245, 0f3727C5AC;
	@%p29 bra 	BB0_75;
	bra.uni 	BB0_15;

BB0_75:
	and.b32  	%r124, %r164, 1;
	setp.eq.b32	%p103, %r124, 1;
	@!%p103 bra 	BB0_77;
	bra.uni 	BB0_76;

BB0_76:
	cvt.u64.u32	%rd69, %r2;
	cvt.u64.u32	%rd70, %r3;
	mov.u64 	%rd73, image;
	cvta.global.u64 	%rd68, %rd73;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd68, %r26, %r27, %rd69, %rd70, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs37, 1;
	mov.u16 	%rs38, 0;
	st.v4.u8 	[%rd67], {%rs38, %rs38, %rs38, %rs37};
	ld.global.u32 	%r164, [imageEnabled];

BB0_77:
	and.b32  	%r127, %r164, 8;
	setp.eq.s32	%p104, %r127, 0;
	@%p104 bra 	BB0_79;

	cvt.u64.u32	%rd76, %r2;
	cvt.u64.u32	%rd77, %r3;
	mov.u64 	%rd80, image_Mask;
	cvta.global.u64 	%rd75, %rd80;
	// inline asm
	call (%rd74), _rt_buffer_get_64, (%rd75, %r26, %r26, %rd76, %rd77, %rd15, %rd15);
	// inline asm
	mov.f32 	%f679, 0f00000000;
	cvt.rzi.u32.f32	%r130, %f679;
	cvt.u16.u32	%rs39, %r130;
	mov.u16 	%rs40, 255;
	st.v2.u8 	[%rd74], {%rs39, %rs40};
	ld.global.u32 	%r164, [imageEnabled];

BB0_79:
	and.b32  	%r131, %r164, 4;
	setp.eq.s32	%p105, %r131, 0;
	@%p105 bra 	BB0_83;

	ld.global.u32 	%r132, [additive];
	setp.eq.s32	%p106, %r132, 0;
	cvt.u64.u32	%rd6, %r2;
	cvt.u64.u32	%rd7, %r3;
	mov.f32 	%f680, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f680;}

	// inline asm
	@%p106 bra 	BB0_82;

	mov.u64 	%rd93, image_HDR;
	cvta.global.u64 	%rd82, %rd93;
	mov.u32 	%r136, 8;
	// inline asm
	call (%rd81), _rt_buffer_get_64, (%rd82, %r26, %r136, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs48, %rs49, %rs50, %rs51}, [%rd81];
	// inline asm
	{  cvt.f32.f16 %f681, %rs48;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f682, %rs49;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f683, %rs50;}

	// inline asm
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd82, %r26, %r136, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	add.f32 	%f684, %f681, 0f00000000;
	add.f32 	%f685, %f682, 0f00000000;
	add.f32 	%f686, %f683, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f686;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f685;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f684;}

	// inline asm
	st.v4.u16 	[%rd87], {%rs45, %rs46, %rs47, %rs41};
	bra.uni 	BB0_83;

BB0_15:
	mov.f32 	%f758, 0f00000000;
	mul.f32 	%f247, %f8, 0f3456BF95;
	abs.f32 	%f248, %f749;
	div.rn.f32 	%f249, %f247, %f248;
	abs.f32 	%f250, %f750;
	mul.f32 	%f251, %f10, 0f3456BF95;
	div.rn.f32 	%f252, %f251, %f250;
	abs.f32 	%f253, %f751;
	mul.f32 	%f254, %f12, 0f3456BF95;
	div.rn.f32 	%f255, %f254, %f253;
	abs.f32 	%f256, %f249;
	abs.f32 	%f257, %f252;
	abs.f32 	%f258, %f255;
	mov.f32 	%f259, 0f38D1B717;
	max.f32 	%f260, %f256, %f259;
	max.f32 	%f261, %f257, %f259;
	max.f32 	%f262, %f258, %f259;
	fma.rn.f32 	%f32, %f749, %f260, %f8;
	fma.rn.f32 	%f33, %f750, %f261, %f10;
	fma.rn.f32 	%f34, %f751, %f262, %f12;
	ld.global.u32 	%r160, [samples];
	setp.lt.s32	%p30, %r160, 1;
	@%p30 bra 	BB0_18;

	mul.f32 	%f264, %f32, 0f3456BF95;
	abs.f32 	%f265, %f264;
	mul.f32 	%f266, %f33, 0f3456BF95;
	abs.f32 	%f267, %f266;
	mul.f32 	%f268, %f34, 0f3456BF95;
	abs.f32 	%f269, %f268;
	max.f32 	%f270, %f265, %f267;
	max.f32 	%f271, %f270, %f269;
	max.f32 	%f35, %f271, %f259;
	add.u64 	%rd24, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd24;
	mov.f32 	%f758, 0f00000000;
	mov.u32 	%r159, 0;
	mov.f32 	%f755, %f11;
	mov.f32 	%f756, %f9;
	mov.f32 	%f757, %f7;
	bra.uni 	BB0_17;

BB0_74:
	ld.global.f32 	%f757, [lightPos];
	ld.global.f32 	%f756, [lightPos+4];
	ld.global.f32 	%f755, [lightPos+8];
	ld.global.u32 	%r164, [imageEnabled];

BB0_17:
	cvt.rn.f32.s32	%f281, %r159;
	mul.f32 	%f282, %f281, 0f3DD32618;
	cvt.rmi.f32.f32	%f283, %f282;
	sub.f32 	%f284, %f282, %f283;
	mul.f32 	%f285, %f281, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f286, %f285;
	sub.f32 	%f287, %f285, %f286;
	mul.f32 	%f288, %f281, 0f3DC74539;
	cvt.rmi.f32.f32	%f289, %f288;
	sub.f32 	%f290, %f288, %f289;
	add.f32 	%f291, %f287, 0f4199851F;
	add.f32 	%f292, %f290, 0f4199851F;
	add.f32 	%f293, %f284, 0f4199851F;
	mul.f32 	%f294, %f287, %f292;
	fma.rn.f32 	%f295, %f284, %f291, %f294;
	fma.rn.f32 	%f296, %f293, %f290, %f295;
	add.f32 	%f297, %f284, %f296;
	add.f32 	%f298, %f287, %f296;
	add.f32 	%f299, %f290, %f296;
	add.f32 	%f300, %f297, %f298;
	mul.f32 	%f301, %f299, %f300;
	cvt.rmi.f32.f32	%f302, %f301;
	sub.f32 	%f303, %f301, %f302;
	add.f32 	%f304, %f297, %f299;
	mul.f32 	%f305, %f298, %f304;
	cvt.rmi.f32.f32	%f306, %f305;
	sub.f32 	%f307, %f305, %f306;
	add.f32 	%f308, %f298, %f299;
	mul.f32 	%f309, %f297, %f308;
	cvt.rmi.f32.f32	%f310, %f309;
	sub.f32 	%f311, %f309, %f310;
	fma.rn.f32 	%f312, %f303, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f313, %f307, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f314, %f311, 0f40000000, 0fBF800000;
	ld.global.f32 	%f315, [lightRadius];
	fma.rn.f32 	%f316, %f315, %f312, %f757;
	fma.rn.f32 	%f317, %f315, %f313, %f756;
	fma.rn.f32 	%f318, %f315, %f314, %f755;
	sub.f32 	%f319, %f316, %f8;
	sub.f32 	%f320, %f317, %f10;
	sub.f32 	%f321, %f318, %f12;
	mul.f32 	%f322, %f320, %f320;
	fma.rn.f32 	%f323, %f319, %f319, %f322;
	fma.rn.f32 	%f324, %f321, %f321, %f323;
	sqrt.rn.f32 	%f280, %f324;
	rcp.rn.f32 	%f325, %f280;
	mul.f32 	%f276, %f325, %f319;
	mul.f32 	%f277, %f325, %f320;
	mul.f32 	%f278, %f325, %f321;
	and.b32  	%r63, %r164, 32;
	setp.eq.s32	%p31, %r63, 0;
	selp.f32	%f326, 0f3F800000, 0f41200000, %p31;
	mul.f32 	%f279, %f326, %f35;
	mov.u32 	%r64, 1065353216;
	st.local.u32 	[%rd2], %r64;
	ld.global.u32 	%r60, [root];
	mov.u32 	%r61, 1;
	// inline asm
	call _rt_trace_64, (%r60, %f32, %f33, %f34, %f276, %f277, %f278, %r61, %f279, %f280, %rd24, %r27);
	// inline asm
	ld.local.f32 	%f327, [%rd2];
	add.f32 	%f758, %f758, %f327;
	ld.global.u32 	%r160, [samples];
	add.s32 	%r159, %r159, 1;
	setp.lt.s32	%p32, %r159, %r160;
	@%p32 bra 	BB0_74;

BB0_18:
	setp.eq.s32	%p33, %r160, 0;
	@%p33 bra 	BB0_20;

	cvt.rn.f32.s32	%f329, %r160;
	div.rn.f32 	%f760, %f758, %f329;

BB0_20:
	ld.global.f32 	%f330, [lightColor];
	mul.f32 	%f331, %f31, %f760;
	mul.f32 	%f44, %f330, %f331;
	ld.global.f32 	%f332, [lightColor+4];
	mul.f32 	%f45, %f331, %f332;
	ld.global.f32 	%f333, [lightColor+8];
	mul.f32 	%f46, %f331, %f333;
	ld.global.u32 	%r162, [imageEnabled];
	and.b32  	%r65, %r162, 8;
	setp.eq.s32	%p34, %r65, 0;
	@%p34 bra 	BB0_33;

	mov.f32 	%f718, 0fB5BFBE8E;
	mov.f32 	%f717, 0fBF317200;
	mov.f32 	%f716, 0f35BFBE8E;
	mov.f32 	%f715, 0f3F317200;
	mov.f32 	%f714, 0f3DAAAABD;
	mov.f32 	%f713, 0f3C4CAF63;
	mov.f32 	%f712, 0f3B18F0FE;
	cvt.u64.u32	%rd28, %r2;
	cvt.u64.u32	%rd29, %r3;
	mov.u64 	%rd32, image_Mask;
	cvta.global.u64 	%rd27, %rd32;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r26, %r26, %rd28, %rd29, %rd15, %rd15);
	// inline asm
	mov.f32 	%f336, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f337, %f336;
	fma.rn.f32 	%f338, %f337, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f47, %f338;
	abs.f32 	%f48, %f760;
	setp.lt.f32	%p35, %f48, 0f00800000;
	mul.f32 	%f339, %f48, 0f4B800000;
	selp.f32	%f340, 0fC3170000, 0fC2FE0000, %p35;
	selp.f32	%f341, %f339, %f48, %p35;
	mov.b32 	 %r68, %f341;
	and.b32  	%r69, %r68, 8388607;
	or.b32  	%r70, %r69, 1065353216;
	mov.b32 	 %f342, %r70;
	shr.u32 	%r71, %r68, 23;
	cvt.rn.f32.u32	%f343, %r71;
	add.f32 	%f344, %f340, %f343;
	setp.gt.f32	%p36, %f342, 0f3FB504F3;
	mul.f32 	%f345, %f342, 0f3F000000;
	add.f32 	%f346, %f344, 0f3F800000;
	selp.f32	%f347, %f345, %f342, %p36;
	selp.f32	%f348, %f346, %f344, %p36;
	add.f32 	%f349, %f347, 0fBF800000;
	add.f32 	%f335, %f347, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f334,%f335;
	// inline asm
	add.f32 	%f350, %f349, %f349;
	mul.f32 	%f351, %f334, %f350;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f355, %f712, %f352, %f713;
	fma.rn.f32 	%f357, %f355, %f352, %f714;
	mul.rn.f32 	%f358, %f357, %f352;
	mul.rn.f32 	%f359, %f358, %f351;
	sub.f32 	%f360, %f349, %f351;
	neg.f32 	%f361, %f351;
	add.f32 	%f362, %f360, %f360;
	fma.rn.f32 	%f363, %f361, %f349, %f362;
	mul.rn.f32 	%f364, %f334, %f363;
	add.f32 	%f365, %f359, %f351;
	sub.f32 	%f366, %f351, %f365;
	add.f32 	%f367, %f359, %f366;
	add.f32 	%f368, %f364, %f367;
	add.f32 	%f369, %f365, %f368;
	sub.f32 	%f370, %f365, %f369;
	add.f32 	%f371, %f368, %f370;
	mul.rn.f32 	%f373, %f348, %f715;
	mul.rn.f32 	%f375, %f348, %f716;
	add.f32 	%f376, %f373, %f369;
	sub.f32 	%f377, %f373, %f376;
	add.f32 	%f378, %f369, %f377;
	add.f32 	%f379, %f371, %f378;
	add.f32 	%f380, %f375, %f379;
	add.f32 	%f381, %f376, %f380;
	sub.f32 	%f382, %f376, %f381;
	add.f32 	%f383, %f380, %f382;
	mov.f32 	%f384, 0f3EE8BA2E;
	mul.rn.f32 	%f385, %f384, %f381;
	neg.f32 	%f386, %f385;
	fma.rn.f32 	%f387, %f384, %f381, %f386;
	fma.rn.f32 	%f388, %f384, %f383, %f387;
	mov.f32 	%f389, 0f00000000;
	fma.rn.f32 	%f390, %f389, %f381, %f388;
	add.rn.f32 	%f391, %f385, %f390;
	neg.f32 	%f392, %f391;
	add.rn.f32 	%f393, %f385, %f392;
	add.rn.f32 	%f394, %f393, %f390;
	mov.b32 	 %r72, %f391;
	setp.eq.s32	%p37, %r72, 1118925336;
	add.s32 	%r73, %r72, -1;
	mov.b32 	 %f395, %r73;
	add.f32 	%f396, %f394, 0f37000000;
	selp.f32	%f397, %f395, %f391, %p37;
	selp.f32	%f49, %f396, %f394, %p37;
	mul.f32 	%f398, %f397, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f399, %f398;
	fma.rn.f32 	%f401, %f399, %f717, %f397;
	fma.rn.f32 	%f403, %f399, %f718, %f401;
	mul.f32 	%f404, %f403, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f405, %f404;
	add.f32 	%f406, %f399, 0f00000000;
	ex2.approx.f32 	%f407, %f406;
	mul.f32 	%f408, %f405, %f407;
	setp.lt.f32	%p38, %f397, 0fC2D20000;
	selp.f32	%f409, 0f00000000, %f408, %p38;
	setp.gt.f32	%p39, %f397, 0f42D20000;
	selp.f32	%f761, 0f7F800000, %f409, %p39;
	setp.eq.f32	%p40, %f761, 0f7F800000;
	@%p40 bra 	BB0_23;

	fma.rn.f32 	%f761, %f761, %f49, %f761;

BB0_23:
	setp.lt.f32	%p41, %f760, 0f00000000;
	setp.eq.f32	%p42, %f47, 0f3F800000;
	and.pred  	%p2, %p41, %p42;
	mov.b32 	 %r74, %f761;
	xor.b32  	%r75, %r74, -2147483648;
	mov.b32 	 %f410, %r75;
	selp.f32	%f763, %f410, %f761, %p2;
	setp.eq.f32	%p43, %f760, 0f00000000;
	@%p43 bra 	BB0_26;
	bra.uni 	BB0_24;

BB0_26:
	add.f32 	%f413, %f760, %f760;
	selp.f32	%f763, %f413, 0f00000000, %p42;
	bra.uni 	BB0_27;

BB0_92:
	mov.u64 	%rd141, image_HDR;
	cvta.global.u64 	%rd136, %rd141;
	mov.u32 	%r155, 8;
	// inline asm
	call (%rd135), _rt_buffer_get_64, (%rd136, %r26, %r155, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	mov.f32 	%f697, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f697;}

	// inline asm
	mov.u16 	%rs72, 0;
	st.v4.u16 	[%rd135], {%rs71, %rs71, %rs71, %rs72};

BB0_93:
	ld.global.u8 	%rs73, [imageEnabled];
	and.b16  	%rs74, %rs73, 64;
	setp.eq.s16	%p112, %rs74, 0;
	@%p112 bra 	BB0_95;

	cvt.u64.u32	%rd144, %r2;
	cvt.u64.u32	%rd145, %r3;
	mov.u64 	%rd148, image_Dir;
	cvta.global.u64 	%rd143, %rd148;
	// inline asm
	call (%rd142), _rt_buffer_get_64, (%rd143, %r26, %r27, %rd144, %rd145, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs75, 0;
	st.v4.u8 	[%rd142], {%rs75, %rs75, %rs75, %rs75};
	bra.uni 	BB0_95;

BB0_82:
	mov.u64 	%rd100, image_HDR;
	cvta.global.u64 	%rd95, %rd100;
	mov.u32 	%r138, 8;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r26, %r138, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	mov.f32 	%f687, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f687;}

	// inline asm
	st.v4.u16 	[%rd94], {%rs52, %rs52, %rs52, %rs41};

BB0_83:
	ld.global.u8 	%rs53, [imageEnabled];
	and.b16  	%rs54, %rs53, 64;
	setp.eq.s16	%p107, %rs54, 0;
	@%p107 bra 	BB0_95;

	cvt.u64.u32	%rd103, %r2;
	cvt.u64.u32	%rd104, %r3;
	mov.u64 	%rd107, image_Dir;
	cvta.global.u64 	%rd102, %rd107;
	// inline asm
	call (%rd101), _rt_buffer_get_64, (%rd102, %r26, %r27, %rd103, %rd104, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs55, 255;
	mov.u16 	%rs56, 0;
	st.v4.u8 	[%rd101], {%rs56, %rs56, %rs56, %rs55};
	bra.uni 	BB0_95;

BB0_24:
	setp.geu.f32	%p44, %f760, 0f00000000;
	@%p44 bra 	BB0_27;

	cvt.rzi.f32.f32	%f412, %f384;
	setp.neu.f32	%p45, %f412, 0f3EE8BA2E;
	selp.f32	%f763, 0f7FFFFFFF, %f763, %p45;

BB0_27:
	add.f32 	%f414, %f48, 0f3EE8BA2E;
	mov.b32 	 %r76, %f414;
	setp.lt.s32	%p47, %r76, 2139095040;
	@%p47 bra 	BB0_32;

	setp.gtu.f32	%p48, %f48, 0f7F800000;
	@%p48 bra 	BB0_31;
	bra.uni 	BB0_29;

BB0_31:
	add.f32 	%f763, %f760, 0f3EE8BA2E;
	bra.uni 	BB0_32;

BB0_29:
	setp.neu.f32	%p49, %f48, 0f7F800000;
	@%p49 bra 	BB0_32;

	selp.f32	%f763, 0fFF800000, 0f7F800000, %p2;

BB0_32:
	mul.f32 	%f415, %f763, 0f437F0000;
	setp.eq.f32	%p50, %f760, 0f3F800000;
	selp.f32	%f416, 0f437F0000, %f415, %p50;
	cvt.rzi.u32.f32	%r77, %f416;
	cvt.u16.u32	%rs11, %r77;
	mov.u16 	%rs12, 255;
	st.v2.u8 	[%rd26], {%rs11, %rs12};
	ld.global.u32 	%r162, [imageEnabled];

BB0_33:
	and.b32  	%r78, %r162, 1;
	setp.eq.b32	%p51, %r78, 1;
	@!%p51 bra 	BB0_68;
	bra.uni 	BB0_34;

BB0_34:
	mov.f32 	%f725, 0fB5BFBE8E;
	mov.f32 	%f724, 0fBF317200;
	mov.f32 	%f723, 0f35BFBE8E;
	mov.f32 	%f722, 0f3F317200;
	mov.f32 	%f721, 0f3DAAAABD;
	mov.f32 	%f720, 0f3C4CAF63;
	mov.f32 	%f719, 0f3B18F0FE;
	mov.f32 	%f419, 0f3E666666;
	cvt.rzi.f32.f32	%f420, %f419;
	fma.rn.f32 	%f421, %f420, 0fC0000000, 0f3EE66666;
	abs.f32 	%f60, %f421;
	abs.f32 	%f61, %f44;
	setp.lt.f32	%p52, %f61, 0f00800000;
	mul.f32 	%f422, %f61, 0f4B800000;
	selp.f32	%f423, 0fC3170000, 0fC2FE0000, %p52;
	selp.f32	%f424, %f422, %f61, %p52;
	mov.b32 	 %r79, %f424;
	and.b32  	%r80, %r79, 8388607;
	or.b32  	%r81, %r80, 1065353216;
	mov.b32 	 %f425, %r81;
	shr.u32 	%r82, %r79, 23;
	cvt.rn.f32.u32	%f426, %r82;
	add.f32 	%f427, %f423, %f426;
	setp.gt.f32	%p53, %f425, 0f3FB504F3;
	mul.f32 	%f428, %f425, 0f3F000000;
	add.f32 	%f429, %f427, 0f3F800000;
	selp.f32	%f430, %f428, %f425, %p53;
	selp.f32	%f431, %f429, %f427, %p53;
	add.f32 	%f432, %f430, 0fBF800000;
	add.f32 	%f418, %f430, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f417,%f418;
	// inline asm
	add.f32 	%f433, %f432, %f432;
	mul.f32 	%f434, %f417, %f433;
	mul.f32 	%f435, %f434, %f434;
	fma.rn.f32 	%f438, %f719, %f435, %f720;
	fma.rn.f32 	%f440, %f438, %f435, %f721;
	mul.rn.f32 	%f441, %f440, %f435;
	mul.rn.f32 	%f442, %f441, %f434;
	sub.f32 	%f443, %f432, %f434;
	neg.f32 	%f444, %f434;
	add.f32 	%f445, %f443, %f443;
	fma.rn.f32 	%f446, %f444, %f432, %f445;
	mul.rn.f32 	%f447, %f417, %f446;
	add.f32 	%f448, %f442, %f434;
	sub.f32 	%f449, %f434, %f448;
	add.f32 	%f450, %f442, %f449;
	add.f32 	%f451, %f447, %f450;
	add.f32 	%f452, %f448, %f451;
	sub.f32 	%f453, %f448, %f452;
	add.f32 	%f454, %f451, %f453;
	mul.rn.f32 	%f456, %f431, %f722;
	mul.rn.f32 	%f458, %f431, %f723;
	add.f32 	%f459, %f456, %f452;
	sub.f32 	%f460, %f456, %f459;
	add.f32 	%f461, %f452, %f460;
	add.f32 	%f462, %f454, %f461;
	add.f32 	%f463, %f458, %f462;
	add.f32 	%f464, %f459, %f463;
	sub.f32 	%f465, %f459, %f464;
	add.f32 	%f466, %f463, %f465;
	mov.f32 	%f467, 0f3EE66666;
	mul.rn.f32 	%f468, %f467, %f464;
	neg.f32 	%f469, %f468;
	fma.rn.f32 	%f470, %f467, %f464, %f469;
	fma.rn.f32 	%f471, %f467, %f466, %f470;
	mov.f32 	%f472, 0f00000000;
	fma.rn.f32 	%f473, %f472, %f464, %f471;
	add.rn.f32 	%f474, %f468, %f473;
	neg.f32 	%f475, %f474;
	add.rn.f32 	%f476, %f468, %f475;
	add.rn.f32 	%f477, %f476, %f473;
	mov.b32 	 %r83, %f474;
	setp.eq.s32	%p54, %r83, 1118925336;
	add.s32 	%r84, %r83, -1;
	mov.b32 	 %f478, %r84;
	add.f32 	%f479, %f477, 0f37000000;
	selp.f32	%f480, %f478, %f474, %p54;
	selp.f32	%f62, %f479, %f477, %p54;
	mul.f32 	%f481, %f480, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f482, %f481;
	fma.rn.f32 	%f484, %f482, %f724, %f480;
	fma.rn.f32 	%f486, %f482, %f725, %f484;
	mul.f32 	%f487, %f486, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f488, %f487;
	add.f32 	%f489, %f482, 0f00000000;
	ex2.approx.f32 	%f490, %f489;
	mul.f32 	%f491, %f488, %f490;
	setp.lt.f32	%p55, %f480, 0fC2D20000;
	selp.f32	%f492, 0f00000000, %f491, %p55;
	setp.gt.f32	%p56, %f480, 0f42D20000;
	selp.f32	%f764, 0f7F800000, %f492, %p56;
	setp.eq.f32	%p57, %f764, 0f7F800000;
	@%p57 bra 	BB0_36;

	fma.rn.f32 	%f764, %f764, %f62, %f764;

BB0_36:
	setp.lt.f32	%p58, %f44, 0f00000000;
	setp.eq.f32	%p59, %f60, 0f3F800000;
	and.pred  	%p3, %p58, %p59;
	mov.b32 	 %r85, %f764;
	xor.b32  	%r86, %r85, -2147483648;
	mov.b32 	 %f493, %r86;
	selp.f32	%f766, %f493, %f764, %p3;
	setp.eq.f32	%p60, %f44, 0f00000000;
	@%p60 bra 	BB0_39;
	bra.uni 	BB0_37;

BB0_39:
	add.f32 	%f496, %f44, %f44;
	selp.f32	%f766, %f496, 0f00000000, %p59;
	bra.uni 	BB0_40;

BB0_37:
	setp.geu.f32	%p61, %f44, 0f00000000;
	@%p61 bra 	BB0_40;

	cvt.rzi.f32.f32	%f495, %f467;
	setp.neu.f32	%p62, %f495, 0f3EE66666;
	selp.f32	%f766, 0f7FFFFFFF, %f766, %p62;

BB0_40:
	add.f32 	%f497, %f61, 0f3EE66666;
	mov.b32 	 %r87, %f497;
	setp.lt.s32	%p64, %r87, 2139095040;
	@%p64 bra 	BB0_45;

	setp.gtu.f32	%p65, %f61, 0f7F800000;
	@%p65 bra 	BB0_44;
	bra.uni 	BB0_42;

BB0_44:
	add.f32 	%f766, %f44, 0f3EE66666;
	bra.uni 	BB0_45;

BB0_42:
	setp.neu.f32	%p66, %f61, 0f7F800000;
	@%p66 bra 	BB0_45;

	selp.f32	%f766, 0fFF800000, 0f7F800000, %p3;

BB0_45:
	mov.f32 	%f732, 0fB5BFBE8E;
	mov.f32 	%f731, 0fBF317200;
	mov.f32 	%f730, 0f35BFBE8E;
	mov.f32 	%f729, 0f3F317200;
	mov.f32 	%f728, 0f3DAAAABD;
	mov.f32 	%f727, 0f3C4CAF63;
	mov.f32 	%f726, 0f3B18F0FE;
	setp.eq.f32	%p67, %f44, 0f3F800000;
	selp.f32	%f73, 0f3F800000, %f766, %p67;
	abs.f32 	%f74, %f45;
	setp.lt.f32	%p68, %f74, 0f00800000;
	mul.f32 	%f500, %f74, 0f4B800000;
	selp.f32	%f501, 0fC3170000, 0fC2FE0000, %p68;
	selp.f32	%f502, %f500, %f74, %p68;
	mov.b32 	 %r88, %f502;
	and.b32  	%r89, %r88, 8388607;
	or.b32  	%r90, %r89, 1065353216;
	mov.b32 	 %f503, %r90;
	shr.u32 	%r91, %r88, 23;
	cvt.rn.f32.u32	%f504, %r91;
	add.f32 	%f505, %f501, %f504;
	setp.gt.f32	%p69, %f503, 0f3FB504F3;
	mul.f32 	%f506, %f503, 0f3F000000;
	add.f32 	%f507, %f505, 0f3F800000;
	selp.f32	%f508, %f506, %f503, %p69;
	selp.f32	%f509, %f507, %f505, %p69;
	add.f32 	%f510, %f508, 0fBF800000;
	add.f32 	%f499, %f508, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f498,%f499;
	// inline asm
	add.f32 	%f511, %f510, %f510;
	mul.f32 	%f512, %f498, %f511;
	mul.f32 	%f513, %f512, %f512;
	fma.rn.f32 	%f516, %f726, %f513, %f727;
	fma.rn.f32 	%f518, %f516, %f513, %f728;
	mul.rn.f32 	%f519, %f518, %f513;
	mul.rn.f32 	%f520, %f519, %f512;
	sub.f32 	%f521, %f510, %f512;
	neg.f32 	%f522, %f512;
	add.f32 	%f523, %f521, %f521;
	fma.rn.f32 	%f524, %f522, %f510, %f523;
	mul.rn.f32 	%f525, %f498, %f524;
	add.f32 	%f526, %f520, %f512;
	sub.f32 	%f527, %f512, %f526;
	add.f32 	%f528, %f520, %f527;
	add.f32 	%f529, %f525, %f528;
	add.f32 	%f530, %f526, %f529;
	sub.f32 	%f531, %f526, %f530;
	add.f32 	%f532, %f529, %f531;
	mul.rn.f32 	%f534, %f509, %f729;
	mul.rn.f32 	%f536, %f509, %f730;
	add.f32 	%f537, %f534, %f530;
	sub.f32 	%f538, %f534, %f537;
	add.f32 	%f539, %f530, %f538;
	add.f32 	%f540, %f532, %f539;
	add.f32 	%f541, %f536, %f540;
	add.f32 	%f542, %f537, %f541;
	sub.f32 	%f543, %f537, %f542;
	add.f32 	%f544, %f541, %f543;
	mul.rn.f32 	%f546, %f467, %f542;
	neg.f32 	%f547, %f546;
	fma.rn.f32 	%f548, %f467, %f542, %f547;
	fma.rn.f32 	%f549, %f467, %f544, %f548;
	fma.rn.f32 	%f551, %f472, %f542, %f549;
	add.rn.f32 	%f552, %f546, %f551;
	neg.f32 	%f553, %f552;
	add.rn.f32 	%f554, %f546, %f553;
	add.rn.f32 	%f555, %f554, %f551;
	mov.b32 	 %r92, %f552;
	setp.eq.s32	%p70, %r92, 1118925336;
	add.s32 	%r93, %r92, -1;
	mov.b32 	 %f556, %r93;
	add.f32 	%f557, %f555, 0f37000000;
	selp.f32	%f558, %f556, %f552, %p70;
	selp.f32	%f75, %f557, %f555, %p70;
	mul.f32 	%f559, %f558, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f560, %f559;
	fma.rn.f32 	%f562, %f560, %f731, %f558;
	fma.rn.f32 	%f564, %f560, %f732, %f562;
	mul.f32 	%f565, %f564, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f566, %f565;
	add.f32 	%f567, %f560, 0f00000000;
	ex2.approx.f32 	%f568, %f567;
	mul.f32 	%f569, %f566, %f568;
	setp.lt.f32	%p71, %f558, 0fC2D20000;
	selp.f32	%f570, 0f00000000, %f569, %p71;
	setp.gt.f32	%p72, %f558, 0f42D20000;
	selp.f32	%f767, 0f7F800000, %f570, %p72;
	setp.eq.f32	%p73, %f767, 0f7F800000;
	@%p73 bra 	BB0_47;

	fma.rn.f32 	%f767, %f767, %f75, %f767;

BB0_47:
	setp.lt.f32	%p74, %f45, 0f00000000;
	and.pred  	%p4, %p74, %p59;
	mov.b32 	 %r94, %f767;
	xor.b32  	%r95, %r94, -2147483648;
	mov.b32 	 %f571, %r95;
	selp.f32	%f769, %f571, %f767, %p4;
	setp.eq.f32	%p76, %f45, 0f00000000;
	@%p76 bra 	BB0_50;
	bra.uni 	BB0_48;

BB0_50:
	add.f32 	%f574, %f45, %f45;
	selp.f32	%f769, %f574, 0f00000000, %p59;
	bra.uni 	BB0_51;

BB0_48:
	setp.geu.f32	%p77, %f45, 0f00000000;
	@%p77 bra 	BB0_51;

	cvt.rzi.f32.f32	%f573, %f467;
	setp.neu.f32	%p78, %f573, 0f3EE66666;
	selp.f32	%f769, 0f7FFFFFFF, %f769, %p78;

BB0_51:
	add.f32 	%f575, %f74, 0f3EE66666;
	mov.b32 	 %r96, %f575;
	setp.lt.s32	%p80, %r96, 2139095040;
	@%p80 bra 	BB0_56;

	setp.gtu.f32	%p81, %f74, 0f7F800000;
	@%p81 bra 	BB0_55;
	bra.uni 	BB0_53;

BB0_55:
	add.f32 	%f769, %f45, 0f3EE66666;
	bra.uni 	BB0_56;

BB0_53:
	setp.neu.f32	%p82, %f74, 0f7F800000;
	@%p82 bra 	BB0_56;

	selp.f32	%f769, 0fFF800000, 0f7F800000, %p4;

BB0_56:
	mov.f32 	%f739, 0fB5BFBE8E;
	mov.f32 	%f738, 0fBF317200;
	mov.f32 	%f737, 0f35BFBE8E;
	mov.f32 	%f736, 0f3F317200;
	mov.f32 	%f735, 0f3DAAAABD;
	mov.f32 	%f734, 0f3C4CAF63;
	mov.f32 	%f733, 0f3B18F0FE;
	setp.eq.f32	%p83, %f45, 0f3F800000;
	selp.f32	%f86, 0f3F800000, %f769, %p83;
	abs.f32 	%f87, %f46;
	setp.lt.f32	%p84, %f87, 0f00800000;
	mul.f32 	%f578, %f87, 0f4B800000;
	selp.f32	%f579, 0fC3170000, 0fC2FE0000, %p84;
	selp.f32	%f580, %f578, %f87, %p84;
	mov.b32 	 %r97, %f580;
	and.b32  	%r98, %r97, 8388607;
	or.b32  	%r99, %r98, 1065353216;
	mov.b32 	 %f581, %r99;
	shr.u32 	%r100, %r97, 23;
	cvt.rn.f32.u32	%f582, %r100;
	add.f32 	%f583, %f579, %f582;
	setp.gt.f32	%p85, %f581, 0f3FB504F3;
	mul.f32 	%f584, %f581, 0f3F000000;
	add.f32 	%f585, %f583, 0f3F800000;
	selp.f32	%f586, %f584, %f581, %p85;
	selp.f32	%f587, %f585, %f583, %p85;
	add.f32 	%f588, %f586, 0fBF800000;
	add.f32 	%f577, %f586, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f576,%f577;
	// inline asm
	add.f32 	%f589, %f588, %f588;
	mul.f32 	%f590, %f576, %f589;
	mul.f32 	%f591, %f590, %f590;
	fma.rn.f32 	%f594, %f733, %f591, %f734;
	fma.rn.f32 	%f596, %f594, %f591, %f735;
	mul.rn.f32 	%f597, %f596, %f591;
	mul.rn.f32 	%f598, %f597, %f590;
	sub.f32 	%f599, %f588, %f590;
	neg.f32 	%f600, %f590;
	add.f32 	%f601, %f599, %f599;
	fma.rn.f32 	%f602, %f600, %f588, %f601;
	mul.rn.f32 	%f603, %f576, %f602;
	add.f32 	%f604, %f598, %f590;
	sub.f32 	%f605, %f590, %f604;
	add.f32 	%f606, %f598, %f605;
	add.f32 	%f607, %f603, %f606;
	add.f32 	%f608, %f604, %f607;
	sub.f32 	%f609, %f604, %f608;
	add.f32 	%f610, %f607, %f609;
	mul.rn.f32 	%f612, %f587, %f736;
	mul.rn.f32 	%f614, %f587, %f737;
	add.f32 	%f615, %f612, %f608;
	sub.f32 	%f616, %f612, %f615;
	add.f32 	%f617, %f608, %f616;
	add.f32 	%f618, %f610, %f617;
	add.f32 	%f619, %f614, %f618;
	add.f32 	%f620, %f615, %f619;
	sub.f32 	%f621, %f615, %f620;
	add.f32 	%f622, %f619, %f621;
	mul.rn.f32 	%f624, %f467, %f620;
	neg.f32 	%f625, %f624;
	fma.rn.f32 	%f626, %f467, %f620, %f625;
	fma.rn.f32 	%f627, %f467, %f622, %f626;
	fma.rn.f32 	%f629, %f472, %f620, %f627;
	add.rn.f32 	%f630, %f624, %f629;
	neg.f32 	%f631, %f630;
	add.rn.f32 	%f632, %f624, %f631;
	add.rn.f32 	%f633, %f632, %f629;
	mov.b32 	 %r101, %f630;
	setp.eq.s32	%p86, %r101, 1118925336;
	add.s32 	%r102, %r101, -1;
	mov.b32 	 %f634, %r102;
	add.f32 	%f635, %f633, 0f37000000;
	selp.f32	%f636, %f634, %f630, %p86;
	selp.f32	%f88, %f635, %f633, %p86;
	mul.f32 	%f637, %f636, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f638, %f637;
	fma.rn.f32 	%f640, %f638, %f738, %f636;
	fma.rn.f32 	%f642, %f638, %f739, %f640;
	mul.f32 	%f643, %f642, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f644, %f643;
	add.f32 	%f645, %f638, 0f00000000;
	ex2.approx.f32 	%f646, %f645;
	mul.f32 	%f647, %f644, %f646;
	setp.lt.f32	%p87, %f636, 0fC2D20000;
	selp.f32	%f648, 0f00000000, %f647, %p87;
	setp.gt.f32	%p88, %f636, 0f42D20000;
	selp.f32	%f770, 0f7F800000, %f648, %p88;
	setp.eq.f32	%p89, %f770, 0f7F800000;
	@%p89 bra 	BB0_58;

	fma.rn.f32 	%f770, %f770, %f88, %f770;

BB0_58:
	setp.lt.f32	%p90, %f46, 0f00000000;
	and.pred  	%p5, %p90, %p59;
	mov.b32 	 %r103, %f770;
	xor.b32  	%r104, %r103, -2147483648;
	mov.b32 	 %f649, %r104;
	selp.f32	%f772, %f649, %f770, %p5;
	setp.eq.f32	%p92, %f46, 0f00000000;
	@%p92 bra 	BB0_61;
	bra.uni 	BB0_59;

BB0_61:
	add.f32 	%f652, %f46, %f46;
	selp.f32	%f772, %f652, 0f00000000, %p59;
	bra.uni 	BB0_62;

BB0_59:
	setp.geu.f32	%p93, %f46, 0f00000000;
	@%p93 bra 	BB0_62;

	cvt.rzi.f32.f32	%f651, %f467;
	setp.neu.f32	%p94, %f651, 0f3EE66666;
	selp.f32	%f772, 0f7FFFFFFF, %f772, %p94;

BB0_62:
	add.f32 	%f653, %f87, 0f3EE66666;
	mov.b32 	 %r105, %f653;
	setp.lt.s32	%p96, %r105, 2139095040;
	@%p96 bra 	BB0_67;

	setp.gtu.f32	%p97, %f87, 0f7F800000;
	@%p97 bra 	BB0_66;
	bra.uni 	BB0_64;

BB0_66:
	add.f32 	%f772, %f46, 0f3EE66666;
	bra.uni 	BB0_67;

BB0_64:
	setp.neu.f32	%p98, %f87, 0f7F800000;
	@%p98 bra 	BB0_67;

	selp.f32	%f772, 0fFF800000, 0f7F800000, %p5;

BB0_67:
	setp.eq.f32	%p99, %f46, 0f3F800000;
	selp.f32	%f654, 0f3F800000, %f772, %p99;
	cvt.u64.u32	%rd36, %r3;
	cvt.u64.u32	%rd35, %r2;
	mov.u64 	%rd39, image;
	cvta.global.u64 	%rd34, %rd39;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r26, %r27, %rd35, %rd36, %rd15, %rd15);
	// inline asm
	cvt.sat.f32.f32	%f655, %f654;
	mul.f32 	%f656, %f655, 0f437FFD71;
	cvt.rzi.u32.f32	%r108, %f656;
	cvt.sat.f32.f32	%f657, %f86;
	mul.f32 	%f658, %f657, 0f437FFD71;
	cvt.rzi.u32.f32	%r109, %f658;
	cvt.sat.f32.f32	%f659, %f73;
	mul.f32 	%f660, %f659, 0f437FFD71;
	cvt.rzi.u32.f32	%r110, %f660;
	cvt.u16.u32	%rs13, %r108;
	cvt.u16.u32	%rs14, %r110;
	cvt.u16.u32	%rs15, %r109;
	mov.u16 	%rs16, 255;
	st.v4.u8 	[%rd33], {%rs13, %rs15, %rs14, %rs16};
	ld.global.u32 	%r162, [imageEnabled];

BB0_68:
	and.b32  	%r111, %r162, 4;
	setp.eq.s32	%p100, %r111, 0;
	@%p100 bra 	BB0_72;

	ld.global.u32 	%r112, [additive];
	setp.eq.s32	%p101, %r112, 0;
	cvt.u64.u32	%rd4, %r2;
	cvt.u64.u32	%rd5, %r3;
	mov.f32 	%f661, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs17, %f661;}

	// inline asm
	@%p101 bra 	BB0_71;

	mov.u64 	%rd52, image_HDR;
	cvta.global.u64 	%rd41, %rd52;
	mov.u32 	%r116, 8;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd41, %r26, %r116, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs24, %rs25, %rs26, %rs27}, [%rd40];
	// inline asm
	{  cvt.f32.f16 %f662, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f663, %rs25;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f664, %rs26;}

	// inline asm
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd41, %r26, %r116, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	add.f32 	%f665, %f44, %f662;
	add.f32 	%f666, %f45, %f663;
	add.f32 	%f667, %f46, %f664;
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f667;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f666;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f665;}

	// inline asm
	st.v4.u16 	[%rd46], {%rs21, %rs22, %rs23, %rs17};
	bra.uni 	BB0_72;

BB0_71:
	mov.u64 	%rd59, image_HDR;
	cvta.global.u64 	%rd54, %rd59;
	mov.u32 	%r118, 8;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r26, %r118, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f46;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f45;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f44;}

	// inline asm
	st.v4.u16 	[%rd53], {%rs28, %rs29, %rs30, %rs17};

BB0_72:
	ld.global.u8 	%rs31, [imageEnabled];
	and.b16  	%rs32, %rs31, 64;
	setp.eq.s16	%p102, %rs32, 0;
	@%p102 bra 	BB0_95;

	sub.f32 	%f745, %f11, %f12;
	mul.f32 	%f744, %f745, %f128;
	sub.f32 	%f743, %f7, %f8;
	mul.f32 	%f742, %f743, %f128;
	sub.f32 	%f741, %f9, %f10;
	mul.f32 	%f740, %f741, %f128;
	cvt.u64.u32	%rd62, %r2;
	cvt.u64.u32	%rd63, %r3;
	mov.u64 	%rd66, image_Dir;
	cvta.global.u64 	%rd61, %rd66;
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd61, %r26, %r27, %rd62, %rd63, %rd15, %rd15);
	// inline asm
	fma.rn.f32 	%f671, %f742, 0f3F000000, 0f3F000000;
	mul.f32 	%f672, %f671, 0f437F0000;
	cvt.rzi.u32.f32	%r121, %f672;
	fma.rn.f32 	%f673, %f740, 0f3F000000, 0f3F000000;
	mul.f32 	%f674, %f673, 0f437F0000;
	cvt.rzi.u32.f32	%r122, %f674;
	fma.rn.f32 	%f675, %f744, 0f3F000000, 0f3F000000;
	mul.f32 	%f676, %f675, 0f437F0000;
	cvt.rzi.u32.f32	%r123, %f676;
	cvt.u16.u32	%rs33, %r123;
	cvt.u16.u32	%rs34, %r122;
	cvt.u16.u32	%rs35, %r121;
	mov.u16 	%rs36, 255;
	st.v4.u8 	[%rd60], {%rs35, %rs34, %rs33, %rs36};

BB0_95:
	ret;
}


