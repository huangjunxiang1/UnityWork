//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<160>;
	.reg .b16 	%rs<101>;
	.reg .f32 	%f<1351>;
	.reg .b32 	%r<485>;
	.reg .b64 	%rd<223>;


	mov.u64 	%rd222, __local_depot0;
	cvta.local.u64 	%SP, %rd222;
	ld.global.v2.u32 	{%r114, %r115}, [pixelID];
	cvt.u64.u32	%rd26, %r114;
	cvt.u64.u32	%rd27, %r115;
	mov.u64 	%rd30, uvnormal;
	cvta.global.u64 	%rd25, %rd30;
	mov.u32 	%r112, 2;
	mov.u32 	%r113, 4;
	mov.u64 	%rd29, 0;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd25, %r112, %r113, %rd26, %rd27, %rd29, %rd29);
	// inline asm
	ld.u32 	%r1, [%rd24];
	shr.u32 	%r118, %r1, 16;
	cvt.u16.u32	%rs1, %r118;
	and.b16  	%rs12, %rs1, 255;
	cvt.u16.u32	%rs13, %r1;
	or.b16  	%rs14, %rs13, %rs12;
	setp.eq.s16	%p5, %rs14, 0;
	mov.f32 	%f1297, 0f00000000;
	mov.f32 	%f1298, %f1297;
	mov.f32 	%f1299, %f1297;
	@%p5 bra 	BB0_2;

	ld.u8 	%rs15, [%rd24+1];
	and.b16  	%rs17, %rs13, 255;
	cvt.rn.f32.u16	%f202, %rs17;
	div.rn.f32 	%f203, %f202, 0f437F0000;
	fma.rn.f32 	%f204, %f203, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f205, %rs15;
	div.rn.f32 	%f206, %f205, 0f437F0000;
	fma.rn.f32 	%f207, %f206, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f208, %rs12;
	div.rn.f32 	%f209, %f208, 0f437F0000;
	fma.rn.f32 	%f210, %f209, 0f40000000, 0fBF800000;
	mul.f32 	%f211, %f207, %f207;
	fma.rn.f32 	%f212, %f204, %f204, %f211;
	fma.rn.f32 	%f213, %f210, %f210, %f212;
	sqrt.rn.f32 	%f214, %f213;
	rcp.rn.f32 	%f215, %f214;
	mul.f32 	%f1297, %f204, %f215;
	mul.f32 	%f1298, %f207, %f215;
	mul.f32 	%f1299, %f210, %f215;

BB0_2:
	ld.global.v2.u32 	{%r119, %r120}, [pixelID];
	ld.global.v2.u32 	{%r122, %r123}, [tileInfo];
	add.s32 	%r2, %r119, %r122;
	add.s32 	%r3, %r120, %r123;
	setp.eq.f32	%p6, %f1298, 0f00000000;
	setp.eq.f32	%p7, %f1297, 0f00000000;
	and.pred  	%p8, %p7, %p6;
	setp.eq.f32	%p9, %f1299, 0f00000000;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB0_141;
	bra.uni 	BB0_3;

BB0_141:
	ld.global.u32 	%r484, [imageEnabled];
	and.b32  	%r429, %r484, 1;
	setp.eq.b32	%p155, %r429, 1;
	@!%p155 bra 	BB0_143;
	bra.uni 	BB0_142;

BB0_142:
	cvt.u64.u32	%rd179, %r2;
	cvt.u64.u32	%rd180, %r3;
	mov.u64 	%rd183, image;
	cvta.global.u64 	%rd178, %rd183;
	mov.u64 	%rd182, 0;
	// inline asm
	call (%rd177), _rt_buffer_get_64, (%rd178, %r112, %r113, %rd179, %rd180, %rd182, %rd182);
	// inline asm
	mov.u16 	%rs74, 0;
	st.v4.u8 	[%rd177], {%rs74, %rs74, %rs74, %rs74};
	ld.global.u32 	%r484, [imageEnabled];

BB0_143:
	and.b32  	%r432, %r484, 8;
	setp.eq.s32	%p156, %r432, 0;
	@%p156 bra 	BB0_145;

	cvt.u64.u32	%rd186, %r2;
	cvt.u64.u32	%rd187, %r3;
	mov.u64 	%rd190, image_Mask;
	cvta.global.u64 	%rd185, %rd190;
	mov.u64 	%rd189, 0;
	// inline asm
	call (%rd184), _rt_buffer_get_64, (%rd185, %r112, %r112, %rd186, %rd187, %rd189, %rd189);
	// inline asm
	mov.f32 	%f1287, 0f00000000;
	cvt.rzi.u32.f32	%r435, %f1287;
	cvt.u16.u32	%rs75, %r435;
	mov.u16 	%rs76, 0;
	st.v2.u8 	[%rd184], {%rs75, %rs76};
	ld.global.u32 	%r484, [imageEnabled];

BB0_145:
	and.b32  	%r436, %r484, 4;
	setp.eq.s32	%p157, %r436, 0;
	@%p157 bra 	BB0_149;

	ld.global.u32 	%r437, [additive];
	setp.eq.s32	%p158, %r437, 0;
	cvt.u64.u32	%rd22, %r2;
	cvt.u64.u32	%rd23, %r3;
	@%p158 bra 	BB0_148;

	mov.u64 	%rd203, image_HDR;
	cvta.global.u64 	%rd192, %rd203;
	mov.u32 	%r441, 8;
	mov.u64 	%rd202, 0;
	// inline asm
	call (%rd191), _rt_buffer_get_64, (%rd192, %r112, %r441, %rd22, %rd23, %rd202, %rd202);
	// inline asm
	ld.v4.u16 	{%rs83, %rs84, %rs85, %rs86}, [%rd191];
	// inline asm
	{  cvt.f32.f16 %f1288, %rs83;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1289, %rs84;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1290, %rs85;}

	// inline asm
	// inline asm
	call (%rd197), _rt_buffer_get_64, (%rd192, %r112, %r441, %rd22, %rd23, %rd202, %rd202);
	// inline asm
	add.f32 	%f1291, %f1288, 0f00000000;
	add.f32 	%f1292, %f1289, 0f00000000;
	add.f32 	%f1293, %f1290, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f1293;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f1292;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f1291;}

	// inline asm
	mov.u16 	%rs87, 0;
	st.v4.u16 	[%rd197], {%rs80, %rs81, %rs82, %rs87};
	bra.uni 	BB0_149;

BB0_3:
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f7, [directDir];
	mul.f32 	%f216, %f1297, %f7;
	mul.f32 	%f217, %f1298, %f8;
	neg.f32 	%f218, %f217;
	sub.f32 	%f219, %f218, %f216;
	mul.f32 	%f220, %f1299, %f9;
	sub.f32 	%f10, %f219, %f220;
	ld.global.u32 	%r127, [ignoreNormal];
	setp.eq.s32	%p11, %r127, 0;
	setp.le.f32	%p12, %f10, 0f00000000;
	and.pred  	%p13, %p11, %p12;
	ld.global.u32 	%r482, [imageEnabled];
	and.b32  	%r128, %r482, 32;
	setp.eq.s32	%p14, %r128, 0;
	and.pred  	%p15, %p13, %p14;
	@%p15 bra 	BB0_131;
	bra.uni 	BB0_4;

BB0_131:
	and.b32  	%r412, %r482, 1;
	setp.eq.b32	%p150, %r412, 1;
	@!%p150 bra 	BB0_133;
	bra.uni 	BB0_132;

BB0_132:
	cvt.u64.u32	%rd138, %r2;
	cvt.u64.u32	%rd139, %r3;
	mov.u64 	%rd142, image;
	cvta.global.u64 	%rd137, %rd142;
	mov.u64 	%rd141, 0;
	// inline asm
	call (%rd136), _rt_buffer_get_64, (%rd137, %r112, %r113, %rd138, %rd139, %rd141, %rd141);
	// inline asm
	mov.u16 	%rs54, 255;
	mov.u16 	%rs55, 0;
	st.v4.u8 	[%rd136], {%rs55, %rs55, %rs55, %rs54};
	ld.global.u32 	%r482, [imageEnabled];

BB0_133:
	and.b32  	%r415, %r482, 8;
	setp.eq.s32	%p151, %r415, 0;
	@%p151 bra 	BB0_135;

	cvt.u64.u32	%rd145, %r2;
	cvt.u64.u32	%rd146, %r3;
	mov.u64 	%rd149, image_Mask;
	cvta.global.u64 	%rd144, %rd149;
	mov.u64 	%rd148, 0;
	// inline asm
	call (%rd143), _rt_buffer_get_64, (%rd144, %r112, %r112, %rd145, %rd146, %rd148, %rd148);
	// inline asm
	mov.f32 	%f1276, 0f00000000;
	cvt.rzi.u32.f32	%r418, %f1276;
	cvt.u16.u32	%rs56, %r418;
	mov.u16 	%rs57, 255;
	st.v2.u8 	[%rd143], {%rs56, %rs57};
	ld.global.u32 	%r482, [imageEnabled];

BB0_135:
	and.b32  	%r419, %r482, 4;
	setp.eq.s32	%p152, %r419, 0;
	@%p152 bra 	BB0_139;

	ld.global.u32 	%r420, [additive];
	setp.eq.s32	%p153, %r420, 0;
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	mov.f32 	%f1277, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f1277;}

	// inline asm
	@%p153 bra 	BB0_138;

	mov.u64 	%rd162, image_HDR;
	cvta.global.u64 	%rd151, %rd162;
	mov.u32 	%r424, 8;
	mov.u64 	%rd161, 0;
	// inline asm
	call (%rd150), _rt_buffer_get_64, (%rd151, %r112, %r424, %rd20, %rd21, %rd161, %rd161);
	// inline asm
	ld.v4.u16 	{%rs65, %rs66, %rs67, %rs68}, [%rd150];
	// inline asm
	{  cvt.f32.f16 %f1278, %rs65;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1279, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1280, %rs67;}

	// inline asm
	// inline asm
	call (%rd156), _rt_buffer_get_64, (%rd151, %r112, %r424, %rd20, %rd21, %rd161, %rd161);
	// inline asm
	add.f32 	%f1281, %f1278, 0f00000000;
	add.f32 	%f1282, %f1279, 0f00000000;
	add.f32 	%f1283, %f1280, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f1283;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f1282;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f1281;}

	// inline asm
	st.v4.u16 	[%rd156], {%rs62, %rs63, %rs64, %rs58};
	bra.uni 	BB0_139;

BB0_4:
	ld.global.v2.u32 	{%r137, %r138}, [pixelID];
	cvt.u64.u32	%rd33, %r137;
	cvt.u64.u32	%rd34, %r138;
	mov.u64 	%rd55, uvpos;
	cvta.global.u64 	%rd32, %rd55;
	mov.u32 	%r134, 12;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r112, %r134, %rd33, %rd34, %rd29, %rd29);
	// inline asm
	ld.f32 	%f223, [%rd31+8];
	ld.f32 	%f224, [%rd31+4];
	ld.f32 	%f225, [%rd31];
	mul.f32 	%f226, %f225, 0f3456BF95;
	mul.f32 	%f227, %f224, 0f3456BF95;
	mul.f32 	%f228, %f223, 0f3456BF95;
	abs.f32 	%f229, %f1297;
	div.rn.f32 	%f230, %f226, %f229;
	abs.f32 	%f231, %f1298;
	div.rn.f32 	%f232, %f227, %f231;
	abs.f32 	%f233, %f1299;
	div.rn.f32 	%f234, %f228, %f233;
	abs.f32 	%f235, %f230;
	abs.f32 	%f236, %f232;
	abs.f32 	%f237, %f234;
	mov.f32 	%f238, 0f38D1B717;
	max.f32 	%f239, %f235, %f238;
	max.f32 	%f240, %f236, %f238;
	max.f32 	%f241, %f237, %f238;
	fma.rn.f32 	%f11, %f1297, %f239, %f225;
	fma.rn.f32 	%f12, %f1298, %f240, %f224;
	fma.rn.f32 	%f13, %f1299, %f241, %f223;
	setp.gt.f32	%p16, %f229, %f233;
	neg.f32 	%f242, %f1298;
	selp.f32	%f243, %f242, 0f00000000, %p16;
	neg.f32 	%f244, %f1299;
	selp.f32	%f245, %f1297, %f244, %p16;
	selp.f32	%f246, 0f00000000, %f1298, %p16;
	mul.f32 	%f247, %f245, %f245;
	fma.rn.f32 	%f248, %f243, %f243, %f247;
	fma.rn.f32 	%f249, %f246, %f246, %f248;
	sqrt.rn.f32 	%f250, %f249;
	rcp.rn.f32 	%f251, %f250;
	mul.f32 	%f14, %f243, %f251;
	mul.f32 	%f15, %f245, %f251;
	mul.f32 	%f16, %f246, %f251;
	mul.f32 	%f252, %f1299, %f15;
	mul.f32 	%f253, %f1298, %f16;
	sub.f32 	%f17, %f252, %f253;
	mul.f32 	%f254, %f1297, %f16;
	mul.f32 	%f255, %f1299, %f14;
	sub.f32 	%f18, %f254, %f255;
	mul.f32 	%f256, %f1298, %f14;
	mul.f32 	%f257, %f1297, %f15;
	sub.f32 	%f19, %f256, %f257;
	ld.global.v2.u32 	{%r141, %r142}, [pixelID];
	cvt.u64.u32	%rd40, %r142;
	add.s32 	%r145, %r141, 1;
	ld.global.u32 	%r146, [resolution];
	add.s32 	%r147, %r146, -1;
	min.u32 	%r148, %r145, %r147;
	cvt.u64.u32	%rd39, %r148;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd32, %r112, %r134, %rd39, %rd40, %rd29, %rd29);
	// inline asm
	ld.f32 	%f258, [%rd37+8];
	ld.f32 	%f259, [%rd37+4];
	ld.f32 	%f260, [%rd37];
	setp.eq.f32	%p17, %f260, 0f00000000;
	setp.eq.f32	%p18, %f259, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	setp.eq.f32	%p20, %f258, 0f00000000;
	and.pred  	%p21, %p19, %p20;
	selp.f32	%f261, %f225, %f260, %p21;
	selp.f32	%f262, %f224, %f259, %p21;
	selp.f32	%f263, %f223, %f258, %p21;
	ld.global.v2.u32 	{%r149, %r150}, [pixelID];
	add.s32 	%r153, %r150, 1;
	ld.global.u32 	%r154, [resolution+4];
	add.s32 	%r155, %r154, -1;
	min.u32 	%r156, %r153, %r155;
	cvt.u64.u32	%rd45, %r149;
	cvt.u64.u32	%rd46, %r156;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd32, %r112, %r134, %rd45, %rd46, %rd29, %rd29);
	// inline asm
	ld.f32 	%f264, [%rd43+8];
	ld.f32 	%f265, [%rd43+4];
	ld.f32 	%f266, [%rd43];
	setp.eq.f32	%p22, %f266, 0f00000000;
	setp.eq.f32	%p23, %f265, 0f00000000;
	and.pred  	%p24, %p22, %p23;
	setp.eq.f32	%p25, %f264, 0f00000000;
	and.pred  	%p26, %p24, %p25;
	selp.f32	%f267, %f225, %f266, %p26;
	selp.f32	%f268, %f224, %f265, %p26;
	selp.f32	%f269, %f223, %f264, %p26;
	sub.f32 	%f270, %f261, %f225;
	sub.f32 	%f271, %f262, %f224;
	sub.f32 	%f272, %f263, %f223;
	sub.f32 	%f273, %f267, %f225;
	sub.f32 	%f274, %f268, %f224;
	sub.f32 	%f275, %f269, %f223;
	abs.f32 	%f276, %f270;
	abs.f32 	%f277, %f273;
	max.f32 	%f278, %f276, %f277;
	abs.f32 	%f279, %f271;
	abs.f32 	%f280, %f274;
	max.f32 	%f281, %f279, %f280;
	abs.f32 	%f282, %f272;
	abs.f32 	%f283, %f275;
	max.f32 	%f284, %f282, %f283;
	max.f32 	%f285, %f278, %f281;
	max.f32 	%f286, %f285, %f284;
	setp.neu.f32	%p27, %f270, 0f00000000;
	setp.neu.f32	%p28, %f271, 0f00000000;
	or.pred  	%p29, %p27, %p28;
	setp.neu.f32	%p30, %f272, 0f00000000;
	setp.neu.f32	%p31, %f273, 0f00000000;
	setp.neu.f32	%p32, %f274, 0f00000000;
	or.pred  	%p33, %p31, %p32;
	setp.neu.f32	%p34, %f275, 0f00000000;
	or.pred  	%p35, %p33, %p34;
	or.pred  	%p36, %p29, %p30;
	and.pred  	%p37, %p36, %p35;
	selp.f32	%f20, %f286, 0f00000000, %p37;
	abs.f32 	%f287, %f9;
	abs.f32 	%f288, %f7;
	setp.gt.f32	%p38, %f288, %f287;
	neg.f32 	%f289, %f8;
	selp.f32	%f290, %f289, 0f00000000, %p38;
	neg.f32 	%f291, %f9;
	selp.f32	%f292, %f7, %f291, %p38;
	selp.f32	%f293, 0f00000000, %f8, %p38;
	mul.f32 	%f294, %f292, %f292;
	fma.rn.f32 	%f295, %f290, %f290, %f294;
	fma.rn.f32 	%f296, %f293, %f293, %f295;
	sqrt.rn.f32 	%f297, %f296;
	rcp.rn.f32 	%f298, %f297;
	mul.f32 	%f21, %f290, %f298;
	mul.f32 	%f22, %f292, %f298;
	mul.f32 	%f23, %f293, %f298;
	ld.global.v2.u32 	{%r157, %r158}, [pixelID];
	cvt.u64.u32	%rd51, %r157;
	cvt.u64.u32	%rd52, %r158;
	mov.u64 	%rd56, rnd_seeds;
	cvta.global.u64 	%rd50, %rd56;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r112, %r113, %rd51, %rd52, %rd29, %rd29);
	// inline asm
	ld.global.u32 	%r451, [samples];
	mov.f32 	%f1302, 0f00000000;
	setp.lt.s32	%p39, %r451, 1;
	@%p39 bra 	BB0_5;

	cvt.rn.f32.s32	%f301, %r451;
	rcp.rn.f32 	%f24, %f301;
	ld.u32 	%r477, [%rd49];
	mul.f32 	%f25, %f11, 0f3456BF95;
	mul.f32 	%f26, %f12, 0f3456BF95;
	mul.f32 	%f27, %f13, 0f3456BF95;
	mul.f32 	%f302, %f7, %f22;
	mul.f32 	%f303, %f8, %f21;
	sub.f32 	%f28, %f303, %f302;
	mul.f32 	%f304, %f9, %f21;
	mul.f32 	%f305, %f7, %f23;
	sub.f32 	%f29, %f305, %f304;
	mul.f32 	%f306, %f8, %f23;
	mul.f32 	%f307, %f9, %f22;
	sub.f32 	%f30, %f307, %f306;
	mov.f32 	%f1302, 0f00000000;
	mov.u32 	%r452, 0;
	abs.f32 	%f308, %f26;
	abs.f32 	%f309, %f25;
	max.f32 	%f310, %f309, %f308;
	abs.f32 	%f311, %f27;
	max.f32 	%f312, %f310, %f311;
	mov.f32 	%f1303, %f1302;

BB0_7:
	setp.lt.s32	%p40, %r451, 1;
	@%p40 bra 	BB0_74;

	mov.u32 	%r454, 0;

BB0_9:
	cvt.rn.f32.s32	%f1295, %r452;
	mad.lo.s32 	%r163, %r477, 1664525, 1013904223;
	and.b32  	%r164, %r163, 16777215;
	cvt.rn.f32.u32	%f314, %r164;
	fma.rn.f32 	%f315, %f314, 0f33800000, %f1295;
	mul.f32 	%f316, %f24, %f315;
	mad.lo.s32 	%r12, %r163, 1664525, 1013904223;
	and.b32  	%r165, %r12, 16777215;
	cvt.rn.f32.u32	%f317, %r165;
	cvt.rn.f32.s32	%f318, %r454;
	fma.rn.f32 	%f319, %f317, 0f33800000, %f318;
	mul.f32 	%f320, %f24, %f319;
	sqrt.rn.f32 	%f37, %f316;
	mul.f32 	%f1310, %f320, 0f40C90FDB;
	abs.f32 	%f39, %f1310;
	setp.neu.f32	%p41, %f39, 0f7F800000;
	mov.f32 	%f1304, %f1310;
	@%p41 bra 	BB0_11;

	mov.f32 	%f321, 0f00000000;
	mul.rn.f32 	%f1304, %f1310, %f321;

BB0_11:
	mul.f32 	%f322, %f1304, 0f3F22F983;
	cvt.rni.s32.f32	%r465, %f322;
	cvt.rn.f32.s32	%f323, %r465;
	neg.f32 	%f324, %f323;
	mov.f32 	%f325, 0f3FC90FDA;
	fma.rn.f32 	%f326, %f324, %f325, %f1304;
	mov.f32 	%f327, 0f33A22168;
	fma.rn.f32 	%f328, %f324, %f327, %f326;
	mov.f32 	%f329, 0f27C234C5;
	fma.rn.f32 	%f1305, %f324, %f329, %f328;
	abs.f32 	%f330, %f1304;
	setp.leu.f32	%p42, %f330, 0f47CE4780;
	@%p42 bra 	BB0_22;

	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd58;
	mov.b32 	 %r14, %f1304;
	shr.u32 	%r15, %r14, 23;
	shl.b32 	%r168, %r14, 8;
	or.b32  	%r16, %r168, -2147483648;
	mov.u32 	%r456, 0;
	mov.u64 	%rd219, 0;
	mov.u64 	%rd218, %rd3;
	mov.u32 	%r457, %r456;

BB0_13:
	.pragma "nounroll";
	shl.b64 	%rd59, %rd219, 2;
	mov.u64 	%rd60, __cudart_i2opi_f;
	add.s64 	%rd61, %rd60, %rd59;
	ld.const.u32 	%r171, [%rd61];
	// inline asm
	{
	mad.lo.cc.u32   %r169, %r171, %r16, %r457;
	madc.hi.u32     %r457, %r171, %r16,  0;
	}
	// inline asm
	st.local.u32 	[%rd218], %r169;
	add.s32 	%r456, %r456, 1;
	cvt.s64.s32	%rd219, %r456;
	mul.wide.s32 	%rd64, %r456, 4;
	add.s64 	%rd218, %rd3, %rd64;
	setp.ne.s32	%p43, %r456, 6;
	@%p43 bra 	BB0_13;

	and.b32  	%r174, %r15, 255;
	add.s32 	%r175, %r174, -128;
	shr.u32 	%r176, %r175, 5;
	and.b32  	%r21, %r14, -2147483648;
	cvta.to.local.u64 	%rd66, %rd58;
	st.local.u32 	[%rd66+24], %r457;
	mov.u32 	%r177, 6;
	sub.s32 	%r178, %r177, %r176;
	mul.wide.s32 	%rd67, %r178, 4;
	add.s64 	%rd8, %rd66, %rd67;
	ld.local.u32 	%r458, [%rd8];
	ld.local.u32 	%r459, [%rd8+-4];
	and.b32  	%r24, %r15, 31;
	setp.eq.s32	%p44, %r24, 0;
	@%p44 bra 	BB0_16;

	mov.u32 	%r179, 32;
	sub.s32 	%r180, %r179, %r24;
	shr.u32 	%r181, %r459, %r180;
	shl.b32 	%r182, %r458, %r24;
	add.s32 	%r458, %r181, %r182;
	ld.local.u32 	%r183, [%rd8+-8];
	shr.u32 	%r184, %r183, %r180;
	shl.b32 	%r185, %r459, %r24;
	add.s32 	%r459, %r184, %r185;

BB0_16:
	shr.u32 	%r186, %r459, 30;
	shl.b32 	%r187, %r458, 2;
	add.s32 	%r460, %r186, %r187;
	shl.b32 	%r30, %r459, 2;
	shr.u32 	%r188, %r460, 31;
	shr.u32 	%r189, %r458, 30;
	add.s32 	%r31, %r188, %r189;
	setp.eq.s32	%p45, %r188, 0;
	@%p45 bra 	BB0_17;
	bra.uni 	BB0_18;

BB0_17:
	mov.u32 	%r461, %r21;
	mov.u32 	%r462, %r30;
	bra.uni 	BB0_19;

BB0_18:
	not.b32 	%r190, %r460;
	neg.s32 	%r462, %r30;
	setp.eq.s32	%p46, %r30, 0;
	selp.u32	%r191, 1, 0, %p46;
	add.s32 	%r460, %r191, %r190;
	xor.b32  	%r461, %r21, -2147483648;

BB0_19:
	clz.b32 	%r464, %r460;
	setp.eq.s32	%p47, %r464, 0;
	shl.b32 	%r192, %r460, %r464;
	mov.u32 	%r193, 32;
	sub.s32 	%r194, %r193, %r464;
	shr.u32 	%r195, %r462, %r194;
	add.s32 	%r196, %r195, %r192;
	selp.b32	%r39, %r460, %r196, %p47;
	mov.u32 	%r197, -921707870;
	mul.hi.u32 	%r463, %r39, %r197;
	setp.eq.s32	%p48, %r21, 0;
	neg.s32 	%r198, %r31;
	selp.b32	%r465, %r31, %r198, %p48;
	setp.lt.s32	%p49, %r463, 1;
	@%p49 bra 	BB0_21;

	mul.lo.s32 	%r199, %r39, -921707870;
	shr.u32 	%r200, %r199, 31;
	shl.b32 	%r201, %r463, 1;
	add.s32 	%r463, %r200, %r201;
	add.s32 	%r464, %r464, 1;

BB0_21:
	mov.u32 	%r202, 126;
	sub.s32 	%r203, %r202, %r464;
	shl.b32 	%r204, %r203, 23;
	add.s32 	%r205, %r463, 1;
	shr.u32 	%r206, %r205, 7;
	add.s32 	%r207, %r206, 1;
	shr.u32 	%r208, %r207, 1;
	add.s32 	%r209, %r208, %r204;
	or.b32  	%r210, %r209, %r461;
	mov.b32 	 %f1305, %r210;

BB0_22:
	mul.rn.f32 	%f45, %f1305, %f1305;
	add.s32 	%r47, %r465, 1;
	and.b32  	%r48, %r47, 1;
	setp.eq.s32	%p50, %r48, 0;
	@%p50 bra 	BB0_24;
	bra.uni 	BB0_23;

BB0_24:
	mov.f32 	%f333, 0f3C08839E;
	mov.f32 	%f334, 0fB94CA1F9;
	fma.rn.f32 	%f1306, %f334, %f45, %f333;
	bra.uni 	BB0_25;

BB0_23:
	mov.f32 	%f331, 0fBAB6061A;
	mov.f32 	%f332, 0f37CCF5CE;
	fma.rn.f32 	%f1306, %f332, %f45, %f331;

BB0_25:
	@%p50 bra 	BB0_27;
	bra.uni 	BB0_26;

BB0_27:
	mov.f32 	%f338, 0fBE2AAAA3;
	fma.rn.f32 	%f339, %f1306, %f45, %f338;
	mov.f32 	%f340, 0f00000000;
	fma.rn.f32 	%f1307, %f339, %f45, %f340;
	bra.uni 	BB0_28;

BB0_26:
	mov.f32 	%f335, 0f3D2AAAA5;
	fma.rn.f32 	%f336, %f1306, %f45, %f335;
	mov.f32 	%f337, 0fBF000000;
	fma.rn.f32 	%f1307, %f336, %f45, %f337;

BB0_28:
	fma.rn.f32 	%f1308, %f1307, %f1305, %f1305;
	@%p50 bra 	BB0_30;

	mov.f32 	%f341, 0f3F800000;
	fma.rn.f32 	%f1308, %f1307, %f45, %f341;

BB0_30:
	and.b32  	%r211, %r47, 2;
	setp.eq.s32	%p53, %r211, 0;
	@%p53 bra 	BB0_32;

	mov.f32 	%f342, 0f00000000;
	mov.f32 	%f343, 0fBF800000;
	fma.rn.f32 	%f1308, %f1308, %f343, %f342;

BB0_32:
	@%p41 bra 	BB0_34;

	mov.f32 	%f344, 0f00000000;
	mul.rn.f32 	%f1310, %f1310, %f344;

BB0_34:
	mul.f32 	%f345, %f1310, 0f3F22F983;
	cvt.rni.s32.f32	%r475, %f345;
	cvt.rn.f32.s32	%f346, %r475;
	neg.f32 	%f347, %f346;
	fma.rn.f32 	%f349, %f347, %f325, %f1310;
	fma.rn.f32 	%f351, %f347, %f327, %f349;
	fma.rn.f32 	%f1311, %f347, %f329, %f351;
	abs.f32 	%f353, %f1310;
	setp.leu.f32	%p55, %f353, 0f47CE4780;
	@%p55 bra 	BB0_45;

	add.u64 	%rd69, %SP, 0;
	cvta.to.local.u64 	%rd9, %rd69;
	mov.b32 	 %r50, %f1310;
	shr.u32 	%r51, %r50, 23;
	shl.b32 	%r214, %r50, 8;
	or.b32  	%r52, %r214, -2147483648;
	mov.u32 	%r466, 0;
	mov.u64 	%rd220, %rd9;
	mov.u64 	%rd221, %rd29;
	mov.u32 	%r467, %r466;

BB0_36:
	.pragma "nounroll";
	shl.b64 	%rd70, %rd221, 2;
	mov.u64 	%rd71, __cudart_i2opi_f;
	add.s64 	%rd72, %rd71, %rd70;
	ld.const.u32 	%r217, [%rd72];
	// inline asm
	{
	mad.lo.cc.u32   %r215, %r217, %r52, %r467;
	madc.hi.u32     %r467, %r217, %r52,  0;
	}
	// inline asm
	st.local.u32 	[%rd220], %r215;
	add.s32 	%r466, %r466, 1;
	cvt.s64.s32	%rd221, %r466;
	mul.wide.s32 	%rd73, %r466, 4;
	add.s64 	%rd220, %rd9, %rd73;
	setp.ne.s32	%p56, %r466, 6;
	@%p56 bra 	BB0_36;

	and.b32  	%r220, %r51, 255;
	add.s32 	%r221, %r220, -128;
	shr.u32 	%r222, %r221, 5;
	and.b32  	%r57, %r50, -2147483648;
	cvta.to.local.u64 	%rd75, %rd69;
	st.local.u32 	[%rd75+24], %r467;
	mov.u32 	%r223, 6;
	sub.s32 	%r224, %r223, %r222;
	mul.wide.s32 	%rd76, %r224, 4;
	add.s64 	%rd15, %rd75, %rd76;
	ld.local.u32 	%r468, [%rd15];
	ld.local.u32 	%r469, [%rd15+-4];
	and.b32  	%r60, %r51, 31;
	setp.eq.s32	%p57, %r60, 0;
	@%p57 bra 	BB0_39;

	mov.u32 	%r225, 32;
	sub.s32 	%r226, %r225, %r60;
	shr.u32 	%r227, %r469, %r226;
	shl.b32 	%r228, %r468, %r60;
	add.s32 	%r468, %r227, %r228;
	ld.local.u32 	%r229, [%rd15+-8];
	shr.u32 	%r230, %r229, %r226;
	shl.b32 	%r231, %r469, %r60;
	add.s32 	%r469, %r230, %r231;

BB0_39:
	shr.u32 	%r232, %r469, 30;
	shl.b32 	%r233, %r468, 2;
	add.s32 	%r470, %r232, %r233;
	shl.b32 	%r66, %r469, 2;
	shr.u32 	%r234, %r470, 31;
	shr.u32 	%r235, %r468, 30;
	add.s32 	%r67, %r234, %r235;
	setp.eq.s32	%p58, %r234, 0;
	@%p58 bra 	BB0_40;
	bra.uni 	BB0_41;

BB0_40:
	mov.u32 	%r471, %r57;
	mov.u32 	%r472, %r66;
	bra.uni 	BB0_42;

BB0_41:
	not.b32 	%r236, %r470;
	neg.s32 	%r472, %r66;
	setp.eq.s32	%p59, %r66, 0;
	selp.u32	%r237, 1, 0, %p59;
	add.s32 	%r470, %r237, %r236;
	xor.b32  	%r471, %r57, -2147483648;

BB0_42:
	clz.b32 	%r474, %r470;
	setp.eq.s32	%p60, %r474, 0;
	shl.b32 	%r238, %r470, %r474;
	mov.u32 	%r239, 32;
	sub.s32 	%r240, %r239, %r474;
	shr.u32 	%r241, %r472, %r240;
	add.s32 	%r242, %r241, %r238;
	selp.b32	%r75, %r470, %r242, %p60;
	mov.u32 	%r243, -921707870;
	mul.hi.u32 	%r473, %r75, %r243;
	setp.eq.s32	%p61, %r57, 0;
	neg.s32 	%r244, %r67;
	selp.b32	%r475, %r67, %r244, %p61;
	setp.lt.s32	%p62, %r473, 1;
	@%p62 bra 	BB0_44;

	mul.lo.s32 	%r245, %r75, -921707870;
	shr.u32 	%r246, %r245, 31;
	shl.b32 	%r247, %r473, 1;
	add.s32 	%r473, %r246, %r247;
	add.s32 	%r474, %r474, 1;

BB0_44:
	mov.u32 	%r248, 126;
	sub.s32 	%r249, %r248, %r474;
	shl.b32 	%r250, %r249, 23;
	add.s32 	%r251, %r473, 1;
	shr.u32 	%r252, %r251, 7;
	add.s32 	%r253, %r252, 1;
	shr.u32 	%r254, %r253, 1;
	add.s32 	%r255, %r254, %r250;
	or.b32  	%r256, %r255, %r471;
	mov.b32 	 %f1311, %r256;

BB0_45:
	mul.rn.f32 	%f62, %f1311, %f1311;
	and.b32  	%r83, %r475, 1;
	setp.eq.s32	%p63, %r83, 0;
	@%p63 bra 	BB0_47;
	bra.uni 	BB0_46;

BB0_47:
	mov.f32 	%f356, 0f3C08839E;
	mov.f32 	%f357, 0fB94CA1F9;
	fma.rn.f32 	%f1312, %f357, %f62, %f356;
	bra.uni 	BB0_48;

BB0_46:
	mov.f32 	%f354, 0fBAB6061A;
	mov.f32 	%f355, 0f37CCF5CE;
	fma.rn.f32 	%f1312, %f355, %f62, %f354;

BB0_48:
	@%p63 bra 	BB0_50;
	bra.uni 	BB0_49;

BB0_50:
	mov.f32 	%f361, 0fBE2AAAA3;
	fma.rn.f32 	%f362, %f1312, %f62, %f361;
	mov.f32 	%f363, 0f00000000;
	fma.rn.f32 	%f1313, %f362, %f62, %f363;
	bra.uni 	BB0_51;

BB0_49:
	mov.f32 	%f358, 0f3D2AAAA5;
	fma.rn.f32 	%f359, %f1312, %f62, %f358;
	mov.f32 	%f360, 0fBF000000;
	fma.rn.f32 	%f1313, %f359, %f62, %f360;

BB0_51:
	fma.rn.f32 	%f1314, %f1313, %f1311, %f1311;
	@%p63 bra 	BB0_53;

	mov.f32 	%f364, 0f3F800000;
	fma.rn.f32 	%f1314, %f1313, %f62, %f364;

BB0_53:
	and.b32  	%r257, %r475, 2;
	setp.eq.s32	%p66, %r257, 0;
	@%p66 bra 	BB0_55;

	mov.f32 	%f365, 0f00000000;
	mov.f32 	%f366, 0fBF800000;
	fma.rn.f32 	%f1314, %f1314, %f366, %f365;

BB0_55:
	max.f32 	%f1296, %f312, %f238;
	mul.f32 	%f375, %f37, %f1308;
	add.u64 	%rd77, %SP, 28;
	cvta.to.local.u64 	%rd16, %rd77;
	mul.f32 	%f376, %f375, %f375;
	mov.f32 	%f377, 0f3F800000;
	sub.f32 	%f378, %f377, %f376;
	mul.f32 	%f379, %f37, %f1314;
	mul.f32 	%f380, %f379, %f379;
	sub.f32 	%f381, %f378, %f380;
	mov.f32 	%f382, 0f00000000;
	max.f32 	%f383, %f382, %f381;
	sqrt.rn.f32 	%f384, %f383;
	mul.f32 	%f385, %f21, %f379;
	mul.f32 	%f386, %f22, %f379;
	mul.f32 	%f387, %f23, %f379;
	fma.rn.f32 	%f388, %f30, %f375, %f385;
	fma.rn.f32 	%f389, %f29, %f375, %f386;
	fma.rn.f32 	%f390, %f28, %f375, %f387;
	fma.rn.f32 	%f391, %f7, %f384, %f388;
	fma.rn.f32 	%f392, %f8, %f384, %f389;
	fma.rn.f32 	%f393, %f9, %f384, %f390;
	add.f32 	%f394, %f7, %f391;
	add.f32 	%f395, %f8, %f392;
	add.f32 	%f396, %f9, %f393;
	ld.global.f32 	%f397, [shadowSpread];
	mul.f32 	%f398, %f397, %f394;
	mul.f32 	%f399, %f397, %f395;
	mul.f32 	%f400, %f397, %f396;
	sub.f32 	%f401, %f398, %f7;
	sub.f32 	%f402, %f399, %f8;
	sub.f32 	%f403, %f400, %f9;
	mul.f32 	%f404, %f402, %f402;
	fma.rn.f32 	%f405, %f401, %f401, %f404;
	fma.rn.f32 	%f406, %f403, %f403, %f405;
	sqrt.rn.f32 	%f407, %f406;
	rcp.rn.f32 	%f408, %f407;
	mul.f32 	%f74, %f408, %f401;
	mul.f32 	%f75, %f408, %f402;
	mul.f32 	%f76, %f408, %f403;
	ld.global.u32 	%r261, [imageEnabled];
	and.b32  	%r262, %r261, 32;
	setp.eq.s32	%p67, %r262, 0;
	selp.f32	%f409, 0f3F800000, 0f41200000, %p67;
	mul.f32 	%f373, %f409, %f1296;
	mad.lo.s32 	%r263, %r12, 1664525, 1013904223;
	and.b32  	%r264, %r263, 16777215;
	cvt.rn.f32.u32	%f410, %r264;
	mul.f32 	%f411, %f410, 0f33800000;
	fma.rn.f32 	%f412, %f411, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r84, %r263, 1664525, 1013904223;
	and.b32  	%r265, %r84, 16777215;
	cvt.rn.f32.u32	%f413, %r265;
	mul.f32 	%f414, %f413, 0f33800000;
	fma.rn.f32 	%f415, %f414, 0f40000000, 0fBF800000;
	mul.f32 	%f416, %f14, %f415;
	mul.f32 	%f417, %f15, %f415;
	mul.f32 	%f418, %f16, %f415;
	fma.rn.f32 	%f419, %f17, %f412, %f416;
	fma.rn.f32 	%f420, %f18, %f412, %f417;
	fma.rn.f32 	%f421, %f19, %f412, %f418;
	mul.f32 	%f422, %f420, %f420;
	fma.rn.f32 	%f423, %f419, %f419, %f422;
	fma.rn.f32 	%f424, %f421, %f421, %f423;
	sqrt.rn.f32 	%f425, %f424;
	rcp.rn.f32 	%f426, %f425;
	mul.f32 	%f427, %f419, %f426;
	mul.f32 	%f428, %f420, %f426;
	mul.f32 	%f429, %f421, %f426;
	mul.f32 	%f430, %f1298, %f429;
	mul.f32 	%f431, %f1299, %f428;
	sub.f32 	%f432, %f430, %f431;
	mul.f32 	%f433, %f1299, %f427;
	mul.f32 	%f434, %f1297, %f429;
	sub.f32 	%f435, %f433, %f434;
	mul.f32 	%f436, %f1297, %f428;
	mul.f32 	%f437, %f1298, %f427;
	sub.f32 	%f438, %f436, %f437;
	mul.f32 	%f439, %f427, 0f3E24A490;
	mul.f32 	%f440, %f428, 0f3E24A490;
	mul.f32 	%f441, %f429, 0f3E24A490;
	fma.rn.f32 	%f442, %f20, %f439, %f11;
	fma.rn.f32 	%f443, %f20, %f440, %f12;
	fma.rn.f32 	%f444, %f20, %f441, %f13;
	mul.f32 	%f445, %f432, 0fBECECEDE;
	mul.f32 	%f446, %f435, 0fBECECEDE;
	mul.f32 	%f447, %f438, 0fBECECEDE;
	fma.rn.f32 	%f78, %f20, %f445, %f442;
	fma.rn.f32 	%f79, %f20, %f446, %f443;
	fma.rn.f32 	%f80, %f20, %f447, %f444;
	sub.f32 	%f448, %f78, %f11;
	sub.f32 	%f449, %f79, %f12;
	sub.f32 	%f450, %f80, %f13;
	mul.f32 	%f451, %f449, %f449;
	fma.rn.f32 	%f452, %f448, %f448, %f451;
	fma.rn.f32 	%f453, %f450, %f450, %f452;
	sqrt.rn.f32 	%f374, %f453;
	rcp.rn.f32 	%f454, %f374;
	mul.f32 	%f370, %f454, %f448;
	mul.f32 	%f371, %f454, %f449;
	mul.f32 	%f372, %f454, %f450;
	mov.u32 	%r266, 1065353216;
	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r258, [root];
	mov.u32 	%r259, 1;
	// inline asm
	call _rt_trace_64, (%r258, %f11, %f12, %f13, %f370, %f371, %f372, %r259, %f373, %f374, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f455, [%rd16];
	mov.u16 	%rs94, 0;
	setp.neu.f32	%p68, %f455, 0f3F800000;
	@%p68 bra 	BB0_57;

	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r267, [root];
	mov.f32 	%f463, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r267, %f78, %f79, %f80, %f74, %f75, %f76, %r259, %f373, %f463, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f464, [%rd16];
	add.f32 	%f1303, %f1303, %f464;
	add.f32 	%f1302, %f1302, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_57:
	mad.lo.s32 	%r274, %r84, 1664525, 1013904223;
	and.b32  	%r275, %r274, 16777215;
	cvt.rn.f32.u32	%f473, %r275;
	mul.f32 	%f474, %f473, 0f33800000;
	fma.rn.f32 	%f475, %f474, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r85, %r274, 1664525, 1013904223;
	and.b32  	%r276, %r85, 16777215;
	cvt.rn.f32.u32	%f476, %r276;
	mul.f32 	%f477, %f476, 0f33800000;
	fma.rn.f32 	%f478, %f477, 0f40000000, 0fBF800000;
	mul.f32 	%f479, %f14, %f478;
	mul.f32 	%f480, %f15, %f478;
	mul.f32 	%f481, %f16, %f478;
	fma.rn.f32 	%f482, %f17, %f475, %f479;
	fma.rn.f32 	%f483, %f18, %f475, %f480;
	fma.rn.f32 	%f484, %f19, %f475, %f481;
	mul.f32 	%f485, %f483, %f483;
	fma.rn.f32 	%f486, %f482, %f482, %f485;
	fma.rn.f32 	%f487, %f484, %f484, %f486;
	sqrt.rn.f32 	%f488, %f487;
	rcp.rn.f32 	%f489, %f488;
	mul.f32 	%f490, %f482, %f489;
	mul.f32 	%f491, %f483, %f489;
	mul.f32 	%f492, %f484, %f489;
	mul.f32 	%f493, %f1298, %f492;
	mul.f32 	%f494, %f1299, %f491;
	sub.f32 	%f495, %f493, %f494;
	mul.f32 	%f496, %f1299, %f490;
	mul.f32 	%f497, %f1297, %f492;
	sub.f32 	%f498, %f496, %f497;
	mul.f32 	%f499, %f1297, %f491;
	mul.f32 	%f500, %f1298, %f490;
	sub.f32 	%f501, %f499, %f500;
	mul.f32 	%f502, %f490, 0fBE24A490;
	mul.f32 	%f503, %f491, 0fBE24A490;
	mul.f32 	%f504, %f492, 0fBE24A490;
	fma.rn.f32 	%f505, %f20, %f502, %f11;
	fma.rn.f32 	%f506, %f20, %f503, %f12;
	fma.rn.f32 	%f507, %f20, %f504, %f13;
	mul.f32 	%f508, %f495, 0f3ECACABC;
	mul.f32 	%f509, %f498, 0f3ECACABC;
	mul.f32 	%f510, %f501, 0f3ECACABC;
	fma.rn.f32 	%f85, %f20, %f508, %f505;
	fma.rn.f32 	%f86, %f20, %f509, %f506;
	fma.rn.f32 	%f87, %f20, %f510, %f507;
	sub.f32 	%f511, %f85, %f11;
	sub.f32 	%f512, %f86, %f12;
	sub.f32 	%f513, %f87, %f13;
	mul.f32 	%f514, %f512, %f512;
	fma.rn.f32 	%f515, %f511, %f511, %f514;
	fma.rn.f32 	%f516, %f513, %f513, %f515;
	sqrt.rn.f32 	%f472, %f516;
	rcp.rn.f32 	%f517, %f472;
	mul.f32 	%f468, %f517, %f511;
	mul.f32 	%f469, %f517, %f512;
	mul.f32 	%f470, %f517, %f513;
	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r271, [root];
	// inline asm
	call _rt_trace_64, (%r271, %f11, %f12, %f13, %f468, %f469, %f470, %r259, %f373, %f472, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f518, [%rd16];
	setp.neu.f32	%p69, %f518, 0f3F800000;
	@%p69 bra 	BB0_59;

	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r278, [root];
	mov.f32 	%f526, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r278, %f85, %f86, %f87, %f74, %f75, %f76, %r259, %f373, %f526, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f527, [%rd16];
	add.f32 	%f1303, %f1303, %f527;
	add.f32 	%f1302, %f1302, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_59:
	mad.lo.s32 	%r285, %r85, 1664525, 1013904223;
	and.b32  	%r286, %r285, 16777215;
	cvt.rn.f32.u32	%f536, %r286;
	mul.f32 	%f537, %f536, 0f33800000;
	fma.rn.f32 	%f538, %f537, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r86, %r285, 1664525, 1013904223;
	and.b32  	%r287, %r86, 16777215;
	cvt.rn.f32.u32	%f539, %r287;
	mul.f32 	%f540, %f539, 0f33800000;
	fma.rn.f32 	%f541, %f540, 0f40000000, 0fBF800000;
	mul.f32 	%f542, %f14, %f541;
	mul.f32 	%f543, %f15, %f541;
	mul.f32 	%f544, %f16, %f541;
	fma.rn.f32 	%f545, %f17, %f538, %f542;
	fma.rn.f32 	%f546, %f18, %f538, %f543;
	fma.rn.f32 	%f547, %f19, %f538, %f544;
	mul.f32 	%f548, %f546, %f546;
	fma.rn.f32 	%f549, %f545, %f545, %f548;
	fma.rn.f32 	%f550, %f547, %f547, %f549;
	sqrt.rn.f32 	%f551, %f550;
	rcp.rn.f32 	%f552, %f551;
	mul.f32 	%f553, %f545, %f552;
	mul.f32 	%f554, %f546, %f552;
	mul.f32 	%f555, %f547, %f552;
	mul.f32 	%f556, %f1298, %f555;
	mul.f32 	%f557, %f1299, %f554;
	sub.f32 	%f558, %f556, %f557;
	mul.f32 	%f559, %f1299, %f553;
	mul.f32 	%f560, %f1297, %f555;
	sub.f32 	%f561, %f559, %f560;
	mul.f32 	%f562, %f1297, %f554;
	mul.f32 	%f563, %f1298, %f553;
	sub.f32 	%f564, %f562, %f563;
	mul.f32 	%f565, %f553, 0f3F23A3A8;
	mul.f32 	%f566, %f554, 0f3F23A3A8;
	mul.f32 	%f567, %f555, 0f3F23A3A8;
	fma.rn.f32 	%f568, %f20, %f565, %f11;
	fma.rn.f32 	%f569, %f20, %f566, %f12;
	fma.rn.f32 	%f570, %f20, %f567, %f13;
	mul.f32 	%f571, %f558, 0f3E24A490;
	mul.f32 	%f572, %f561, 0f3E24A490;
	mul.f32 	%f573, %f564, 0f3E24A490;
	fma.rn.f32 	%f92, %f20, %f571, %f568;
	fma.rn.f32 	%f93, %f20, %f572, %f569;
	fma.rn.f32 	%f94, %f20, %f573, %f570;
	sub.f32 	%f574, %f92, %f11;
	sub.f32 	%f575, %f93, %f12;
	sub.f32 	%f576, %f94, %f13;
	mul.f32 	%f577, %f575, %f575;
	fma.rn.f32 	%f578, %f574, %f574, %f577;
	fma.rn.f32 	%f579, %f576, %f576, %f578;
	sqrt.rn.f32 	%f535, %f579;
	rcp.rn.f32 	%f580, %f535;
	mul.f32 	%f531, %f580, %f574;
	mul.f32 	%f532, %f580, %f575;
	mul.f32 	%f533, %f580, %f576;
	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r282, [root];
	// inline asm
	call _rt_trace_64, (%r282, %f11, %f12, %f13, %f531, %f532, %f533, %r259, %f373, %f535, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f581, [%rd16];
	setp.neu.f32	%p70, %f581, 0f3F800000;
	@%p70 bra 	BB0_61;

	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r289, [root];
	mov.f32 	%f589, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r289, %f92, %f93, %f94, %f74, %f75, %f76, %r259, %f373, %f589, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f590, [%rd16];
	add.f32 	%f1303, %f1303, %f590;
	add.f32 	%f1302, %f1302, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_61:
	mad.lo.s32 	%r296, %r86, 1664525, 1013904223;
	and.b32  	%r297, %r296, 16777215;
	cvt.rn.f32.u32	%f599, %r297;
	mul.f32 	%f600, %f599, 0f33800000;
	fma.rn.f32 	%f601, %f600, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r87, %r296, 1664525, 1013904223;
	and.b32  	%r298, %r87, 16777215;
	cvt.rn.f32.u32	%f602, %r298;
	mul.f32 	%f603, %f602, 0f33800000;
	fma.rn.f32 	%f604, %f603, 0f40000000, 0fBF800000;
	mul.f32 	%f605, %f14, %f604;
	mul.f32 	%f606, %f15, %f604;
	mul.f32 	%f607, %f16, %f604;
	fma.rn.f32 	%f608, %f17, %f601, %f605;
	fma.rn.f32 	%f609, %f18, %f601, %f606;
	fma.rn.f32 	%f610, %f19, %f601, %f607;
	mul.f32 	%f611, %f609, %f609;
	fma.rn.f32 	%f612, %f608, %f608, %f611;
	fma.rn.f32 	%f613, %f610, %f610, %f612;
	sqrt.rn.f32 	%f614, %f613;
	rcp.rn.f32 	%f615, %f614;
	mul.f32 	%f616, %f608, %f615;
	mul.f32 	%f617, %f609, %f615;
	mul.f32 	%f618, %f610, %f615;
	mul.f32 	%f619, %f1298, %f618;
	mul.f32 	%f620, %f1299, %f617;
	sub.f32 	%f621, %f619, %f620;
	mul.f32 	%f622, %f1299, %f616;
	mul.f32 	%f623, %f1297, %f618;
	sub.f32 	%f624, %f622, %f623;
	mul.f32 	%f625, %f1297, %f617;
	mul.f32 	%f626, %f1298, %f616;
	sub.f32 	%f627, %f625, %f626;
	mul.f32 	%f628, %f616, 0fBECECEDE;
	mul.f32 	%f629, %f617, 0fBECECEDE;
	mul.f32 	%f630, %f618, 0fBECECEDE;
	fma.rn.f32 	%f631, %f20, %f628, %f11;
	fma.rn.f32 	%f632, %f20, %f629, %f12;
	fma.rn.f32 	%f633, %f20, %f630, %f13;
	mul.f32 	%f634, %f621, 0fBF23A3A9;
	mul.f32 	%f635, %f624, 0fBF23A3A9;
	mul.f32 	%f636, %f627, 0fBF23A3A9;
	fma.rn.f32 	%f99, %f20, %f634, %f631;
	fma.rn.f32 	%f100, %f20, %f635, %f632;
	fma.rn.f32 	%f101, %f20, %f636, %f633;
	sub.f32 	%f637, %f99, %f11;
	sub.f32 	%f638, %f100, %f12;
	sub.f32 	%f639, %f101, %f13;
	mul.f32 	%f640, %f638, %f638;
	fma.rn.f32 	%f641, %f637, %f637, %f640;
	fma.rn.f32 	%f642, %f639, %f639, %f641;
	sqrt.rn.f32 	%f598, %f642;
	rcp.rn.f32 	%f643, %f598;
	mul.f32 	%f594, %f643, %f637;
	mul.f32 	%f595, %f643, %f638;
	mul.f32 	%f596, %f643, %f639;
	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r293, [root];
	// inline asm
	call _rt_trace_64, (%r293, %f11, %f12, %f13, %f594, %f595, %f596, %r259, %f373, %f598, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f644, [%rd16];
	setp.neu.f32	%p71, %f644, 0f3F800000;
	@%p71 bra 	BB0_63;

	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r300, [root];
	mov.f32 	%f652, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r300, %f99, %f100, %f101, %f74, %f75, %f76, %r259, %f373, %f652, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f653, [%rd16];
	add.f32 	%f1303, %f1303, %f653;
	add.f32 	%f1302, %f1302, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_63:
	mad.lo.s32 	%r307, %r87, 1664525, 1013904223;
	and.b32  	%r308, %r307, 16777215;
	cvt.rn.f32.u32	%f662, %r308;
	mul.f32 	%f663, %f662, 0f33800000;
	fma.rn.f32 	%f664, %f663, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r88, %r307, 1664525, 1013904223;
	and.b32  	%r309, %r88, 16777215;
	cvt.rn.f32.u32	%f665, %r309;
	mul.f32 	%f666, %f665, 0f33800000;
	fma.rn.f32 	%f667, %f666, 0f40000000, 0fBF800000;
	mul.f32 	%f668, %f14, %f667;
	mul.f32 	%f669, %f15, %f667;
	mul.f32 	%f670, %f16, %f667;
	fma.rn.f32 	%f671, %f17, %f664, %f668;
	fma.rn.f32 	%f672, %f18, %f664, %f669;
	fma.rn.f32 	%f673, %f19, %f664, %f670;
	mul.f32 	%f674, %f672, %f672;
	fma.rn.f32 	%f675, %f671, %f671, %f674;
	fma.rn.f32 	%f676, %f673, %f673, %f675;
	sqrt.rn.f32 	%f677, %f676;
	rcp.rn.f32 	%f678, %f677;
	mul.f32 	%f679, %f671, %f678;
	mul.f32 	%f680, %f672, %f678;
	mul.f32 	%f681, %f673, %f678;
	mul.f32 	%f682, %f1298, %f681;
	mul.f32 	%f683, %f1299, %f680;
	sub.f32 	%f684, %f682, %f683;
	mul.f32 	%f685, %f1299, %f679;
	mul.f32 	%f686, %f1297, %f681;
	sub.f32 	%f687, %f685, %f686;
	mul.f32 	%f688, %f1297, %f680;
	mul.f32 	%f689, %f1298, %f679;
	sub.f32 	%f690, %f688, %f689;
	mul.f32 	%f691, %f679, 0fBF23A3A9;
	mul.f32 	%f692, %f680, 0fBF23A3A9;
	mul.f32 	%f693, %f681, 0fBF23A3A9;
	fma.rn.f32 	%f694, %f20, %f691, %f11;
	fma.rn.f32 	%f695, %f20, %f692, %f12;
	fma.rn.f32 	%f696, %f20, %f693, %f13;
	mul.f32 	%f697, %f684, 0f3F23A3A8;
	mul.f32 	%f698, %f687, 0f3F23A3A8;
	mul.f32 	%f699, %f690, 0f3F23A3A8;
	fma.rn.f32 	%f106, %f20, %f697, %f694;
	fma.rn.f32 	%f107, %f20, %f698, %f695;
	fma.rn.f32 	%f108, %f20, %f699, %f696;
	sub.f32 	%f700, %f106, %f11;
	sub.f32 	%f701, %f107, %f12;
	sub.f32 	%f702, %f108, %f13;
	mul.f32 	%f703, %f701, %f701;
	fma.rn.f32 	%f704, %f700, %f700, %f703;
	fma.rn.f32 	%f705, %f702, %f702, %f704;
	sqrt.rn.f32 	%f661, %f705;
	rcp.rn.f32 	%f706, %f661;
	mul.f32 	%f657, %f706, %f700;
	mul.f32 	%f658, %f706, %f701;
	mul.f32 	%f659, %f706, %f702;
	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r304, [root];
	// inline asm
	call _rt_trace_64, (%r304, %f11, %f12, %f13, %f657, %f658, %f659, %r259, %f373, %f661, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f707, [%rd16];
	setp.neu.f32	%p72, %f707, 0f3F800000;
	@%p72 bra 	BB0_65;

	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r311, [root];
	mov.f32 	%f715, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r311, %f106, %f107, %f108, %f74, %f75, %f76, %r259, %f373, %f715, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f716, [%rd16];
	add.f32 	%f1303, %f1303, %f716;
	add.f32 	%f1302, %f1302, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_65:
	mad.lo.s32 	%r318, %r88, 1664525, 1013904223;
	and.b32  	%r319, %r318, 16777215;
	cvt.rn.f32.u32	%f725, %r319;
	mul.f32 	%f726, %f725, 0f33800000;
	fma.rn.f32 	%f727, %f726, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r89, %r318, 1664525, 1013904223;
	and.b32  	%r320, %r89, 16777215;
	cvt.rn.f32.u32	%f728, %r320;
	mul.f32 	%f729, %f728, 0f33800000;
	fma.rn.f32 	%f730, %f729, 0f40000000, 0fBF800000;
	mul.f32 	%f731, %f14, %f730;
	mul.f32 	%f732, %f15, %f730;
	mul.f32 	%f733, %f16, %f730;
	fma.rn.f32 	%f734, %f17, %f727, %f731;
	fma.rn.f32 	%f735, %f18, %f727, %f732;
	fma.rn.f32 	%f736, %f19, %f727, %f733;
	mul.f32 	%f737, %f735, %f735;
	fma.rn.f32 	%f738, %f734, %f734, %f737;
	fma.rn.f32 	%f739, %f736, %f736, %f738;
	sqrt.rn.f32 	%f740, %f739;
	rcp.rn.f32 	%f741, %f740;
	mul.f32 	%f742, %f734, %f741;
	mul.f32 	%f743, %f735, %f741;
	mul.f32 	%f744, %f736, %f741;
	mul.f32 	%f745, %f1298, %f744;
	mul.f32 	%f746, %f1299, %f743;
	sub.f32 	%f747, %f745, %f746;
	mul.f32 	%f748, %f1299, %f742;
	mul.f32 	%f749, %f1297, %f744;
	sub.f32 	%f750, %f748, %f749;
	mul.f32 	%f751, %f1297, %f743;
	mul.f32 	%f752, %f1298, %f742;
	sub.f32 	%f753, %f751, %f752;
	mul.f32 	%f754, %f742, 0fBF61E1E3;
	mul.f32 	%f755, %f743, 0fBF61E1E3;
	mul.f32 	%f756, %f744, 0fBF61E1E3;
	fma.rn.f32 	%f757, %f20, %f754, %f11;
	fma.rn.f32 	%f758, %f20, %f755, %f12;
	fma.rn.f32 	%f759, %f20, %f756, %f13;
	mul.f32 	%f760, %f747, 0fBE24A490;
	mul.f32 	%f761, %f750, 0fBE24A490;
	mul.f32 	%f762, %f753, 0fBE24A490;
	fma.rn.f32 	%f113, %f20, %f760, %f757;
	fma.rn.f32 	%f114, %f20, %f761, %f758;
	fma.rn.f32 	%f115, %f20, %f762, %f759;
	sub.f32 	%f763, %f113, %f11;
	sub.f32 	%f764, %f114, %f12;
	sub.f32 	%f765, %f115, %f13;
	mul.f32 	%f766, %f764, %f764;
	fma.rn.f32 	%f767, %f763, %f763, %f766;
	fma.rn.f32 	%f768, %f765, %f765, %f767;
	sqrt.rn.f32 	%f724, %f768;
	rcp.rn.f32 	%f769, %f724;
	mul.f32 	%f720, %f769, %f763;
	mul.f32 	%f721, %f769, %f764;
	mul.f32 	%f722, %f769, %f765;
	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r315, [root];
	// inline asm
	call _rt_trace_64, (%r315, %f11, %f12, %f13, %f720, %f721, %f722, %r259, %f373, %f724, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f770, [%rd16];
	setp.neu.f32	%p73, %f770, 0f3F800000;
	@%p73 bra 	BB0_67;

	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r322, [root];
	mov.f32 	%f778, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r322, %f113, %f114, %f115, %f74, %f75, %f76, %r259, %f373, %f778, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f779, [%rd16];
	add.f32 	%f1303, %f1303, %f779;
	add.f32 	%f1302, %f1302, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_67:
	mad.lo.s32 	%r329, %r89, 1664525, 1013904223;
	and.b32  	%r330, %r329, 16777215;
	cvt.rn.f32.u32	%f788, %r330;
	mul.f32 	%f789, %f788, 0f33800000;
	fma.rn.f32 	%f790, %f789, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r90, %r329, 1664525, 1013904223;
	and.b32  	%r331, %r90, 16777215;
	cvt.rn.f32.u32	%f791, %r331;
	mul.f32 	%f792, %f791, 0f33800000;
	fma.rn.f32 	%f793, %f792, 0f40000000, 0fBF800000;
	mul.f32 	%f794, %f14, %f793;
	mul.f32 	%f795, %f15, %f793;
	mul.f32 	%f796, %f16, %f793;
	fma.rn.f32 	%f797, %f17, %f790, %f794;
	fma.rn.f32 	%f798, %f18, %f790, %f795;
	fma.rn.f32 	%f799, %f19, %f790, %f796;
	mul.f32 	%f800, %f798, %f798;
	fma.rn.f32 	%f801, %f797, %f797, %f800;
	fma.rn.f32 	%f802, %f799, %f799, %f801;
	sqrt.rn.f32 	%f803, %f802;
	rcp.rn.f32 	%f804, %f803;
	mul.f32 	%f805, %f797, %f804;
	mul.f32 	%f806, %f798, %f804;
	mul.f32 	%f807, %f799, %f804;
	mul.f32 	%f808, %f1298, %f807;
	mul.f32 	%f809, %f1299, %f806;
	sub.f32 	%f810, %f808, %f809;
	mul.f32 	%f811, %f1299, %f805;
	mul.f32 	%f812, %f1297, %f807;
	sub.f32 	%f813, %f811, %f812;
	mul.f32 	%f814, %f1297, %f806;
	mul.f32 	%f815, %f1298, %f805;
	sub.f32 	%f816, %f814, %f815;
	mul.f32 	%f817, %f805, 0f3ECACABC;
	mul.f32 	%f818, %f806, 0f3ECACABC;
	mul.f32 	%f819, %f807, 0f3ECACABC;
	fma.rn.f32 	%f820, %f20, %f817, %f11;
	fma.rn.f32 	%f821, %f20, %f818, %f12;
	fma.rn.f32 	%f822, %f20, %f819, %f13;
	mul.f32 	%f823, %f810, 0f3F61E1D2;
	mul.f32 	%f824, %f813, 0f3F61E1D2;
	mul.f32 	%f825, %f816, 0f3F61E1D2;
	fma.rn.f32 	%f120, %f20, %f823, %f820;
	fma.rn.f32 	%f121, %f20, %f824, %f821;
	fma.rn.f32 	%f122, %f20, %f825, %f822;
	sub.f32 	%f826, %f120, %f11;
	sub.f32 	%f827, %f121, %f12;
	sub.f32 	%f828, %f122, %f13;
	mul.f32 	%f829, %f827, %f827;
	fma.rn.f32 	%f830, %f826, %f826, %f829;
	fma.rn.f32 	%f831, %f828, %f828, %f830;
	sqrt.rn.f32 	%f787, %f831;
	rcp.rn.f32 	%f832, %f787;
	mul.f32 	%f783, %f832, %f826;
	mul.f32 	%f784, %f832, %f827;
	mul.f32 	%f785, %f832, %f828;
	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r326, [root];
	// inline asm
	call _rt_trace_64, (%r326, %f11, %f12, %f13, %f783, %f784, %f785, %r259, %f373, %f787, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f833, [%rd16];
	setp.neu.f32	%p74, %f833, 0f3F800000;
	@%p74 bra 	BB0_69;

	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r333, [root];
	mov.f32 	%f841, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r333, %f120, %f121, %f122, %f74, %f75, %f76, %r259, %f373, %f841, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f842, [%rd16];
	add.f32 	%f1303, %f1303, %f842;
	add.f32 	%f1302, %f1302, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_69:
	mad.lo.s32 	%r340, %r90, 1664525, 1013904223;
	and.b32  	%r341, %r340, 16777215;
	cvt.rn.f32.u32	%f851, %r341;
	mul.f32 	%f852, %f851, 0f33800000;
	fma.rn.f32 	%f853, %f852, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r477, %r340, 1664525, 1013904223;
	and.b32  	%r342, %r477, 16777215;
	cvt.rn.f32.u32	%f854, %r342;
	mul.f32 	%f855, %f854, 0f33800000;
	fma.rn.f32 	%f856, %f855, 0f40000000, 0fBF800000;
	mul.f32 	%f857, %f14, %f856;
	mul.f32 	%f858, %f15, %f856;
	mul.f32 	%f859, %f16, %f856;
	fma.rn.f32 	%f860, %f17, %f853, %f857;
	fma.rn.f32 	%f861, %f18, %f853, %f858;
	fma.rn.f32 	%f862, %f19, %f853, %f859;
	mul.f32 	%f863, %f861, %f861;
	fma.rn.f32 	%f864, %f860, %f860, %f863;
	fma.rn.f32 	%f865, %f862, %f862, %f864;
	sqrt.rn.f32 	%f866, %f865;
	rcp.rn.f32 	%f867, %f866;
	mul.f32 	%f868, %f860, %f867;
	mul.f32 	%f869, %f861, %f867;
	mul.f32 	%f870, %f862, %f867;
	mul.f32 	%f871, %f1298, %f870;
	mul.f32 	%f872, %f1299, %f869;
	sub.f32 	%f873, %f871, %f872;
	mul.f32 	%f874, %f1299, %f868;
	mul.f32 	%f875, %f1297, %f870;
	sub.f32 	%f876, %f874, %f875;
	mul.f32 	%f877, %f1297, %f869;
	mul.f32 	%f878, %f1298, %f868;
	sub.f32 	%f879, %f877, %f878;
	mul.f32 	%f880, %f868, 0f3F61E1D2;
	mul.f32 	%f881, %f869, 0f3F61E1D2;
	mul.f32 	%f882, %f870, 0f3F61E1D2;
	fma.rn.f32 	%f883, %f20, %f880, %f11;
	fma.rn.f32 	%f884, %f20, %f881, %f12;
	fma.rn.f32 	%f885, %f20, %f882, %f13;
	mul.f32 	%f886, %f873, 0fBF61E1E3;
	mul.f32 	%f887, %f876, 0fBF61E1E3;
	mul.f32 	%f888, %f879, 0fBF61E1E3;
	fma.rn.f32 	%f127, %f20, %f886, %f883;
	fma.rn.f32 	%f128, %f20, %f887, %f884;
	fma.rn.f32 	%f129, %f20, %f888, %f885;
	sub.f32 	%f889, %f127, %f11;
	sub.f32 	%f890, %f128, %f12;
	sub.f32 	%f891, %f129, %f13;
	mul.f32 	%f892, %f890, %f890;
	fma.rn.f32 	%f893, %f889, %f889, %f892;
	fma.rn.f32 	%f894, %f891, %f891, %f893;
	sqrt.rn.f32 	%f850, %f894;
	rcp.rn.f32 	%f895, %f850;
	mul.f32 	%f846, %f895, %f889;
	mul.f32 	%f847, %f895, %f890;
	mul.f32 	%f848, %f895, %f891;
	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r337, [root];
	// inline asm
	call _rt_trace_64, (%r337, %f11, %f12, %f13, %f846, %f847, %f848, %r259, %f373, %f850, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f896, [%rd16];
	setp.neu.f32	%p75, %f896, 0f3F800000;
	@%p75 bra 	BB0_71;

	st.local.u32 	[%rd16], %r266;
	ld.global.u32 	%r344, [root];
	mov.f32 	%f904, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r344, %f127, %f128, %f129, %f74, %f75, %f76, %r259, %f373, %f904, %rd77, %r113);
	// inline asm
	ld.local.f32 	%f905, [%rd16];
	add.f32 	%f1303, %f1303, %f905;
	add.f32 	%f1302, %f1302, 0f3F800000;
	mov.u16 	%rs94, 1;

BB0_71:
	setp.ne.s16	%p76, %rs94, 0;
	@%p76 bra 	BB0_73;

	add.u64 	%rd93, %SP, 32;
	cvta.to.local.u64 	%rd94, %rd93;
	st.local.u32 	[%rd94], %r266;
	ld.global.u32 	%r348, [root];
	mov.f32 	%f913, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r348, %f11, %f12, %f13, %f74, %f75, %f76, %r259, %f373, %f913, %rd93, %r113);
	// inline asm
	ld.local.f32 	%f914, [%rd94];
	add.f32 	%f1303, %f1303, %f914;
	add.f32 	%f1302, %f1302, 0f3F800000;

BB0_73:
	ld.global.u32 	%r451, [samples];
	add.s32 	%r454, %r454, 1;
	setp.lt.s32	%p77, %r454, %r451;
	@%p77 bra 	BB0_9;

BB0_74:
	add.s32 	%r452, %r452, 1;
	setp.lt.s32	%p78, %r452, %r451;
	@%p78 bra 	BB0_7;
	bra.uni 	BB0_75;

BB0_148:
	mov.u64 	%rd210, image_HDR;
	cvta.global.u64 	%rd205, %rd210;
	mov.u32 	%r443, 8;
	mov.u64 	%rd209, 0;
	// inline asm
	call (%rd204), _rt_buffer_get_64, (%rd205, %r112, %r443, %rd22, %rd23, %rd209, %rd209);
	// inline asm
	mov.f32 	%f1294, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f1294;}

	// inline asm
	mov.u16 	%rs89, 0;
	st.v4.u16 	[%rd204], {%rs88, %rs88, %rs88, %rs89};

BB0_149:
	ld.global.u8 	%rs90, [imageEnabled];
	and.b16  	%rs91, %rs90, 64;
	setp.eq.s16	%p159, %rs91, 0;
	@%p159 bra 	BB0_151;

	cvt.u64.u32	%rd213, %r2;
	cvt.u64.u32	%rd214, %r3;
	mov.u64 	%rd217, image_Dir;
	cvta.global.u64 	%rd212, %rd217;
	mov.u64 	%rd216, 0;
	// inline asm
	call (%rd211), _rt_buffer_get_64, (%rd212, %r112, %r113, %rd213, %rd214, %rd216, %rd216);
	// inline asm
	mov.u16 	%rs92, 0;
	st.v4.u8 	[%rd211], {%rs92, %rs92, %rs92, %rs92};
	bra.uni 	BB0_151;

BB0_5:
	mov.f32 	%f1303, %f1302;

BB0_75:
	setp.eq.s32	%p79, %r451, 0;
	mov.f32 	%f1338, 0f3F800000;
	@%p79 bra 	BB0_77;

	mov.f32 	%f916, 0f3F800000;
	max.f32 	%f917, %f1302, %f916;
	div.rn.f32 	%f1338, %f1303, %f917;

BB0_77:
	ld.global.f32 	%f918, [directColor];
	mul.f32 	%f919, %f1338, %f918;
	ld.global.f32 	%f920, [directColor+4];
	mul.f32 	%f921, %f1338, %f920;
	ld.global.f32 	%f922, [directColor+8];
	mul.f32 	%f923, %f1338, %f922;
	cvt.sat.f32.f32	%f924, %f10;
	mul.f32 	%f925, %f919, %f924;
	mul.f32 	%f926, %f921, %f924;
	mul.f32 	%f927, %f923, %f924;
	ld.global.u32 	%r352, [ignoreNormal];
	setp.eq.s32	%p80, %r352, 0;
	selp.f32	%f144, %f925, %f919, %p80;
	selp.f32	%f145, %f926, %f921, %p80;
	selp.f32	%f146, %f927, %f923, %p80;
	ld.global.u32 	%r480, [imageEnabled];
	and.b32  	%r353, %r480, 8;
	setp.eq.s32	%p81, %r353, 0;
	@%p81 bra 	BB0_90;

	mov.u32 	%r446, 2;
	cvt.u64.u32	%rd97, %r2;
	cvt.u64.u32	%rd98, %r3;
	mov.u64 	%rd101, image_Mask;
	cvta.global.u64 	%rd96, %rd101;
	// inline asm
	call (%rd95), _rt_buffer_get_64, (%rd96, %r446, %r446, %rd97, %rd98, %rd29, %rd29);
	// inline asm
	mov.f32 	%f930, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f931, %f930;
	fma.rn.f32 	%f932, %f931, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f147, %f932;
	abs.f32 	%f148, %f1338;
	setp.lt.f32	%p82, %f148, 0f00800000;
	mul.f32 	%f933, %f148, 0f4B800000;
	selp.f32	%f934, 0fC3170000, 0fC2FE0000, %p82;
	selp.f32	%f935, %f933, %f148, %p82;
	mov.b32 	 %r356, %f935;
	and.b32  	%r357, %r356, 8388607;
	or.b32  	%r358, %r357, 1065353216;
	mov.b32 	 %f936, %r358;
	shr.u32 	%r359, %r356, 23;
	cvt.rn.f32.u32	%f937, %r359;
	add.f32 	%f938, %f934, %f937;
	setp.gt.f32	%p83, %f936, 0f3FB504F3;
	mul.f32 	%f939, %f936, 0f3F000000;
	add.f32 	%f940, %f938, 0f3F800000;
	selp.f32	%f941, %f939, %f936, %p83;
	selp.f32	%f942, %f940, %f938, %p83;
	add.f32 	%f943, %f941, 0fBF800000;
	add.f32 	%f929, %f941, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f928,%f929;
	// inline asm
	add.f32 	%f944, %f943, %f943;
	mul.f32 	%f945, %f928, %f944;
	mul.f32 	%f946, %f945, %f945;
	mov.f32 	%f947, 0f3C4CAF63;
	mov.f32 	%f948, 0f3B18F0FE;
	fma.rn.f32 	%f949, %f948, %f946, %f947;
	mov.f32 	%f950, 0f3DAAAABD;
	fma.rn.f32 	%f951, %f949, %f946, %f950;
	mul.rn.f32 	%f952, %f951, %f946;
	mul.rn.f32 	%f953, %f952, %f945;
	sub.f32 	%f954, %f943, %f945;
	neg.f32 	%f955, %f945;
	add.f32 	%f956, %f954, %f954;
	fma.rn.f32 	%f957, %f955, %f943, %f956;
	mul.rn.f32 	%f958, %f928, %f957;
	add.f32 	%f959, %f953, %f945;
	sub.f32 	%f960, %f945, %f959;
	add.f32 	%f961, %f953, %f960;
	add.f32 	%f962, %f958, %f961;
	add.f32 	%f963, %f959, %f962;
	sub.f32 	%f964, %f959, %f963;
	add.f32 	%f965, %f962, %f964;
	mov.f32 	%f966, 0f3F317200;
	mul.rn.f32 	%f967, %f942, %f966;
	mov.f32 	%f968, 0f35BFBE8E;
	mul.rn.f32 	%f969, %f942, %f968;
	add.f32 	%f970, %f967, %f963;
	sub.f32 	%f971, %f967, %f970;
	add.f32 	%f972, %f963, %f971;
	add.f32 	%f973, %f965, %f972;
	add.f32 	%f974, %f969, %f973;
	add.f32 	%f975, %f970, %f974;
	sub.f32 	%f976, %f970, %f975;
	add.f32 	%f977, %f974, %f976;
	mov.f32 	%f978, 0f3EE8BA2E;
	mul.rn.f32 	%f979, %f978, %f975;
	neg.f32 	%f980, %f979;
	fma.rn.f32 	%f981, %f978, %f975, %f980;
	fma.rn.f32 	%f982, %f978, %f977, %f981;
	mov.f32 	%f983, 0f00000000;
	fma.rn.f32 	%f984, %f983, %f975, %f982;
	add.rn.f32 	%f985, %f979, %f984;
	neg.f32 	%f986, %f985;
	add.rn.f32 	%f987, %f979, %f986;
	add.rn.f32 	%f988, %f987, %f984;
	mov.b32 	 %r360, %f985;
	setp.eq.s32	%p84, %r360, 1118925336;
	add.s32 	%r361, %r360, -1;
	mov.b32 	 %f989, %r361;
	add.f32 	%f990, %f988, 0f37000000;
	selp.f32	%f991, %f989, %f985, %p84;
	selp.f32	%f149, %f990, %f988, %p84;
	mul.f32 	%f992, %f991, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f993, %f992;
	mov.f32 	%f994, 0fBF317200;
	fma.rn.f32 	%f995, %f993, %f994, %f991;
	mov.f32 	%f996, 0fB5BFBE8E;
	fma.rn.f32 	%f997, %f993, %f996, %f995;
	mul.f32 	%f998, %f997, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f999, %f998;
	add.f32 	%f1000, %f993, 0f00000000;
	ex2.approx.f32 	%f1001, %f1000;
	mul.f32 	%f1002, %f999, %f1001;
	setp.lt.f32	%p85, %f991, 0fC2D20000;
	selp.f32	%f1003, 0f00000000, %f1002, %p85;
	setp.gt.f32	%p86, %f991, 0f42D20000;
	selp.f32	%f1339, 0f7F800000, %f1003, %p86;
	setp.eq.f32	%p87, %f1339, 0f7F800000;
	@%p87 bra 	BB0_80;

	fma.rn.f32 	%f1339, %f1339, %f149, %f1339;

BB0_80:
	setp.lt.f32	%p88, %f1338, 0f00000000;
	setp.eq.f32	%p89, %f147, 0f3F800000;
	and.pred  	%p1, %p88, %p89;
	mov.b32 	 %r362, %f1339;
	xor.b32  	%r363, %r362, -2147483648;
	mov.b32 	 %f1004, %r363;
	selp.f32	%f1341, %f1004, %f1339, %p1;
	setp.eq.f32	%p90, %f1338, 0f00000000;
	@%p90 bra 	BB0_83;
	bra.uni 	BB0_81;

BB0_83:
	add.f32 	%f1007, %f1338, %f1338;
	selp.f32	%f1341, %f1007, 0f00000000, %p89;
	bra.uni 	BB0_84;

BB0_138:
	mov.u64 	%rd169, image_HDR;
	cvta.global.u64 	%rd164, %rd169;
	mov.u32 	%r426, 8;
	mov.u64 	%rd168, 0;
	// inline asm
	call (%rd163), _rt_buffer_get_64, (%rd164, %r112, %r426, %rd20, %rd21, %rd168, %rd168);
	// inline asm
	mov.f32 	%f1284, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f1284;}

	// inline asm
	st.v4.u16 	[%rd163], {%rs69, %rs69, %rs69, %rs58};

BB0_139:
	ld.global.u8 	%rs70, [imageEnabled];
	and.b16  	%rs71, %rs70, 64;
	setp.eq.s16	%p154, %rs71, 0;
	@%p154 bra 	BB0_151;

	cvt.u64.u32	%rd172, %r2;
	cvt.u64.u32	%rd173, %r3;
	mov.u64 	%rd176, image_Dir;
	cvta.global.u64 	%rd171, %rd176;
	mov.u64 	%rd175, 0;
	// inline asm
	call (%rd170), _rt_buffer_get_64, (%rd171, %r112, %r113, %rd172, %rd173, %rd175, %rd175);
	// inline asm
	mov.u16 	%rs72, 255;
	mov.u16 	%rs73, 0;
	st.v4.u8 	[%rd170], {%rs73, %rs73, %rs73, %rs72};
	bra.uni 	BB0_151;

BB0_81:
	setp.geu.f32	%p91, %f1338, 0f00000000;
	@%p91 bra 	BB0_84;

	cvt.rzi.f32.f32	%f1006, %f978;
	setp.neu.f32	%p92, %f1006, 0f3EE8BA2E;
	selp.f32	%f1341, 0f7FFFFFFF, %f1341, %p92;

BB0_84:
	add.f32 	%f1008, %f148, 0f3EE8BA2E;
	mov.b32 	 %r364, %f1008;
	setp.lt.s32	%p94, %r364, 2139095040;
	@%p94 bra 	BB0_89;

	setp.gtu.f32	%p95, %f148, 0f7F800000;
	@%p95 bra 	BB0_88;
	bra.uni 	BB0_86;

BB0_88:
	add.f32 	%f1341, %f1338, 0f3EE8BA2E;
	bra.uni 	BB0_89;

BB0_86:
	setp.neu.f32	%p96, %f148, 0f7F800000;
	@%p96 bra 	BB0_89;

	selp.f32	%f1341, 0fFF800000, 0f7F800000, %p1;

BB0_89:
	mul.f32 	%f1009, %f1341, 0f437F0000;
	setp.eq.f32	%p97, %f1338, 0f3F800000;
	selp.f32	%f1010, 0f437F0000, %f1009, %p97;
	cvt.rzi.u32.f32	%r365, %f1010;
	cvt.u16.u32	%rs28, %r365;
	mov.u16 	%rs29, 255;
	st.v2.u8 	[%rd95], {%rs28, %rs29};
	ld.global.u32 	%r480, [imageEnabled];

BB0_90:
	and.b32  	%r366, %r480, 1;
	setp.eq.b32	%p98, %r366, 1;
	@!%p98 bra 	BB0_125;
	bra.uni 	BB0_91;

BB0_91:
	mov.f32 	%f1013, 0f3E666666;
	cvt.rzi.f32.f32	%f1014, %f1013;
	fma.rn.f32 	%f1015, %f1014, 0fC0000000, 0f3EE66666;
	abs.f32 	%f160, %f1015;
	abs.f32 	%f161, %f144;
	setp.lt.f32	%p99, %f161, 0f00800000;
	mul.f32 	%f1016, %f161, 0f4B800000;
	selp.f32	%f1017, 0fC3170000, 0fC2FE0000, %p99;
	selp.f32	%f1018, %f1016, %f161, %p99;
	mov.b32 	 %r367, %f1018;
	and.b32  	%r368, %r367, 8388607;
	or.b32  	%r369, %r368, 1065353216;
	mov.b32 	 %f1019, %r369;
	shr.u32 	%r370, %r367, 23;
	cvt.rn.f32.u32	%f1020, %r370;
	add.f32 	%f1021, %f1017, %f1020;
	setp.gt.f32	%p100, %f1019, 0f3FB504F3;
	mul.f32 	%f1022, %f1019, 0f3F000000;
	add.f32 	%f1023, %f1021, 0f3F800000;
	selp.f32	%f1024, %f1022, %f1019, %p100;
	selp.f32	%f1025, %f1023, %f1021, %p100;
	add.f32 	%f1026, %f1024, 0fBF800000;
	add.f32 	%f1012, %f1024, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1011,%f1012;
	// inline asm
	add.f32 	%f1027, %f1026, %f1026;
	mul.f32 	%f1028, %f1011, %f1027;
	mul.f32 	%f1029, %f1028, %f1028;
	mov.f32 	%f1030, 0f3C4CAF63;
	mov.f32 	%f1031, 0f3B18F0FE;
	fma.rn.f32 	%f1032, %f1031, %f1029, %f1030;
	mov.f32 	%f1033, 0f3DAAAABD;
	fma.rn.f32 	%f1034, %f1032, %f1029, %f1033;
	mul.rn.f32 	%f1035, %f1034, %f1029;
	mul.rn.f32 	%f1036, %f1035, %f1028;
	sub.f32 	%f1037, %f1026, %f1028;
	neg.f32 	%f1038, %f1028;
	add.f32 	%f1039, %f1037, %f1037;
	fma.rn.f32 	%f1040, %f1038, %f1026, %f1039;
	mul.rn.f32 	%f1041, %f1011, %f1040;
	add.f32 	%f1042, %f1036, %f1028;
	sub.f32 	%f1043, %f1028, %f1042;
	add.f32 	%f1044, %f1036, %f1043;
	add.f32 	%f1045, %f1041, %f1044;
	add.f32 	%f1046, %f1042, %f1045;
	sub.f32 	%f1047, %f1042, %f1046;
	add.f32 	%f1048, %f1045, %f1047;
	mov.f32 	%f1049, 0f3F317200;
	mul.rn.f32 	%f1050, %f1025, %f1049;
	mov.f32 	%f1051, 0f35BFBE8E;
	mul.rn.f32 	%f1052, %f1025, %f1051;
	add.f32 	%f1053, %f1050, %f1046;
	sub.f32 	%f1054, %f1050, %f1053;
	add.f32 	%f1055, %f1046, %f1054;
	add.f32 	%f1056, %f1048, %f1055;
	add.f32 	%f1057, %f1052, %f1056;
	add.f32 	%f1058, %f1053, %f1057;
	sub.f32 	%f1059, %f1053, %f1058;
	add.f32 	%f1060, %f1057, %f1059;
	mov.f32 	%f1061, 0f3EE66666;
	mul.rn.f32 	%f1062, %f1061, %f1058;
	neg.f32 	%f1063, %f1062;
	fma.rn.f32 	%f1064, %f1061, %f1058, %f1063;
	fma.rn.f32 	%f1065, %f1061, %f1060, %f1064;
	mov.f32 	%f1066, 0f00000000;
	fma.rn.f32 	%f1067, %f1066, %f1058, %f1065;
	add.rn.f32 	%f1068, %f1062, %f1067;
	neg.f32 	%f1069, %f1068;
	add.rn.f32 	%f1070, %f1062, %f1069;
	add.rn.f32 	%f1071, %f1070, %f1067;
	mov.b32 	 %r371, %f1068;
	setp.eq.s32	%p101, %r371, 1118925336;
	add.s32 	%r372, %r371, -1;
	mov.b32 	 %f1072, %r372;
	add.f32 	%f1073, %f1071, 0f37000000;
	selp.f32	%f1074, %f1072, %f1068, %p101;
	selp.f32	%f162, %f1073, %f1071, %p101;
	mul.f32 	%f1075, %f1074, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1076, %f1075;
	mov.f32 	%f1077, 0fBF317200;
	fma.rn.f32 	%f1078, %f1076, %f1077, %f1074;
	mov.f32 	%f1079, 0fB5BFBE8E;
	fma.rn.f32 	%f1080, %f1076, %f1079, %f1078;
	mul.f32 	%f1081, %f1080, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1082, %f1081;
	add.f32 	%f1083, %f1076, 0f00000000;
	ex2.approx.f32 	%f1084, %f1083;
	mul.f32 	%f1085, %f1082, %f1084;
	setp.lt.f32	%p102, %f1074, 0fC2D20000;
	selp.f32	%f1086, 0f00000000, %f1085, %p102;
	setp.gt.f32	%p103, %f1074, 0f42D20000;
	selp.f32	%f1342, 0f7F800000, %f1086, %p103;
	setp.eq.f32	%p104, %f1342, 0f7F800000;
	@%p104 bra 	BB0_93;

	fma.rn.f32 	%f1342, %f1342, %f162, %f1342;

BB0_93:
	setp.lt.f32	%p105, %f144, 0f00000000;
	setp.eq.f32	%p106, %f160, 0f3F800000;
	and.pred  	%p2, %p105, %p106;
	mov.b32 	 %r373, %f1342;
	xor.b32  	%r374, %r373, -2147483648;
	mov.b32 	 %f1087, %r374;
	selp.f32	%f1344, %f1087, %f1342, %p2;
	setp.eq.f32	%p107, %f144, 0f00000000;
	@%p107 bra 	BB0_96;
	bra.uni 	BB0_94;

BB0_96:
	add.f32 	%f1090, %f144, %f144;
	selp.f32	%f1344, %f1090, 0f00000000, %p106;
	bra.uni 	BB0_97;

BB0_94:
	setp.geu.f32	%p108, %f144, 0f00000000;
	@%p108 bra 	BB0_97;

	cvt.rzi.f32.f32	%f1089, %f1061;
	setp.neu.f32	%p109, %f1089, 0f3EE66666;
	selp.f32	%f1344, 0f7FFFFFFF, %f1344, %p109;

BB0_97:
	add.f32 	%f1091, %f161, 0f3EE66666;
	mov.b32 	 %r375, %f1091;
	setp.lt.s32	%p111, %r375, 2139095040;
	@%p111 bra 	BB0_102;

	setp.gtu.f32	%p112, %f161, 0f7F800000;
	@%p112 bra 	BB0_101;
	bra.uni 	BB0_99;

BB0_101:
	add.f32 	%f1344, %f144, 0f3EE66666;
	bra.uni 	BB0_102;

BB0_99:
	setp.neu.f32	%p113, %f161, 0f7F800000;
	@%p113 bra 	BB0_102;

	selp.f32	%f1344, 0fFF800000, 0f7F800000, %p2;

BB0_102:
	setp.eq.f32	%p114, %f144, 0f3F800000;
	selp.f32	%f173, 0f3F800000, %f1344, %p114;
	abs.f32 	%f174, %f145;
	setp.lt.f32	%p115, %f174, 0f00800000;
	mul.f32 	%f1094, %f174, 0f4B800000;
	selp.f32	%f1095, 0fC3170000, 0fC2FE0000, %p115;
	selp.f32	%f1096, %f1094, %f174, %p115;
	mov.b32 	 %r376, %f1096;
	and.b32  	%r377, %r376, 8388607;
	or.b32  	%r378, %r377, 1065353216;
	mov.b32 	 %f1097, %r378;
	shr.u32 	%r379, %r376, 23;
	cvt.rn.f32.u32	%f1098, %r379;
	add.f32 	%f1099, %f1095, %f1098;
	setp.gt.f32	%p116, %f1097, 0f3FB504F3;
	mul.f32 	%f1100, %f1097, 0f3F000000;
	add.f32 	%f1101, %f1099, 0f3F800000;
	selp.f32	%f1102, %f1100, %f1097, %p116;
	selp.f32	%f1103, %f1101, %f1099, %p116;
	add.f32 	%f1104, %f1102, 0fBF800000;
	add.f32 	%f1093, %f1102, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1092,%f1093;
	// inline asm
	add.f32 	%f1105, %f1104, %f1104;
	mul.f32 	%f1106, %f1092, %f1105;
	mul.f32 	%f1107, %f1106, %f1106;
	fma.rn.f32 	%f1110, %f1031, %f1107, %f1030;
	fma.rn.f32 	%f1112, %f1110, %f1107, %f1033;
	mul.rn.f32 	%f1113, %f1112, %f1107;
	mul.rn.f32 	%f1114, %f1113, %f1106;
	sub.f32 	%f1115, %f1104, %f1106;
	neg.f32 	%f1116, %f1106;
	add.f32 	%f1117, %f1115, %f1115;
	fma.rn.f32 	%f1118, %f1116, %f1104, %f1117;
	mul.rn.f32 	%f1119, %f1092, %f1118;
	add.f32 	%f1120, %f1114, %f1106;
	sub.f32 	%f1121, %f1106, %f1120;
	add.f32 	%f1122, %f1114, %f1121;
	add.f32 	%f1123, %f1119, %f1122;
	add.f32 	%f1124, %f1120, %f1123;
	sub.f32 	%f1125, %f1120, %f1124;
	add.f32 	%f1126, %f1123, %f1125;
	mul.rn.f32 	%f1128, %f1103, %f1049;
	mul.rn.f32 	%f1130, %f1103, %f1051;
	add.f32 	%f1131, %f1128, %f1124;
	sub.f32 	%f1132, %f1128, %f1131;
	add.f32 	%f1133, %f1124, %f1132;
	add.f32 	%f1134, %f1126, %f1133;
	add.f32 	%f1135, %f1130, %f1134;
	add.f32 	%f1136, %f1131, %f1135;
	sub.f32 	%f1137, %f1131, %f1136;
	add.f32 	%f1138, %f1135, %f1137;
	mul.rn.f32 	%f1140, %f1061, %f1136;
	neg.f32 	%f1141, %f1140;
	fma.rn.f32 	%f1142, %f1061, %f1136, %f1141;
	fma.rn.f32 	%f1143, %f1061, %f1138, %f1142;
	fma.rn.f32 	%f1145, %f1066, %f1136, %f1143;
	add.rn.f32 	%f1146, %f1140, %f1145;
	neg.f32 	%f1147, %f1146;
	add.rn.f32 	%f1148, %f1140, %f1147;
	add.rn.f32 	%f1149, %f1148, %f1145;
	mov.b32 	 %r380, %f1146;
	setp.eq.s32	%p117, %r380, 1118925336;
	add.s32 	%r381, %r380, -1;
	mov.b32 	 %f1150, %r381;
	add.f32 	%f1151, %f1149, 0f37000000;
	selp.f32	%f1152, %f1150, %f1146, %p117;
	selp.f32	%f175, %f1151, %f1149, %p117;
	mul.f32 	%f1153, %f1152, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1154, %f1153;
	fma.rn.f32 	%f1156, %f1154, %f1077, %f1152;
	fma.rn.f32 	%f1158, %f1154, %f1079, %f1156;
	mul.f32 	%f1159, %f1158, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1160, %f1159;
	add.f32 	%f1161, %f1154, 0f00000000;
	ex2.approx.f32 	%f1162, %f1161;
	mul.f32 	%f1163, %f1160, %f1162;
	setp.lt.f32	%p118, %f1152, 0fC2D20000;
	selp.f32	%f1164, 0f00000000, %f1163, %p118;
	setp.gt.f32	%p119, %f1152, 0f42D20000;
	selp.f32	%f1345, 0f7F800000, %f1164, %p119;
	setp.eq.f32	%p120, %f1345, 0f7F800000;
	@%p120 bra 	BB0_104;

	fma.rn.f32 	%f1345, %f1345, %f175, %f1345;

BB0_104:
	setp.lt.f32	%p121, %f145, 0f00000000;
	and.pred  	%p3, %p121, %p106;
	mov.b32 	 %r382, %f1345;
	xor.b32  	%r383, %r382, -2147483648;
	mov.b32 	 %f1165, %r383;
	selp.f32	%f1347, %f1165, %f1345, %p3;
	setp.eq.f32	%p123, %f145, 0f00000000;
	@%p123 bra 	BB0_107;
	bra.uni 	BB0_105;

BB0_107:
	add.f32 	%f1168, %f145, %f145;
	selp.f32	%f1347, %f1168, 0f00000000, %p106;
	bra.uni 	BB0_108;

BB0_105:
	setp.geu.f32	%p124, %f145, 0f00000000;
	@%p124 bra 	BB0_108;

	cvt.rzi.f32.f32	%f1167, %f1061;
	setp.neu.f32	%p125, %f1167, 0f3EE66666;
	selp.f32	%f1347, 0f7FFFFFFF, %f1347, %p125;

BB0_108:
	add.f32 	%f1169, %f174, 0f3EE66666;
	mov.b32 	 %r384, %f1169;
	setp.lt.s32	%p127, %r384, 2139095040;
	@%p127 bra 	BB0_113;

	setp.gtu.f32	%p128, %f174, 0f7F800000;
	@%p128 bra 	BB0_112;
	bra.uni 	BB0_110;

BB0_112:
	add.f32 	%f1347, %f145, 0f3EE66666;
	bra.uni 	BB0_113;

BB0_110:
	setp.neu.f32	%p129, %f174, 0f7F800000;
	@%p129 bra 	BB0_113;

	selp.f32	%f1347, 0fFF800000, 0f7F800000, %p3;

BB0_113:
	setp.eq.f32	%p130, %f145, 0f3F800000;
	selp.f32	%f186, 0f3F800000, %f1347, %p130;
	abs.f32 	%f187, %f146;
	setp.lt.f32	%p131, %f187, 0f00800000;
	mul.f32 	%f1172, %f187, 0f4B800000;
	selp.f32	%f1173, 0fC3170000, 0fC2FE0000, %p131;
	selp.f32	%f1174, %f1172, %f187, %p131;
	mov.b32 	 %r385, %f1174;
	and.b32  	%r386, %r385, 8388607;
	or.b32  	%r387, %r386, 1065353216;
	mov.b32 	 %f1175, %r387;
	shr.u32 	%r388, %r385, 23;
	cvt.rn.f32.u32	%f1176, %r388;
	add.f32 	%f1177, %f1173, %f1176;
	setp.gt.f32	%p132, %f1175, 0f3FB504F3;
	mul.f32 	%f1178, %f1175, 0f3F000000;
	add.f32 	%f1179, %f1177, 0f3F800000;
	selp.f32	%f1180, %f1178, %f1175, %p132;
	selp.f32	%f1181, %f1179, %f1177, %p132;
	add.f32 	%f1182, %f1180, 0fBF800000;
	add.f32 	%f1171, %f1180, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1170,%f1171;
	// inline asm
	add.f32 	%f1183, %f1182, %f1182;
	mul.f32 	%f1184, %f1170, %f1183;
	mul.f32 	%f1185, %f1184, %f1184;
	fma.rn.f32 	%f1188, %f1031, %f1185, %f1030;
	fma.rn.f32 	%f1190, %f1188, %f1185, %f1033;
	mul.rn.f32 	%f1191, %f1190, %f1185;
	mul.rn.f32 	%f1192, %f1191, %f1184;
	sub.f32 	%f1193, %f1182, %f1184;
	neg.f32 	%f1194, %f1184;
	add.f32 	%f1195, %f1193, %f1193;
	fma.rn.f32 	%f1196, %f1194, %f1182, %f1195;
	mul.rn.f32 	%f1197, %f1170, %f1196;
	add.f32 	%f1198, %f1192, %f1184;
	sub.f32 	%f1199, %f1184, %f1198;
	add.f32 	%f1200, %f1192, %f1199;
	add.f32 	%f1201, %f1197, %f1200;
	add.f32 	%f1202, %f1198, %f1201;
	sub.f32 	%f1203, %f1198, %f1202;
	add.f32 	%f1204, %f1201, %f1203;
	mul.rn.f32 	%f1206, %f1181, %f1049;
	mul.rn.f32 	%f1208, %f1181, %f1051;
	add.f32 	%f1209, %f1206, %f1202;
	sub.f32 	%f1210, %f1206, %f1209;
	add.f32 	%f1211, %f1202, %f1210;
	add.f32 	%f1212, %f1204, %f1211;
	add.f32 	%f1213, %f1208, %f1212;
	add.f32 	%f1214, %f1209, %f1213;
	sub.f32 	%f1215, %f1209, %f1214;
	add.f32 	%f1216, %f1213, %f1215;
	mul.rn.f32 	%f1218, %f1061, %f1214;
	neg.f32 	%f1219, %f1218;
	fma.rn.f32 	%f1220, %f1061, %f1214, %f1219;
	fma.rn.f32 	%f1221, %f1061, %f1216, %f1220;
	fma.rn.f32 	%f1223, %f1066, %f1214, %f1221;
	add.rn.f32 	%f1224, %f1218, %f1223;
	neg.f32 	%f1225, %f1224;
	add.rn.f32 	%f1226, %f1218, %f1225;
	add.rn.f32 	%f1227, %f1226, %f1223;
	mov.b32 	 %r389, %f1224;
	setp.eq.s32	%p133, %r389, 1118925336;
	add.s32 	%r390, %r389, -1;
	mov.b32 	 %f1228, %r390;
	add.f32 	%f1229, %f1227, 0f37000000;
	selp.f32	%f1230, %f1228, %f1224, %p133;
	selp.f32	%f188, %f1229, %f1227, %p133;
	mul.f32 	%f1231, %f1230, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1232, %f1231;
	fma.rn.f32 	%f1234, %f1232, %f1077, %f1230;
	fma.rn.f32 	%f1236, %f1232, %f1079, %f1234;
	mul.f32 	%f1237, %f1236, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1238, %f1237;
	add.f32 	%f1239, %f1232, 0f00000000;
	ex2.approx.f32 	%f1240, %f1239;
	mul.f32 	%f1241, %f1238, %f1240;
	setp.lt.f32	%p134, %f1230, 0fC2D20000;
	selp.f32	%f1242, 0f00000000, %f1241, %p134;
	setp.gt.f32	%p135, %f1230, 0f42D20000;
	selp.f32	%f1348, 0f7F800000, %f1242, %p135;
	setp.eq.f32	%p136, %f1348, 0f7F800000;
	@%p136 bra 	BB0_115;

	fma.rn.f32 	%f1348, %f1348, %f188, %f1348;

BB0_115:
	setp.lt.f32	%p137, %f146, 0f00000000;
	and.pred  	%p4, %p137, %p106;
	mov.b32 	 %r391, %f1348;
	xor.b32  	%r392, %r391, -2147483648;
	mov.b32 	 %f1243, %r392;
	selp.f32	%f1350, %f1243, %f1348, %p4;
	setp.eq.f32	%p139, %f146, 0f00000000;
	@%p139 bra 	BB0_118;
	bra.uni 	BB0_116;

BB0_118:
	add.f32 	%f1246, %f146, %f146;
	selp.f32	%f1350, %f1246, 0f00000000, %p106;
	bra.uni 	BB0_119;

BB0_116:
	setp.geu.f32	%p140, %f146, 0f00000000;
	@%p140 bra 	BB0_119;

	cvt.rzi.f32.f32	%f1245, %f1061;
	setp.neu.f32	%p141, %f1245, 0f3EE66666;
	selp.f32	%f1350, 0f7FFFFFFF, %f1350, %p141;

BB0_119:
	add.f32 	%f1247, %f187, 0f3EE66666;
	mov.b32 	 %r393, %f1247;
	setp.lt.s32	%p143, %r393, 2139095040;
	@%p143 bra 	BB0_124;

	setp.gtu.f32	%p144, %f187, 0f7F800000;
	@%p144 bra 	BB0_123;
	bra.uni 	BB0_121;

BB0_123:
	add.f32 	%f1350, %f146, 0f3EE66666;
	bra.uni 	BB0_124;

BB0_121:
	setp.neu.f32	%p145, %f187, 0f7F800000;
	@%p145 bra 	BB0_124;

	selp.f32	%f1350, 0fFF800000, 0f7F800000, %p4;

BB0_124:
	mov.u32 	%r447, 2;
	setp.eq.f32	%p146, %f146, 0f3F800000;
	selp.f32	%f1248, 0f3F800000, %f1350, %p146;
	cvt.u64.u32	%rd105, %r3;
	cvt.u64.u32	%rd104, %r2;
	mov.u64 	%rd108, image;
	cvta.global.u64 	%rd103, %rd108;
	// inline asm
	call (%rd102), _rt_buffer_get_64, (%rd103, %r447, %r113, %rd104, %rd105, %rd29, %rd29);
	// inline asm
	cvt.sat.f32.f32	%f1249, %f1248;
	mul.f32 	%f1250, %f1249, 0f437FFD71;
	cvt.rzi.u32.f32	%r396, %f1250;
	cvt.sat.f32.f32	%f1251, %f186;
	mul.f32 	%f1252, %f1251, 0f437FFD71;
	cvt.rzi.u32.f32	%r397, %f1252;
	cvt.sat.f32.f32	%f1253, %f173;
	mul.f32 	%f1254, %f1253, 0f437FFD71;
	cvt.rzi.u32.f32	%r398, %f1254;
	cvt.u16.u32	%rs30, %r396;
	cvt.u16.u32	%rs31, %r398;
	cvt.u16.u32	%rs32, %r397;
	mov.u16 	%rs33, 255;
	st.v4.u8 	[%rd102], {%rs30, %rs32, %rs31, %rs33};
	ld.global.u32 	%r480, [imageEnabled];

BB0_125:
	and.b32  	%r399, %r480, 4;
	setp.eq.s32	%p147, %r399, 0;
	@%p147 bra 	BB0_129;

	ld.global.u32 	%r400, [additive];
	setp.eq.s32	%p148, %r400, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	mov.f32 	%f1255, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f1255;}

	// inline asm
	@%p148 bra 	BB0_128;

	mov.u32 	%r448, 2;
	mov.u64 	%rd121, image_HDR;
	cvta.global.u64 	%rd110, %rd121;
	mov.u32 	%r404, 8;
	// inline asm
	call (%rd109), _rt_buffer_get_64, (%rd110, %r448, %r404, %rd18, %rd19, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs41, %rs42, %rs43, %rs44}, [%rd109];
	// inline asm
	{  cvt.f32.f16 %f1256, %rs41;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1257, %rs42;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1258, %rs43;}

	// inline asm
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd110, %r448, %r404, %rd18, %rd19, %rd29, %rd29);
	// inline asm
	add.f32 	%f1259, %f144, %f1256;
	add.f32 	%f1260, %f145, %f1257;
	add.f32 	%f1261, %f146, %f1258;
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f1261;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs39, %f1260;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f1259;}

	// inline asm
	st.v4.u16 	[%rd115], {%rs38, %rs39, %rs40, %rs34};
	bra.uni 	BB0_129;

BB0_128:
	mov.u32 	%r449, 2;
	mov.u64 	%rd128, image_HDR;
	cvta.global.u64 	%rd123, %rd128;
	mov.u32 	%r406, 8;
	// inline asm
	call (%rd122), _rt_buffer_get_64, (%rd123, %r449, %r406, %rd18, %rd19, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f146;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f145;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f144;}

	// inline asm
	st.v4.u16 	[%rd122], {%rs45, %rs46, %rs47, %rs34};

BB0_129:
	ld.global.u8 	%rs48, [imageEnabled];
	and.b16  	%rs49, %rs48, 64;
	setp.eq.s16	%p149, %rs49, 0;
	@%p149 bra 	BB0_151;

	mov.u32 	%r450, 2;
	ld.global.f32 	%f1265, [directDir];
	ld.global.f32 	%f1266, [directDir+4];
	ld.global.f32 	%f1267, [directDir+8];
	cvt.u64.u32	%rd132, %r3;
	cvt.u64.u32	%rd131, %r2;
	mov.u64 	%rd135, image_Dir;
	cvta.global.u64 	%rd130, %rd135;
	// inline asm
	call (%rd129), _rt_buffer_get_64, (%rd130, %r450, %r113, %rd131, %rd132, %rd29, %rd29);
	// inline asm
	fma.rn.f32 	%f1268, %f1265, 0fBF000000, 0f3F000000;
	mul.f32 	%f1269, %f1268, 0f437F0000;
	cvt.rzi.u32.f32	%r409, %f1269;
	fma.rn.f32 	%f1270, %f1266, 0fBF000000, 0f3F000000;
	mul.f32 	%f1271, %f1270, 0f437F0000;
	cvt.rzi.u32.f32	%r410, %f1271;
	fma.rn.f32 	%f1272, %f1267, 0fBF000000, 0f3F000000;
	mul.f32 	%f1273, %f1272, 0f437F0000;
	cvt.rzi.u32.f32	%r411, %f1273;
	cvt.u16.u32	%rs50, %r411;
	cvt.u16.u32	%rs51, %r410;
	cvt.u16.u32	%rs52, %r409;
	mov.u16 	%rs53, 255;
	st.v4.u8 	[%rd129], {%rs52, %rs51, %rs50, %rs53};

BB0_151:
	ret;
}


