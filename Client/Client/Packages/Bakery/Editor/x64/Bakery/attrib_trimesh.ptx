//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z11interpolatei
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 4 .f32 triAlpha;
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 index_buffer[1];
.global .align 4 .u32 firstAlphaTriangle;
.global .align 1 .b8 vertex_buffer_uv[1];
.global .align 1 .b8 triangleAlphaIDs[1];
.global .align 1 .b8 alphaTextures[1];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8triAlphaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18firstAlphaTriangleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8triAlphaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename18firstAlphaTriangleE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename3rayE[4] = {82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8triAlphaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18firstAlphaTriangleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic8triAlphaE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 114, 105, 65, 108, 112, 104, 97, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic18firstAlphaTriangleE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8triAlphaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18firstAlphaTriangleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z11interpolatei(
	.param .u32 _Z11interpolatei_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<65>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<76>;


	ld.param.u32 	%r5, [_Z11interpolatei_param_0];
	// inline asm
	call (%f6, %f7), _rt_get_triangle_barycentrics, ();
	// inline asm
	cvt.s64.s32	%rd3, %r5;
	mov.u64 	%rd7, index_buffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 12;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r6, %r7, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	ld.u32 	%r1, [%rd1];
	ld.u32 	%r2, [%rd1+4];
	ld.u32 	%r3, [%rd1+8];
	ld.global.u32 	%r4, [firstAlphaTriangle];
	setp.gt.s32	%p1, %r4, %r5;
	mov.f32 	%f64, 0f3F800000;
	sub.f32 	%f9, %f64, %f6;
	sub.f32 	%f3, %f9, %f7;
	@%p1 bra 	BB0_2;

	cvt.s64.s32	%rd28, %r3;
	sub.s32 	%r26, %r5, %r4;
	cvt.s64.s32	%rd10, %r26;
	mov.u64 	%rd53, triangleAlphaIDs;
	cvta.global.u64 	%rd9, %rd53;
	mov.u32 	%r22, 4;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r6, %r22, %rd10, %rd6, %rd6, %rd6);
	// inline asm
	ld.u32 	%rd54, [%rd8];
	cvt.u32.u64	%r27, %rd54;
	shr.u32 	%r28, %r27, 16;
	cvt.s64.s32	%rd16, %r1;
	mov.u64 	%rd55, vertex_buffer_uv;
	cvta.global.u64 	%rd15, %rd55;
	mov.u32 	%r15, 8;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd15, %r6, %r15, %rd16, %rd6, %rd6, %rd6);
	// inline asm
	ld.v2.f32 	{%f10, %f11}, [%rd14];
	cvt.s64.s32	%rd22, %r2;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd15, %r6, %r15, %rd22, %rd6, %rd6, %rd6);
	// inline asm
	ld.v2.f32 	{%f14, %f15}, [%rd20];
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd15, %r6, %r15, %rd28, %rd6, %rd6, %rd6);
	// inline asm
	mul.f32 	%f18, %f6, %f14;
	mul.f32 	%f19, %f6, %f15;
	fma.rn.f32 	%f20, %f3, %f10, %f18;
	fma.rn.f32 	%f21, %f3, %f11, %f19;
	ld.v2.f32 	{%f22, %f23}, [%rd26];
	fma.rn.f32 	%f26, %f7, %f22, %f20;
	fma.rn.f32 	%f27, %f7, %f23, %f21;
	abs.f32 	%f28, %f26;
	cvt.rmi.f32.f32	%f29, %f28;
	sub.f32 	%f30, %f28, %f29;
	abs.f32 	%f31, %f27;
	cvt.rmi.f32.f32	%f32, %f31;
	sub.f32 	%f33, %f31, %f32;
	and.b64  	%rd34, %rd54, 65535;
	mov.u64 	%rd56, alphaTextures;
	cvta.global.u64 	%rd33, %rd56;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r6, %r22, %rd34, %rd6, %rd6, %rd6);
	// inline asm
	ld.u32 	%r18, [%rd32];
	mov.u32 	%r24, 2;
	// inline asm
	call (%rd38, %rd39, %rd40, %rd41), _rt_buffer_get_id_size_64, (%r18, %r24, %r6);
	// inline asm
	cvt.rn.f32.u64	%f34, %rd38;
	mul.f32 	%f35, %f30, %f34;
	cvt.rzi.u32.f32	%r29, %f35;
	cvt.rn.f32.u64	%f36, %rd39;
	mul.f32 	%f37, %f33, %f36;
	cvt.rzi.u32.f32	%r30, %f37;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd33, %r6, %r22, %rd34, %rd6, %rd6, %rd6);
	// inline asm
	ld.u32 	%r23, [%rd42];
	cvt.u64.u32	%rd49, %r29;
	cvt.u64.u32	%rd50, %r30;
	// inline asm
	call (%rd48), _rt_buffer_get_id_64, (%r23, %r24, %r6, %rd49, %rd50, %rd6, %rd6);
	// inline asm
	ld.u8 	%r31, [%rd48];
	and.b32  	%r32, %r31, %r28;
	setp.eq.s32	%p2, %r32, 0;
	selp.f32	%f64, 0f00000000, 0f3F800000, %p2;

BB0_2:
	st.global.f32 	[triAlpha], %f64;
	cvt.s64.s32	%rd59, %r1;
	mov.u64 	%rd75, vertex_buffer;
	cvta.global.u64 	%rd58, %rd75;
	mov.u32 	%r38, 24;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd58, %r6, %r38, %rd59, %rd6, %rd6, %rd6);
	// inline asm
	ld.f32 	%f38, [%rd57+20];
	ld.f32 	%f39, [%rd57+16];
	ld.f32 	%f40, [%rd57+12];
	cvt.s64.s32	%rd65, %r2;
	// inline asm
	call (%rd63), _rt_buffer_get_64, (%rd58, %r6, %r38, %rd65, %rd6, %rd6, %rd6);
	// inline asm
	ld.f32 	%f41, [%rd63+20];
	ld.f32 	%f42, [%rd63+16];
	ld.f32 	%f43, [%rd63+12];
	cvt.s64.s32	%rd71, %r3;
	// inline asm
	call (%rd69), _rt_buffer_get_64, (%rd58, %r6, %r38, %rd71, %rd6, %rd6, %rd6);
	// inline asm
	mul.f32 	%f44, %f6, %f43;
	mul.f32 	%f45, %f6, %f42;
	mul.f32 	%f46, %f6, %f41;
	fma.rn.f32 	%f47, %f3, %f40, %f44;
	fma.rn.f32 	%f48, %f3, %f39, %f45;
	fma.rn.f32 	%f49, %f3, %f38, %f46;
	ld.f32 	%f50, [%rd69+20];
	ld.f32 	%f51, [%rd69+16];
	ld.f32 	%f52, [%rd69+12];
	fma.rn.f32 	%f53, %f7, %f52, %f47;
	fma.rn.f32 	%f54, %f7, %f51, %f48;
	fma.rn.f32 	%f55, %f7, %f50, %f49;
	mul.f32 	%f56, %f54, %f54;
	fma.rn.f32 	%f57, %f53, %f53, %f56;
	fma.rn.f32 	%f58, %f55, %f55, %f57;
	sqrt.rn.f32 	%f59, %f58;
	rcp.rn.f32 	%f60, %f59;
	mul.f32 	%f61, %f60, %f53;
	mul.f32 	%f62, %f60, %f54;
	mul.f32 	%f63, %f60, %f55;
	st.global.f32 	[normal], %f61;
	st.global.f32 	[normal+4], %f62;
	st.global.f32 	[normal+8], %f63;
	ret;
}


