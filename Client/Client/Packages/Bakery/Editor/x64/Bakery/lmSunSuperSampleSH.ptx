//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<155>;
	.reg .b16 	%rs<177>;
	.reg .f32 	%f<1404>;
	.reg .b32 	%r<502>;
	.reg .b64 	%rd<326>;


	mov.u64 	%rd325, __local_depot0;
	cvta.local.u64 	%SP, %rd325;
	ld.global.v2.u32 	{%r109, %r110}, [pixelID];
	cvt.u64.u32	%rd24, %r109;
	cvt.u64.u32	%rd25, %r110;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r107, 2;
	mov.u32 	%r108, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r107, %r108, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r1, [%rd22];
	shr.u32 	%r113, %r1, 16;
	cvt.u16.u32	%rs1, %r113;
	and.b16  	%rs15, %rs1, 255;
	cvt.u16.u32	%rs16, %r1;
	or.b16  	%rs17, %rs16, %rs15;
	setp.eq.s16	%p5, %rs17, 0;
	mov.f32 	%f1350, 0f00000000;
	mov.f32 	%f1351, %f1350;
	mov.f32 	%f1352, %f1350;
	@%p5 bra 	BB0_2;

	ld.u8 	%rs18, [%rd22+1];
	and.b16  	%rs20, %rs16, 255;
	cvt.rn.f32.u16	%f208, %rs20;
	div.rn.f32 	%f209, %f208, 0f437F0000;
	fma.rn.f32 	%f210, %f209, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f211, %rs18;
	div.rn.f32 	%f212, %f211, 0f437F0000;
	fma.rn.f32 	%f213, %f212, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f214, %rs15;
	div.rn.f32 	%f215, %f214, 0f437F0000;
	fma.rn.f32 	%f216, %f215, 0f40000000, 0fBF800000;
	mul.f32 	%f217, %f213, %f213;
	fma.rn.f32 	%f218, %f210, %f210, %f217;
	fma.rn.f32 	%f219, %f216, %f216, %f218;
	sqrt.rn.f32 	%f220, %f219;
	rcp.rn.f32 	%f221, %f220;
	mul.f32 	%f1350, %f210, %f221;
	mul.f32 	%f1351, %f213, %f221;
	mul.f32 	%f1352, %f216, %f221;

BB0_2:
	ld.global.v2.u32 	{%r114, %r115}, [pixelID];
	ld.global.v2.u32 	{%r117, %r118}, [tileInfo];
	add.s32 	%r2, %r114, %r117;
	add.s32 	%r3, %r115, %r118;
	setp.eq.f32	%p6, %f1351, 0f00000000;
	setp.eq.f32	%p7, %f1350, 0f00000000;
	and.pred  	%p8, %p7, %p6;
	setp.eq.f32	%p9, %f1352, 0f00000000;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB0_140;
	bra.uni 	BB0_3;

BB0_140:
	ld.global.u32 	%r501, [imageEnabled];
	and.b32  	%r427, %r501, 1;
	setp.eq.b32	%p147, %r427, 1;
	@!%p147 bra 	BB0_142;
	bra.uni 	BB0_141;

BB0_141:
	cvt.u64.u32	%rd209, %r2;
	cvt.u64.u32	%rd210, %r3;
	mov.u64 	%rd213, image;
	cvta.global.u64 	%rd208, %rd213;
	mov.u64 	%rd212, 0;
	// inline asm
	call (%rd207), _rt_buffer_get_64, (%rd208, %r107, %r108, %rd209, %rd210, %rd212, %rd212);
	// inline asm
	mov.u16 	%rs101, 0;
	st.v4.u8 	[%rd207], {%rs101, %rs101, %rs101, %rs101};
	ld.global.u32 	%r501, [imageEnabled];

BB0_142:
	and.b32  	%r430, %r501, 8;
	setp.eq.s32	%p148, %r430, 0;
	@%p148 bra 	BB0_144;

	cvt.u64.u32	%rd217, %r3;
	cvt.u64.u32	%rd216, %r2;
	mov.u64 	%rd220, image_Mask;
	cvta.global.u64 	%rd215, %rd220;
	mov.u64 	%rd219, 0;
	// inline asm
	call (%rd214), _rt_buffer_get_64, (%rd215, %r107, %r107, %rd216, %rd217, %rd219, %rd219);
	// inline asm
	mov.f32 	%f1312, 0f00000000;
	cvt.rzi.u32.f32	%r433, %f1312;
	cvt.u16.u32	%rs102, %r433;
	mov.u16 	%rs103, 0;
	st.v2.u8 	[%rd214], {%rs102, %rs103};
	ld.global.u32 	%r501, [imageEnabled];

BB0_144:
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	and.b32  	%r434, %r501, 4;
	setp.eq.s32	%p149, %r434, 0;
	@%p149 bra 	BB0_148;

	ld.global.u32 	%r435, [additive];
	setp.eq.s32	%p150, %r435, 0;
	@%p150 bra 	BB0_147;

	mov.u64 	%rd233, image_HDR;
	cvta.global.u64 	%rd222, %rd233;
	mov.u32 	%r439, 8;
	mov.u64 	%rd232, 0;
	// inline asm
	call (%rd221), _rt_buffer_get_64, (%rd222, %r107, %r439, %rd20, %rd21, %rd232, %rd232);
	// inline asm
	ld.v4.u16 	{%rs110, %rs111, %rs112, %rs113}, [%rd221];
	// inline asm
	{  cvt.f32.f16 %f1313, %rs110;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1314, %rs111;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1315, %rs112;}

	// inline asm
	// inline asm
	call (%rd227), _rt_buffer_get_64, (%rd222, %r107, %r439, %rd20, %rd21, %rd232, %rd232);
	// inline asm
	add.f32 	%f1316, %f1313, 0f00000000;
	add.f32 	%f1317, %f1314, 0f00000000;
	add.f32 	%f1318, %f1315, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1318;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f1317;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs107, %f1316;}

	// inline asm
	mov.u16 	%rs114, 0;
	st.v4.u16 	[%rd227], {%rs107, %rs108, %rs109, %rs114};
	bra.uni 	BB0_148;

BB0_3:
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f7, [directDir];
	ld.global.v2.u32 	{%r130, %r131}, [pixelID];
	cvt.u64.u32	%rd31, %r130;
	cvt.u64.u32	%rd32, %r131;
	mov.u64 	%rd53, uvpos;
	cvta.global.u64 	%rd30, %rd53;
	mov.u32 	%r127, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r107, %r127, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f224, [%rd29+8];
	ld.f32 	%f225, [%rd29+4];
	ld.f32 	%f226, [%rd29];
	mul.f32 	%f227, %f226, 0f3456BF95;
	mul.f32 	%f228, %f225, 0f3456BF95;
	mul.f32 	%f229, %f224, 0f3456BF95;
	abs.f32 	%f230, %f1350;
	div.rn.f32 	%f231, %f227, %f230;
	abs.f32 	%f232, %f1351;
	div.rn.f32 	%f233, %f228, %f232;
	abs.f32 	%f234, %f1352;
	div.rn.f32 	%f235, %f229, %f234;
	abs.f32 	%f236, %f231;
	abs.f32 	%f237, %f233;
	abs.f32 	%f238, %f235;
	mov.f32 	%f239, 0f38D1B717;
	max.f32 	%f240, %f236, %f239;
	max.f32 	%f241, %f237, %f239;
	max.f32 	%f242, %f238, %f239;
	fma.rn.f32 	%f10, %f1350, %f240, %f226;
	fma.rn.f32 	%f11, %f1351, %f241, %f225;
	fma.rn.f32 	%f12, %f1352, %f242, %f224;
	setp.gt.f32	%p11, %f230, %f234;
	neg.f32 	%f243, %f1351;
	selp.f32	%f244, %f243, 0f00000000, %p11;
	neg.f32 	%f245, %f1352;
	selp.f32	%f246, %f1350, %f245, %p11;
	selp.f32	%f247, 0f00000000, %f1351, %p11;
	mul.f32 	%f248, %f246, %f246;
	fma.rn.f32 	%f249, %f244, %f244, %f248;
	fma.rn.f32 	%f250, %f247, %f247, %f249;
	sqrt.rn.f32 	%f251, %f250;
	rcp.rn.f32 	%f252, %f251;
	mul.f32 	%f13, %f244, %f252;
	mul.f32 	%f14, %f246, %f252;
	mul.f32 	%f15, %f247, %f252;
	mul.f32 	%f253, %f1352, %f14;
	mul.f32 	%f254, %f1351, %f15;
	sub.f32 	%f16, %f253, %f254;
	mul.f32 	%f255, %f1350, %f15;
	mul.f32 	%f256, %f1352, %f13;
	sub.f32 	%f17, %f255, %f256;
	mul.f32 	%f257, %f1351, %f13;
	mul.f32 	%f258, %f1350, %f14;
	sub.f32 	%f18, %f257, %f258;
	ld.global.v2.u32 	{%r134, %r135}, [pixelID];
	cvt.u64.u32	%rd38, %r135;
	add.s32 	%r138, %r134, 1;
	ld.global.u32 	%r139, [resolution];
	add.s32 	%r140, %r139, -1;
	min.u32 	%r141, %r138, %r140;
	cvt.u64.u32	%rd37, %r141;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd30, %r107, %r127, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.f32 	%f259, [%rd35+8];
	ld.f32 	%f260, [%rd35+4];
	ld.f32 	%f261, [%rd35];
	setp.eq.f32	%p12, %f261, 0f00000000;
	setp.eq.f32	%p13, %f260, 0f00000000;
	and.pred  	%p14, %p12, %p13;
	setp.eq.f32	%p15, %f259, 0f00000000;
	and.pred  	%p16, %p14, %p15;
	selp.f32	%f262, %f226, %f261, %p16;
	selp.f32	%f263, %f225, %f260, %p16;
	selp.f32	%f264, %f224, %f259, %p16;
	ld.global.v2.u32 	{%r142, %r143}, [pixelID];
	add.s32 	%r146, %r143, 1;
	ld.global.u32 	%r147, [resolution+4];
	add.s32 	%r148, %r147, -1;
	min.u32 	%r149, %r146, %r148;
	cvt.u64.u32	%rd43, %r142;
	cvt.u64.u32	%rd44, %r149;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd30, %r107, %r127, %rd43, %rd44, %rd27, %rd27);
	// inline asm
	ld.f32 	%f265, [%rd41+8];
	ld.f32 	%f266, [%rd41+4];
	ld.f32 	%f267, [%rd41];
	setp.eq.f32	%p17, %f267, 0f00000000;
	setp.eq.f32	%p18, %f266, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	setp.eq.f32	%p20, %f265, 0f00000000;
	and.pred  	%p21, %p19, %p20;
	selp.f32	%f268, %f226, %f267, %p21;
	selp.f32	%f269, %f225, %f266, %p21;
	selp.f32	%f270, %f224, %f265, %p21;
	sub.f32 	%f271, %f262, %f226;
	sub.f32 	%f272, %f263, %f225;
	sub.f32 	%f273, %f264, %f224;
	sub.f32 	%f274, %f268, %f226;
	sub.f32 	%f275, %f269, %f225;
	sub.f32 	%f276, %f270, %f224;
	abs.f32 	%f277, %f271;
	abs.f32 	%f278, %f274;
	max.f32 	%f279, %f277, %f278;
	abs.f32 	%f280, %f272;
	abs.f32 	%f281, %f275;
	max.f32 	%f282, %f280, %f281;
	abs.f32 	%f283, %f273;
	abs.f32 	%f284, %f276;
	max.f32 	%f285, %f283, %f284;
	max.f32 	%f286, %f279, %f282;
	max.f32 	%f287, %f286, %f285;
	setp.neu.f32	%p22, %f271, 0f00000000;
	setp.neu.f32	%p23, %f272, 0f00000000;
	or.pred  	%p24, %p22, %p23;
	setp.neu.f32	%p25, %f273, 0f00000000;
	setp.neu.f32	%p26, %f274, 0f00000000;
	setp.neu.f32	%p27, %f275, 0f00000000;
	or.pred  	%p28, %p26, %p27;
	setp.neu.f32	%p29, %f276, 0f00000000;
	or.pred  	%p30, %p28, %p29;
	or.pred  	%p31, %p24, %p25;
	and.pred  	%p32, %p31, %p30;
	selp.f32	%f19, %f287, 0f00000000, %p32;
	abs.f32 	%f288, %f7;
	abs.f32 	%f289, %f9;
	setp.gt.f32	%p33, %f288, %f289;
	neg.f32 	%f290, %f8;
	neg.f32 	%f291, %f9;
	selp.f32	%f292, %f290, 0f00000000, %p33;
	selp.f32	%f293, %f7, %f291, %p33;
	selp.f32	%f294, 0f00000000, %f8, %p33;
	mul.f32 	%f295, %f293, %f293;
	fma.rn.f32 	%f296, %f292, %f292, %f295;
	fma.rn.f32 	%f297, %f294, %f294, %f296;
	sqrt.rn.f32 	%f298, %f297;
	rcp.rn.f32 	%f299, %f298;
	mul.f32 	%f20, %f292, %f299;
	mul.f32 	%f21, %f293, %f299;
	mul.f32 	%f22, %f294, %f299;
	ld.global.v2.u32 	{%r150, %r151}, [pixelID];
	cvt.u64.u32	%rd49, %r150;
	cvt.u64.u32	%rd50, %r151;
	mov.u64 	%rd54, rnd_seeds;
	cvta.global.u64 	%rd48, %rd54;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd48, %r107, %r108, %rd49, %rd50, %rd27, %rd27);
	// inline asm
	ld.global.u32 	%r470, [samples];
	mov.f32 	%f1355, 0f00000000;
	setp.lt.s32	%p34, %r470, 1;
	@%p34 bra 	BB0_4;

	cvt.rn.f32.s32	%f302, %r470;
	rcp.rn.f32 	%f23, %f302;
	ld.u32 	%r496, [%rd47];
	mul.f32 	%f24, %f10, 0f3456BF95;
	mul.f32 	%f25, %f11, 0f3456BF95;
	mul.f32 	%f26, %f12, 0f3456BF95;
	mul.f32 	%f303, %f7, %f21;
	mul.f32 	%f304, %f8, %f20;
	sub.f32 	%f27, %f304, %f303;
	mul.f32 	%f305, %f9, %f20;
	mul.f32 	%f306, %f7, %f22;
	sub.f32 	%f28, %f306, %f305;
	mul.f32 	%f307, %f8, %f22;
	mul.f32 	%f308, %f9, %f21;
	sub.f32 	%f29, %f308, %f307;
	mov.f32 	%f1355, 0f00000000;
	mov.u32 	%r471, 0;
	abs.f32 	%f309, %f25;
	abs.f32 	%f310, %f24;
	max.f32 	%f311, %f310, %f309;
	abs.f32 	%f312, %f26;
	max.f32 	%f313, %f311, %f312;
	mov.f32 	%f1356, %f1355;

BB0_6:
	setp.lt.s32	%p35, %r470, 1;
	@%p35 bra 	BB0_73;

	mov.u32 	%r473, 0;

BB0_8:
	cvt.rn.f32.s32	%f1348, %r471;
	mad.lo.s32 	%r156, %r496, 1664525, 1013904223;
	and.b32  	%r157, %r156, 16777215;
	cvt.rn.f32.u32	%f315, %r157;
	fma.rn.f32 	%f316, %f315, 0f33800000, %f1348;
	mul.f32 	%f317, %f23, %f316;
	mad.lo.s32 	%r11, %r156, 1664525, 1013904223;
	and.b32  	%r158, %r11, 16777215;
	cvt.rn.f32.u32	%f318, %r158;
	cvt.rn.f32.s32	%f319, %r473;
	fma.rn.f32 	%f320, %f318, 0f33800000, %f319;
	mul.f32 	%f321, %f23, %f320;
	sqrt.rn.f32 	%f36, %f317;
	mul.f32 	%f1363, %f321, 0f40C90FDB;
	abs.f32 	%f38, %f1363;
	setp.neu.f32	%p36, %f38, 0f7F800000;
	mov.f32 	%f1357, %f1363;
	@%p36 bra 	BB0_10;

	mov.f32 	%f322, 0f00000000;
	mul.rn.f32 	%f1357, %f1363, %f322;

BB0_10:
	mul.f32 	%f323, %f1357, 0f3F22F983;
	cvt.rni.s32.f32	%r484, %f323;
	cvt.rn.f32.s32	%f324, %r484;
	neg.f32 	%f325, %f324;
	mov.f32 	%f326, 0f3FC90FDA;
	fma.rn.f32 	%f327, %f325, %f326, %f1357;
	mov.f32 	%f328, 0f33A22168;
	fma.rn.f32 	%f329, %f325, %f328, %f327;
	mov.f32 	%f330, 0f27C234C5;
	fma.rn.f32 	%f1358, %f325, %f330, %f329;
	abs.f32 	%f331, %f1357;
	setp.leu.f32	%p37, %f331, 0f47CE4780;
	@%p37 bra 	BB0_21;

	add.u64 	%rd56, %SP, 8;
	cvta.to.local.u64 	%rd3, %rd56;
	mov.b32 	 %r13, %f1357;
	shr.u32 	%r14, %r13, 23;
	shl.b32 	%r161, %r13, 8;
	or.b32  	%r15, %r161, -2147483648;
	mov.u32 	%r475, 0;
	mov.u64 	%rd322, 0;
	mov.u64 	%rd321, %rd3;
	mov.u32 	%r476, %r475;

BB0_12:
	.pragma "nounroll";
	shl.b64 	%rd57, %rd322, 2;
	mov.u64 	%rd58, __cudart_i2opi_f;
	add.s64 	%rd59, %rd58, %rd57;
	ld.const.u32 	%r164, [%rd59];
	// inline asm
	{
	mad.lo.cc.u32   %r162, %r164, %r15, %r476;
	madc.hi.u32     %r476, %r164, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd321], %r162;
	add.s32 	%r475, %r475, 1;
	cvt.s64.s32	%rd322, %r475;
	mul.wide.s32 	%rd62, %r475, 4;
	add.s64 	%rd321, %rd3, %rd62;
	setp.ne.s32	%p38, %r475, 6;
	@%p38 bra 	BB0_12;

	and.b32  	%r167, %r14, 255;
	add.s32 	%r168, %r167, -128;
	shr.u32 	%r169, %r168, 5;
	and.b32  	%r20, %r13, -2147483648;
	cvta.to.local.u64 	%rd64, %rd56;
	st.local.u32 	[%rd64+24], %r476;
	mov.u32 	%r170, 6;
	sub.s32 	%r171, %r170, %r169;
	mul.wide.s32 	%rd65, %r171, 4;
	add.s64 	%rd8, %rd64, %rd65;
	ld.local.u32 	%r477, [%rd8];
	ld.local.u32 	%r478, [%rd8+-4];
	and.b32  	%r23, %r14, 31;
	setp.eq.s32	%p39, %r23, 0;
	@%p39 bra 	BB0_15;

	mov.u32 	%r172, 32;
	sub.s32 	%r173, %r172, %r23;
	shr.u32 	%r174, %r478, %r173;
	shl.b32 	%r175, %r477, %r23;
	add.s32 	%r477, %r174, %r175;
	ld.local.u32 	%r176, [%rd8+-8];
	shr.u32 	%r177, %r176, %r173;
	shl.b32 	%r178, %r478, %r23;
	add.s32 	%r478, %r177, %r178;

BB0_15:
	shr.u32 	%r179, %r478, 30;
	shl.b32 	%r180, %r477, 2;
	add.s32 	%r479, %r179, %r180;
	shl.b32 	%r29, %r478, 2;
	shr.u32 	%r181, %r479, 31;
	shr.u32 	%r182, %r477, 30;
	add.s32 	%r30, %r181, %r182;
	setp.eq.s32	%p40, %r181, 0;
	@%p40 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r480, %r20;
	mov.u32 	%r481, %r29;
	bra.uni 	BB0_18;

BB0_17:
	not.b32 	%r183, %r479;
	neg.s32 	%r481, %r29;
	setp.eq.s32	%p41, %r29, 0;
	selp.u32	%r184, 1, 0, %p41;
	add.s32 	%r479, %r184, %r183;
	xor.b32  	%r480, %r20, -2147483648;

BB0_18:
	clz.b32 	%r483, %r479;
	setp.eq.s32	%p42, %r483, 0;
	shl.b32 	%r185, %r479, %r483;
	mov.u32 	%r186, 32;
	sub.s32 	%r187, %r186, %r483;
	shr.u32 	%r188, %r481, %r187;
	add.s32 	%r189, %r188, %r185;
	selp.b32	%r38, %r479, %r189, %p42;
	mov.u32 	%r190, -921707870;
	mul.hi.u32 	%r482, %r38, %r190;
	setp.eq.s32	%p43, %r20, 0;
	neg.s32 	%r191, %r30;
	selp.b32	%r484, %r30, %r191, %p43;
	setp.lt.s32	%p44, %r482, 1;
	@%p44 bra 	BB0_20;

	mul.lo.s32 	%r192, %r38, -921707870;
	shr.u32 	%r193, %r192, 31;
	shl.b32 	%r194, %r482, 1;
	add.s32 	%r482, %r193, %r194;
	add.s32 	%r483, %r483, 1;

BB0_20:
	mov.u32 	%r195, 126;
	sub.s32 	%r196, %r195, %r483;
	shl.b32 	%r197, %r196, 23;
	add.s32 	%r198, %r482, 1;
	shr.u32 	%r199, %r198, 7;
	add.s32 	%r200, %r199, 1;
	shr.u32 	%r201, %r200, 1;
	add.s32 	%r202, %r201, %r197;
	or.b32  	%r203, %r202, %r480;
	mov.b32 	 %f1358, %r203;

BB0_21:
	mul.rn.f32 	%f44, %f1358, %f1358;
	add.s32 	%r46, %r484, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p45, %r47, 0;
	@%p45 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f334, 0f3C08839E;
	mov.f32 	%f335, 0fB94CA1F9;
	fma.rn.f32 	%f1359, %f335, %f44, %f334;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f332, 0fBAB6061A;
	mov.f32 	%f333, 0f37CCF5CE;
	fma.rn.f32 	%f1359, %f333, %f44, %f332;

BB0_24:
	@%p45 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f339, 0fBE2AAAA3;
	fma.rn.f32 	%f340, %f1359, %f44, %f339;
	mov.f32 	%f341, 0f00000000;
	fma.rn.f32 	%f1360, %f340, %f44, %f341;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f336, 0f3D2AAAA5;
	fma.rn.f32 	%f337, %f1359, %f44, %f336;
	mov.f32 	%f338, 0fBF000000;
	fma.rn.f32 	%f1360, %f337, %f44, %f338;

BB0_27:
	fma.rn.f32 	%f1361, %f1360, %f1358, %f1358;
	@%p45 bra 	BB0_29;

	mov.f32 	%f342, 0f3F800000;
	fma.rn.f32 	%f1361, %f1360, %f44, %f342;

BB0_29:
	and.b32  	%r204, %r46, 2;
	setp.eq.s32	%p48, %r204, 0;
	@%p48 bra 	BB0_31;

	mov.f32 	%f343, 0f00000000;
	mov.f32 	%f344, 0fBF800000;
	fma.rn.f32 	%f1361, %f1361, %f344, %f343;

BB0_31:
	@%p36 bra 	BB0_33;

	mov.f32 	%f345, 0f00000000;
	mul.rn.f32 	%f1363, %f1363, %f345;

BB0_33:
	mul.f32 	%f346, %f1363, 0f3F22F983;
	cvt.rni.s32.f32	%r494, %f346;
	cvt.rn.f32.s32	%f347, %r494;
	neg.f32 	%f348, %f347;
	fma.rn.f32 	%f350, %f348, %f326, %f1363;
	fma.rn.f32 	%f352, %f348, %f328, %f350;
	fma.rn.f32 	%f1364, %f348, %f330, %f352;
	abs.f32 	%f354, %f1363;
	setp.leu.f32	%p50, %f354, 0f47CE4780;
	@%p50 bra 	BB0_44;

	add.u64 	%rd67, %SP, 8;
	cvta.to.local.u64 	%rd9, %rd67;
	mov.b32 	 %r49, %f1363;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r207, %r49, 8;
	or.b32  	%r51, %r207, -2147483648;
	mov.u32 	%r485, 0;
	mov.u64 	%rd323, %rd9;
	mov.u64 	%rd324, %rd27;
	mov.u32 	%r486, %r485;

BB0_35:
	.pragma "nounroll";
	shl.b64 	%rd68, %rd324, 2;
	mov.u64 	%rd69, __cudart_i2opi_f;
	add.s64 	%rd70, %rd69, %rd68;
	ld.const.u32 	%r210, [%rd70];
	// inline asm
	{
	mad.lo.cc.u32   %r208, %r210, %r51, %r486;
	madc.hi.u32     %r486, %r210, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd323], %r208;
	add.s32 	%r485, %r485, 1;
	cvt.s64.s32	%rd324, %r485;
	mul.wide.s32 	%rd71, %r485, 4;
	add.s64 	%rd323, %rd9, %rd71;
	setp.ne.s32	%p51, %r485, 6;
	@%p51 bra 	BB0_35;

	and.b32  	%r213, %r50, 255;
	add.s32 	%r214, %r213, -128;
	shr.u32 	%r215, %r214, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd73, %rd67;
	st.local.u32 	[%rd73+24], %r486;
	mov.u32 	%r216, 6;
	sub.s32 	%r217, %r216, %r215;
	mul.wide.s32 	%rd74, %r217, 4;
	add.s64 	%rd15, %rd73, %rd74;
	ld.local.u32 	%r487, [%rd15];
	ld.local.u32 	%r488, [%rd15+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p52, %r59, 0;
	@%p52 bra 	BB0_38;

	mov.u32 	%r218, 32;
	sub.s32 	%r219, %r218, %r59;
	shr.u32 	%r220, %r488, %r219;
	shl.b32 	%r221, %r487, %r59;
	add.s32 	%r487, %r220, %r221;
	ld.local.u32 	%r222, [%rd15+-8];
	shr.u32 	%r223, %r222, %r219;
	shl.b32 	%r224, %r488, %r59;
	add.s32 	%r488, %r223, %r224;

BB0_38:
	shr.u32 	%r225, %r488, 30;
	shl.b32 	%r226, %r487, 2;
	add.s32 	%r489, %r225, %r226;
	shl.b32 	%r65, %r488, 2;
	shr.u32 	%r227, %r489, 31;
	shr.u32 	%r228, %r487, 30;
	add.s32 	%r66, %r227, %r228;
	setp.eq.s32	%p53, %r227, 0;
	@%p53 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r490, %r56;
	mov.u32 	%r491, %r65;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r229, %r489;
	neg.s32 	%r491, %r65;
	setp.eq.s32	%p54, %r65, 0;
	selp.u32	%r230, 1, 0, %p54;
	add.s32 	%r489, %r230, %r229;
	xor.b32  	%r490, %r56, -2147483648;

BB0_41:
	clz.b32 	%r493, %r489;
	setp.eq.s32	%p55, %r493, 0;
	shl.b32 	%r231, %r489, %r493;
	mov.u32 	%r232, 32;
	sub.s32 	%r233, %r232, %r493;
	shr.u32 	%r234, %r491, %r233;
	add.s32 	%r235, %r234, %r231;
	selp.b32	%r74, %r489, %r235, %p55;
	mov.u32 	%r236, -921707870;
	mul.hi.u32 	%r492, %r74, %r236;
	setp.eq.s32	%p56, %r56, 0;
	neg.s32 	%r237, %r66;
	selp.b32	%r494, %r66, %r237, %p56;
	setp.lt.s32	%p57, %r492, 1;
	@%p57 bra 	BB0_43;

	mul.lo.s32 	%r238, %r74, -921707870;
	shr.u32 	%r239, %r238, 31;
	shl.b32 	%r240, %r492, 1;
	add.s32 	%r492, %r239, %r240;
	add.s32 	%r493, %r493, 1;

BB0_43:
	mov.u32 	%r241, 126;
	sub.s32 	%r242, %r241, %r493;
	shl.b32 	%r243, %r242, 23;
	add.s32 	%r244, %r492, 1;
	shr.u32 	%r245, %r244, 7;
	add.s32 	%r246, %r245, 1;
	shr.u32 	%r247, %r246, 1;
	add.s32 	%r248, %r247, %r243;
	or.b32  	%r249, %r248, %r490;
	mov.b32 	 %f1364, %r249;

BB0_44:
	mul.rn.f32 	%f61, %f1364, %f1364;
	and.b32  	%r82, %r494, 1;
	setp.eq.s32	%p58, %r82, 0;
	@%p58 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f357, 0f3C08839E;
	mov.f32 	%f358, 0fB94CA1F9;
	fma.rn.f32 	%f1365, %f358, %f61, %f357;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f355, 0fBAB6061A;
	mov.f32 	%f356, 0f37CCF5CE;
	fma.rn.f32 	%f1365, %f356, %f61, %f355;

BB0_47:
	@%p58 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f362, 0fBE2AAAA3;
	fma.rn.f32 	%f363, %f1365, %f61, %f362;
	mov.f32 	%f364, 0f00000000;
	fma.rn.f32 	%f1366, %f363, %f61, %f364;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f359, 0f3D2AAAA5;
	fma.rn.f32 	%f360, %f1365, %f61, %f359;
	mov.f32 	%f361, 0fBF000000;
	fma.rn.f32 	%f1366, %f360, %f61, %f361;

BB0_50:
	fma.rn.f32 	%f1367, %f1366, %f1364, %f1364;
	@%p58 bra 	BB0_52;

	mov.f32 	%f365, 0f3F800000;
	fma.rn.f32 	%f1367, %f1366, %f61, %f365;

BB0_52:
	and.b32  	%r250, %r494, 2;
	setp.eq.s32	%p61, %r250, 0;
	@%p61 bra 	BB0_54;

	mov.f32 	%f366, 0f00000000;
	mov.f32 	%f367, 0fBF800000;
	fma.rn.f32 	%f1367, %f1367, %f367, %f366;

BB0_54:
	max.f32 	%f1349, %f313, %f239;
	mul.f32 	%f376, %f36, %f1361;
	add.u64 	%rd75, %SP, 4;
	cvta.to.local.u64 	%rd16, %rd75;
	mul.f32 	%f377, %f376, %f376;
	mov.f32 	%f378, 0f3F800000;
	sub.f32 	%f379, %f378, %f377;
	mul.f32 	%f380, %f36, %f1367;
	mul.f32 	%f381, %f380, %f380;
	sub.f32 	%f382, %f379, %f381;
	mov.f32 	%f383, 0f00000000;
	max.f32 	%f384, %f383, %f382;
	sqrt.rn.f32 	%f385, %f384;
	mul.f32 	%f386, %f20, %f380;
	mul.f32 	%f387, %f21, %f380;
	mul.f32 	%f388, %f22, %f380;
	fma.rn.f32 	%f389, %f29, %f376, %f386;
	fma.rn.f32 	%f390, %f28, %f376, %f387;
	fma.rn.f32 	%f391, %f27, %f376, %f388;
	fma.rn.f32 	%f392, %f7, %f385, %f389;
	fma.rn.f32 	%f393, %f8, %f385, %f390;
	fma.rn.f32 	%f394, %f9, %f385, %f391;
	add.f32 	%f395, %f7, %f392;
	add.f32 	%f396, %f8, %f393;
	add.f32 	%f397, %f9, %f394;
	ld.global.f32 	%f398, [shadowSpread];
	mul.f32 	%f399, %f398, %f395;
	mul.f32 	%f400, %f398, %f396;
	mul.f32 	%f401, %f398, %f397;
	sub.f32 	%f402, %f399, %f7;
	sub.f32 	%f403, %f400, %f8;
	sub.f32 	%f404, %f401, %f9;
	mul.f32 	%f405, %f403, %f403;
	fma.rn.f32 	%f406, %f402, %f402, %f405;
	fma.rn.f32 	%f407, %f404, %f404, %f406;
	sqrt.rn.f32 	%f408, %f407;
	rcp.rn.f32 	%f409, %f408;
	mul.f32 	%f73, %f409, %f402;
	mul.f32 	%f74, %f409, %f403;
	mul.f32 	%f75, %f409, %f404;
	ld.global.u32 	%r254, [imageEnabled];
	and.b32  	%r255, %r254, 32;
	setp.eq.s32	%p62, %r255, 0;
	selp.f32	%f410, 0f3F800000, 0f41200000, %p62;
	mul.f32 	%f374, %f410, %f1349;
	mad.lo.s32 	%r256, %r11, 1664525, 1013904223;
	and.b32  	%r257, %r256, 16777215;
	cvt.rn.f32.u32	%f411, %r257;
	mul.f32 	%f412, %f411, 0f33800000;
	fma.rn.f32 	%f413, %f412, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r83, %r256, 1664525, 1013904223;
	and.b32  	%r258, %r83, 16777215;
	cvt.rn.f32.u32	%f414, %r258;
	mul.f32 	%f415, %f414, 0f33800000;
	fma.rn.f32 	%f416, %f415, 0f40000000, 0fBF800000;
	mul.f32 	%f417, %f13, %f416;
	mul.f32 	%f418, %f14, %f416;
	mul.f32 	%f419, %f15, %f416;
	fma.rn.f32 	%f420, %f16, %f413, %f417;
	fma.rn.f32 	%f421, %f17, %f413, %f418;
	fma.rn.f32 	%f422, %f18, %f413, %f419;
	mul.f32 	%f423, %f421, %f421;
	fma.rn.f32 	%f424, %f420, %f420, %f423;
	fma.rn.f32 	%f425, %f422, %f422, %f424;
	sqrt.rn.f32 	%f426, %f425;
	rcp.rn.f32 	%f427, %f426;
	mul.f32 	%f428, %f420, %f427;
	mul.f32 	%f429, %f421, %f427;
	mul.f32 	%f430, %f422, %f427;
	mul.f32 	%f431, %f1351, %f430;
	mul.f32 	%f432, %f1352, %f429;
	sub.f32 	%f433, %f431, %f432;
	mul.f32 	%f434, %f1352, %f428;
	mul.f32 	%f435, %f1350, %f430;
	sub.f32 	%f436, %f434, %f435;
	mul.f32 	%f437, %f1350, %f429;
	mul.f32 	%f438, %f1351, %f428;
	sub.f32 	%f439, %f437, %f438;
	mul.f32 	%f440, %f428, 0f3E24A490;
	mul.f32 	%f441, %f429, 0f3E24A490;
	mul.f32 	%f442, %f430, 0f3E24A490;
	fma.rn.f32 	%f443, %f19, %f440, %f10;
	fma.rn.f32 	%f444, %f19, %f441, %f11;
	fma.rn.f32 	%f445, %f19, %f442, %f12;
	mul.f32 	%f446, %f433, 0fBECECEDE;
	mul.f32 	%f447, %f436, 0fBECECEDE;
	mul.f32 	%f448, %f439, 0fBECECEDE;
	fma.rn.f32 	%f77, %f19, %f446, %f443;
	fma.rn.f32 	%f78, %f19, %f447, %f444;
	fma.rn.f32 	%f79, %f19, %f448, %f445;
	sub.f32 	%f449, %f77, %f10;
	sub.f32 	%f450, %f78, %f11;
	sub.f32 	%f451, %f79, %f12;
	mul.f32 	%f452, %f450, %f450;
	fma.rn.f32 	%f453, %f449, %f449, %f452;
	fma.rn.f32 	%f454, %f451, %f451, %f453;
	sqrt.rn.f32 	%f375, %f454;
	rcp.rn.f32 	%f455, %f375;
	mul.f32 	%f371, %f455, %f449;
	mul.f32 	%f372, %f455, %f450;
	mul.f32 	%f373, %f455, %f451;
	mov.u32 	%r259, 1065353216;
	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r251, [root];
	mov.u32 	%r252, 1;
	// inline asm
	call _rt_trace_64, (%r251, %f10, %f11, %f12, %f371, %f372, %f373, %r252, %f374, %f375, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f456, [%rd16];
	mov.u16 	%rs170, 0;
	setp.neu.f32	%p63, %f456, 0f3F800000;
	@%p63 bra 	BB0_56;

	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r260, [root];
	mov.f32 	%f464, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r260, %f77, %f78, %f79, %f73, %f74, %f75, %r252, %f374, %f464, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f465, [%rd16];
	add.f32 	%f1356, %f1356, %f465;
	add.f32 	%f1355, %f1355, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_56:
	mad.lo.s32 	%r267, %r83, 1664525, 1013904223;
	and.b32  	%r268, %r267, 16777215;
	cvt.rn.f32.u32	%f474, %r268;
	mul.f32 	%f475, %f474, 0f33800000;
	fma.rn.f32 	%f476, %f475, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r84, %r267, 1664525, 1013904223;
	and.b32  	%r269, %r84, 16777215;
	cvt.rn.f32.u32	%f477, %r269;
	mul.f32 	%f478, %f477, 0f33800000;
	fma.rn.f32 	%f479, %f478, 0f40000000, 0fBF800000;
	mul.f32 	%f480, %f13, %f479;
	mul.f32 	%f481, %f14, %f479;
	mul.f32 	%f482, %f15, %f479;
	fma.rn.f32 	%f483, %f16, %f476, %f480;
	fma.rn.f32 	%f484, %f17, %f476, %f481;
	fma.rn.f32 	%f485, %f18, %f476, %f482;
	mul.f32 	%f486, %f484, %f484;
	fma.rn.f32 	%f487, %f483, %f483, %f486;
	fma.rn.f32 	%f488, %f485, %f485, %f487;
	sqrt.rn.f32 	%f489, %f488;
	rcp.rn.f32 	%f490, %f489;
	mul.f32 	%f491, %f483, %f490;
	mul.f32 	%f492, %f484, %f490;
	mul.f32 	%f493, %f485, %f490;
	mul.f32 	%f494, %f1351, %f493;
	mul.f32 	%f495, %f1352, %f492;
	sub.f32 	%f496, %f494, %f495;
	mul.f32 	%f497, %f1352, %f491;
	mul.f32 	%f498, %f1350, %f493;
	sub.f32 	%f499, %f497, %f498;
	mul.f32 	%f500, %f1350, %f492;
	mul.f32 	%f501, %f1351, %f491;
	sub.f32 	%f502, %f500, %f501;
	mul.f32 	%f503, %f491, 0fBE24A490;
	mul.f32 	%f504, %f492, 0fBE24A490;
	mul.f32 	%f505, %f493, 0fBE24A490;
	fma.rn.f32 	%f506, %f19, %f503, %f10;
	fma.rn.f32 	%f507, %f19, %f504, %f11;
	fma.rn.f32 	%f508, %f19, %f505, %f12;
	mul.f32 	%f509, %f496, 0f3ECACABC;
	mul.f32 	%f510, %f499, 0f3ECACABC;
	mul.f32 	%f511, %f502, 0f3ECACABC;
	fma.rn.f32 	%f84, %f19, %f509, %f506;
	fma.rn.f32 	%f85, %f19, %f510, %f507;
	fma.rn.f32 	%f86, %f19, %f511, %f508;
	sub.f32 	%f512, %f84, %f10;
	sub.f32 	%f513, %f85, %f11;
	sub.f32 	%f514, %f86, %f12;
	mul.f32 	%f515, %f513, %f513;
	fma.rn.f32 	%f516, %f512, %f512, %f515;
	fma.rn.f32 	%f517, %f514, %f514, %f516;
	sqrt.rn.f32 	%f473, %f517;
	rcp.rn.f32 	%f518, %f473;
	mul.f32 	%f469, %f518, %f512;
	mul.f32 	%f470, %f518, %f513;
	mul.f32 	%f471, %f518, %f514;
	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r264, [root];
	// inline asm
	call _rt_trace_64, (%r264, %f10, %f11, %f12, %f469, %f470, %f471, %r252, %f374, %f473, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f519, [%rd16];
	setp.neu.f32	%p64, %f519, 0f3F800000;
	@%p64 bra 	BB0_58;

	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r271, [root];
	mov.f32 	%f527, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r271, %f84, %f85, %f86, %f73, %f74, %f75, %r252, %f374, %f527, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f528, [%rd16];
	add.f32 	%f1356, %f1356, %f528;
	add.f32 	%f1355, %f1355, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_58:
	mad.lo.s32 	%r278, %r84, 1664525, 1013904223;
	and.b32  	%r279, %r278, 16777215;
	cvt.rn.f32.u32	%f537, %r279;
	mul.f32 	%f538, %f537, 0f33800000;
	fma.rn.f32 	%f539, %f538, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r85, %r278, 1664525, 1013904223;
	and.b32  	%r280, %r85, 16777215;
	cvt.rn.f32.u32	%f540, %r280;
	mul.f32 	%f541, %f540, 0f33800000;
	fma.rn.f32 	%f542, %f541, 0f40000000, 0fBF800000;
	mul.f32 	%f543, %f13, %f542;
	mul.f32 	%f544, %f14, %f542;
	mul.f32 	%f545, %f15, %f542;
	fma.rn.f32 	%f546, %f16, %f539, %f543;
	fma.rn.f32 	%f547, %f17, %f539, %f544;
	fma.rn.f32 	%f548, %f18, %f539, %f545;
	mul.f32 	%f549, %f547, %f547;
	fma.rn.f32 	%f550, %f546, %f546, %f549;
	fma.rn.f32 	%f551, %f548, %f548, %f550;
	sqrt.rn.f32 	%f552, %f551;
	rcp.rn.f32 	%f553, %f552;
	mul.f32 	%f554, %f546, %f553;
	mul.f32 	%f555, %f547, %f553;
	mul.f32 	%f556, %f548, %f553;
	mul.f32 	%f557, %f1351, %f556;
	mul.f32 	%f558, %f1352, %f555;
	sub.f32 	%f559, %f557, %f558;
	mul.f32 	%f560, %f1352, %f554;
	mul.f32 	%f561, %f1350, %f556;
	sub.f32 	%f562, %f560, %f561;
	mul.f32 	%f563, %f1350, %f555;
	mul.f32 	%f564, %f1351, %f554;
	sub.f32 	%f565, %f563, %f564;
	mul.f32 	%f566, %f554, 0f3F23A3A8;
	mul.f32 	%f567, %f555, 0f3F23A3A8;
	mul.f32 	%f568, %f556, 0f3F23A3A8;
	fma.rn.f32 	%f569, %f19, %f566, %f10;
	fma.rn.f32 	%f570, %f19, %f567, %f11;
	fma.rn.f32 	%f571, %f19, %f568, %f12;
	mul.f32 	%f572, %f559, 0f3E24A490;
	mul.f32 	%f573, %f562, 0f3E24A490;
	mul.f32 	%f574, %f565, 0f3E24A490;
	fma.rn.f32 	%f91, %f19, %f572, %f569;
	fma.rn.f32 	%f92, %f19, %f573, %f570;
	fma.rn.f32 	%f93, %f19, %f574, %f571;
	sub.f32 	%f575, %f91, %f10;
	sub.f32 	%f576, %f92, %f11;
	sub.f32 	%f577, %f93, %f12;
	mul.f32 	%f578, %f576, %f576;
	fma.rn.f32 	%f579, %f575, %f575, %f578;
	fma.rn.f32 	%f580, %f577, %f577, %f579;
	sqrt.rn.f32 	%f536, %f580;
	rcp.rn.f32 	%f581, %f536;
	mul.f32 	%f532, %f581, %f575;
	mul.f32 	%f533, %f581, %f576;
	mul.f32 	%f534, %f581, %f577;
	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r275, [root];
	// inline asm
	call _rt_trace_64, (%r275, %f10, %f11, %f12, %f532, %f533, %f534, %r252, %f374, %f536, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f582, [%rd16];
	setp.neu.f32	%p65, %f582, 0f3F800000;
	@%p65 bra 	BB0_60;

	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r282, [root];
	mov.f32 	%f590, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r282, %f91, %f92, %f93, %f73, %f74, %f75, %r252, %f374, %f590, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f591, [%rd16];
	add.f32 	%f1356, %f1356, %f591;
	add.f32 	%f1355, %f1355, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_60:
	mad.lo.s32 	%r289, %r85, 1664525, 1013904223;
	and.b32  	%r290, %r289, 16777215;
	cvt.rn.f32.u32	%f600, %r290;
	mul.f32 	%f601, %f600, 0f33800000;
	fma.rn.f32 	%f602, %f601, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r86, %r289, 1664525, 1013904223;
	and.b32  	%r291, %r86, 16777215;
	cvt.rn.f32.u32	%f603, %r291;
	mul.f32 	%f604, %f603, 0f33800000;
	fma.rn.f32 	%f605, %f604, 0f40000000, 0fBF800000;
	mul.f32 	%f606, %f13, %f605;
	mul.f32 	%f607, %f14, %f605;
	mul.f32 	%f608, %f15, %f605;
	fma.rn.f32 	%f609, %f16, %f602, %f606;
	fma.rn.f32 	%f610, %f17, %f602, %f607;
	fma.rn.f32 	%f611, %f18, %f602, %f608;
	mul.f32 	%f612, %f610, %f610;
	fma.rn.f32 	%f613, %f609, %f609, %f612;
	fma.rn.f32 	%f614, %f611, %f611, %f613;
	sqrt.rn.f32 	%f615, %f614;
	rcp.rn.f32 	%f616, %f615;
	mul.f32 	%f617, %f609, %f616;
	mul.f32 	%f618, %f610, %f616;
	mul.f32 	%f619, %f611, %f616;
	mul.f32 	%f620, %f1351, %f619;
	mul.f32 	%f621, %f1352, %f618;
	sub.f32 	%f622, %f620, %f621;
	mul.f32 	%f623, %f1352, %f617;
	mul.f32 	%f624, %f1350, %f619;
	sub.f32 	%f625, %f623, %f624;
	mul.f32 	%f626, %f1350, %f618;
	mul.f32 	%f627, %f1351, %f617;
	sub.f32 	%f628, %f626, %f627;
	mul.f32 	%f629, %f617, 0fBECECEDE;
	mul.f32 	%f630, %f618, 0fBECECEDE;
	mul.f32 	%f631, %f619, 0fBECECEDE;
	fma.rn.f32 	%f632, %f19, %f629, %f10;
	fma.rn.f32 	%f633, %f19, %f630, %f11;
	fma.rn.f32 	%f634, %f19, %f631, %f12;
	mul.f32 	%f635, %f622, 0fBF23A3A9;
	mul.f32 	%f636, %f625, 0fBF23A3A9;
	mul.f32 	%f637, %f628, 0fBF23A3A9;
	fma.rn.f32 	%f98, %f19, %f635, %f632;
	fma.rn.f32 	%f99, %f19, %f636, %f633;
	fma.rn.f32 	%f100, %f19, %f637, %f634;
	sub.f32 	%f638, %f98, %f10;
	sub.f32 	%f639, %f99, %f11;
	sub.f32 	%f640, %f100, %f12;
	mul.f32 	%f641, %f639, %f639;
	fma.rn.f32 	%f642, %f638, %f638, %f641;
	fma.rn.f32 	%f643, %f640, %f640, %f642;
	sqrt.rn.f32 	%f599, %f643;
	rcp.rn.f32 	%f644, %f599;
	mul.f32 	%f595, %f644, %f638;
	mul.f32 	%f596, %f644, %f639;
	mul.f32 	%f597, %f644, %f640;
	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r286, [root];
	// inline asm
	call _rt_trace_64, (%r286, %f10, %f11, %f12, %f595, %f596, %f597, %r252, %f374, %f599, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f645, [%rd16];
	setp.neu.f32	%p66, %f645, 0f3F800000;
	@%p66 bra 	BB0_62;

	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r293, [root];
	mov.f32 	%f653, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r293, %f98, %f99, %f100, %f73, %f74, %f75, %r252, %f374, %f653, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f654, [%rd16];
	add.f32 	%f1356, %f1356, %f654;
	add.f32 	%f1355, %f1355, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_62:
	mad.lo.s32 	%r300, %r86, 1664525, 1013904223;
	and.b32  	%r301, %r300, 16777215;
	cvt.rn.f32.u32	%f663, %r301;
	mul.f32 	%f664, %f663, 0f33800000;
	fma.rn.f32 	%f665, %f664, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r87, %r300, 1664525, 1013904223;
	and.b32  	%r302, %r87, 16777215;
	cvt.rn.f32.u32	%f666, %r302;
	mul.f32 	%f667, %f666, 0f33800000;
	fma.rn.f32 	%f668, %f667, 0f40000000, 0fBF800000;
	mul.f32 	%f669, %f13, %f668;
	mul.f32 	%f670, %f14, %f668;
	mul.f32 	%f671, %f15, %f668;
	fma.rn.f32 	%f672, %f16, %f665, %f669;
	fma.rn.f32 	%f673, %f17, %f665, %f670;
	fma.rn.f32 	%f674, %f18, %f665, %f671;
	mul.f32 	%f675, %f673, %f673;
	fma.rn.f32 	%f676, %f672, %f672, %f675;
	fma.rn.f32 	%f677, %f674, %f674, %f676;
	sqrt.rn.f32 	%f678, %f677;
	rcp.rn.f32 	%f679, %f678;
	mul.f32 	%f680, %f672, %f679;
	mul.f32 	%f681, %f673, %f679;
	mul.f32 	%f682, %f674, %f679;
	mul.f32 	%f683, %f1351, %f682;
	mul.f32 	%f684, %f1352, %f681;
	sub.f32 	%f685, %f683, %f684;
	mul.f32 	%f686, %f1352, %f680;
	mul.f32 	%f687, %f1350, %f682;
	sub.f32 	%f688, %f686, %f687;
	mul.f32 	%f689, %f1350, %f681;
	mul.f32 	%f690, %f1351, %f680;
	sub.f32 	%f691, %f689, %f690;
	mul.f32 	%f692, %f680, 0fBF23A3A9;
	mul.f32 	%f693, %f681, 0fBF23A3A9;
	mul.f32 	%f694, %f682, 0fBF23A3A9;
	fma.rn.f32 	%f695, %f19, %f692, %f10;
	fma.rn.f32 	%f696, %f19, %f693, %f11;
	fma.rn.f32 	%f697, %f19, %f694, %f12;
	mul.f32 	%f698, %f685, 0f3F23A3A8;
	mul.f32 	%f699, %f688, 0f3F23A3A8;
	mul.f32 	%f700, %f691, 0f3F23A3A8;
	fma.rn.f32 	%f105, %f19, %f698, %f695;
	fma.rn.f32 	%f106, %f19, %f699, %f696;
	fma.rn.f32 	%f107, %f19, %f700, %f697;
	sub.f32 	%f701, %f105, %f10;
	sub.f32 	%f702, %f106, %f11;
	sub.f32 	%f703, %f107, %f12;
	mul.f32 	%f704, %f702, %f702;
	fma.rn.f32 	%f705, %f701, %f701, %f704;
	fma.rn.f32 	%f706, %f703, %f703, %f705;
	sqrt.rn.f32 	%f662, %f706;
	rcp.rn.f32 	%f707, %f662;
	mul.f32 	%f658, %f707, %f701;
	mul.f32 	%f659, %f707, %f702;
	mul.f32 	%f660, %f707, %f703;
	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r297, [root];
	// inline asm
	call _rt_trace_64, (%r297, %f10, %f11, %f12, %f658, %f659, %f660, %r252, %f374, %f662, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f708, [%rd16];
	setp.neu.f32	%p67, %f708, 0f3F800000;
	@%p67 bra 	BB0_64;

	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r304, [root];
	mov.f32 	%f716, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r304, %f105, %f106, %f107, %f73, %f74, %f75, %r252, %f374, %f716, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f717, [%rd16];
	add.f32 	%f1356, %f1356, %f717;
	add.f32 	%f1355, %f1355, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_64:
	mad.lo.s32 	%r311, %r87, 1664525, 1013904223;
	and.b32  	%r312, %r311, 16777215;
	cvt.rn.f32.u32	%f726, %r312;
	mul.f32 	%f727, %f726, 0f33800000;
	fma.rn.f32 	%f728, %f727, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r88, %r311, 1664525, 1013904223;
	and.b32  	%r313, %r88, 16777215;
	cvt.rn.f32.u32	%f729, %r313;
	mul.f32 	%f730, %f729, 0f33800000;
	fma.rn.f32 	%f731, %f730, 0f40000000, 0fBF800000;
	mul.f32 	%f732, %f13, %f731;
	mul.f32 	%f733, %f14, %f731;
	mul.f32 	%f734, %f15, %f731;
	fma.rn.f32 	%f735, %f16, %f728, %f732;
	fma.rn.f32 	%f736, %f17, %f728, %f733;
	fma.rn.f32 	%f737, %f18, %f728, %f734;
	mul.f32 	%f738, %f736, %f736;
	fma.rn.f32 	%f739, %f735, %f735, %f738;
	fma.rn.f32 	%f740, %f737, %f737, %f739;
	sqrt.rn.f32 	%f741, %f740;
	rcp.rn.f32 	%f742, %f741;
	mul.f32 	%f743, %f735, %f742;
	mul.f32 	%f744, %f736, %f742;
	mul.f32 	%f745, %f737, %f742;
	mul.f32 	%f746, %f1351, %f745;
	mul.f32 	%f747, %f1352, %f744;
	sub.f32 	%f748, %f746, %f747;
	mul.f32 	%f749, %f1352, %f743;
	mul.f32 	%f750, %f1350, %f745;
	sub.f32 	%f751, %f749, %f750;
	mul.f32 	%f752, %f1350, %f744;
	mul.f32 	%f753, %f1351, %f743;
	sub.f32 	%f754, %f752, %f753;
	mul.f32 	%f755, %f743, 0fBF61E1E3;
	mul.f32 	%f756, %f744, 0fBF61E1E3;
	mul.f32 	%f757, %f745, 0fBF61E1E3;
	fma.rn.f32 	%f758, %f19, %f755, %f10;
	fma.rn.f32 	%f759, %f19, %f756, %f11;
	fma.rn.f32 	%f760, %f19, %f757, %f12;
	mul.f32 	%f761, %f748, 0fBE24A490;
	mul.f32 	%f762, %f751, 0fBE24A490;
	mul.f32 	%f763, %f754, 0fBE24A490;
	fma.rn.f32 	%f112, %f19, %f761, %f758;
	fma.rn.f32 	%f113, %f19, %f762, %f759;
	fma.rn.f32 	%f114, %f19, %f763, %f760;
	sub.f32 	%f764, %f112, %f10;
	sub.f32 	%f765, %f113, %f11;
	sub.f32 	%f766, %f114, %f12;
	mul.f32 	%f767, %f765, %f765;
	fma.rn.f32 	%f768, %f764, %f764, %f767;
	fma.rn.f32 	%f769, %f766, %f766, %f768;
	sqrt.rn.f32 	%f725, %f769;
	rcp.rn.f32 	%f770, %f725;
	mul.f32 	%f721, %f770, %f764;
	mul.f32 	%f722, %f770, %f765;
	mul.f32 	%f723, %f770, %f766;
	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r308, [root];
	// inline asm
	call _rt_trace_64, (%r308, %f10, %f11, %f12, %f721, %f722, %f723, %r252, %f374, %f725, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f771, [%rd16];
	setp.neu.f32	%p68, %f771, 0f3F800000;
	@%p68 bra 	BB0_66;

	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r315, [root];
	mov.f32 	%f779, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r315, %f112, %f113, %f114, %f73, %f74, %f75, %r252, %f374, %f779, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f780, [%rd16];
	add.f32 	%f1356, %f1356, %f780;
	add.f32 	%f1355, %f1355, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_66:
	mad.lo.s32 	%r322, %r88, 1664525, 1013904223;
	and.b32  	%r323, %r322, 16777215;
	cvt.rn.f32.u32	%f789, %r323;
	mul.f32 	%f790, %f789, 0f33800000;
	fma.rn.f32 	%f791, %f790, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r89, %r322, 1664525, 1013904223;
	and.b32  	%r324, %r89, 16777215;
	cvt.rn.f32.u32	%f792, %r324;
	mul.f32 	%f793, %f792, 0f33800000;
	fma.rn.f32 	%f794, %f793, 0f40000000, 0fBF800000;
	mul.f32 	%f795, %f13, %f794;
	mul.f32 	%f796, %f14, %f794;
	mul.f32 	%f797, %f15, %f794;
	fma.rn.f32 	%f798, %f16, %f791, %f795;
	fma.rn.f32 	%f799, %f17, %f791, %f796;
	fma.rn.f32 	%f800, %f18, %f791, %f797;
	mul.f32 	%f801, %f799, %f799;
	fma.rn.f32 	%f802, %f798, %f798, %f801;
	fma.rn.f32 	%f803, %f800, %f800, %f802;
	sqrt.rn.f32 	%f804, %f803;
	rcp.rn.f32 	%f805, %f804;
	mul.f32 	%f806, %f798, %f805;
	mul.f32 	%f807, %f799, %f805;
	mul.f32 	%f808, %f800, %f805;
	mul.f32 	%f809, %f1351, %f808;
	mul.f32 	%f810, %f1352, %f807;
	sub.f32 	%f811, %f809, %f810;
	mul.f32 	%f812, %f1352, %f806;
	mul.f32 	%f813, %f1350, %f808;
	sub.f32 	%f814, %f812, %f813;
	mul.f32 	%f815, %f1350, %f807;
	mul.f32 	%f816, %f1351, %f806;
	sub.f32 	%f817, %f815, %f816;
	mul.f32 	%f818, %f806, 0f3ECACABC;
	mul.f32 	%f819, %f807, 0f3ECACABC;
	mul.f32 	%f820, %f808, 0f3ECACABC;
	fma.rn.f32 	%f821, %f19, %f818, %f10;
	fma.rn.f32 	%f822, %f19, %f819, %f11;
	fma.rn.f32 	%f823, %f19, %f820, %f12;
	mul.f32 	%f824, %f811, 0f3F61E1D2;
	mul.f32 	%f825, %f814, 0f3F61E1D2;
	mul.f32 	%f826, %f817, 0f3F61E1D2;
	fma.rn.f32 	%f119, %f19, %f824, %f821;
	fma.rn.f32 	%f120, %f19, %f825, %f822;
	fma.rn.f32 	%f121, %f19, %f826, %f823;
	sub.f32 	%f827, %f119, %f10;
	sub.f32 	%f828, %f120, %f11;
	sub.f32 	%f829, %f121, %f12;
	mul.f32 	%f830, %f828, %f828;
	fma.rn.f32 	%f831, %f827, %f827, %f830;
	fma.rn.f32 	%f832, %f829, %f829, %f831;
	sqrt.rn.f32 	%f788, %f832;
	rcp.rn.f32 	%f833, %f788;
	mul.f32 	%f784, %f833, %f827;
	mul.f32 	%f785, %f833, %f828;
	mul.f32 	%f786, %f833, %f829;
	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r319, [root];
	// inline asm
	call _rt_trace_64, (%r319, %f10, %f11, %f12, %f784, %f785, %f786, %r252, %f374, %f788, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f834, [%rd16];
	setp.neu.f32	%p69, %f834, 0f3F800000;
	@%p69 bra 	BB0_68;

	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r326, [root];
	mov.f32 	%f842, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r326, %f119, %f120, %f121, %f73, %f74, %f75, %r252, %f374, %f842, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f843, [%rd16];
	add.f32 	%f1356, %f1356, %f843;
	add.f32 	%f1355, %f1355, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_68:
	mad.lo.s32 	%r333, %r89, 1664525, 1013904223;
	and.b32  	%r334, %r333, 16777215;
	cvt.rn.f32.u32	%f852, %r334;
	mul.f32 	%f853, %f852, 0f33800000;
	fma.rn.f32 	%f854, %f853, 0f40000000, 0fBF800000;
	mad.lo.s32 	%r496, %r333, 1664525, 1013904223;
	and.b32  	%r335, %r496, 16777215;
	cvt.rn.f32.u32	%f855, %r335;
	mul.f32 	%f856, %f855, 0f33800000;
	fma.rn.f32 	%f857, %f856, 0f40000000, 0fBF800000;
	mul.f32 	%f858, %f13, %f857;
	mul.f32 	%f859, %f14, %f857;
	mul.f32 	%f860, %f15, %f857;
	fma.rn.f32 	%f861, %f16, %f854, %f858;
	fma.rn.f32 	%f862, %f17, %f854, %f859;
	fma.rn.f32 	%f863, %f18, %f854, %f860;
	mul.f32 	%f864, %f862, %f862;
	fma.rn.f32 	%f865, %f861, %f861, %f864;
	fma.rn.f32 	%f866, %f863, %f863, %f865;
	sqrt.rn.f32 	%f867, %f866;
	rcp.rn.f32 	%f868, %f867;
	mul.f32 	%f869, %f861, %f868;
	mul.f32 	%f870, %f862, %f868;
	mul.f32 	%f871, %f863, %f868;
	mul.f32 	%f872, %f1351, %f871;
	mul.f32 	%f873, %f1352, %f870;
	sub.f32 	%f874, %f872, %f873;
	mul.f32 	%f875, %f1352, %f869;
	mul.f32 	%f876, %f1350, %f871;
	sub.f32 	%f877, %f875, %f876;
	mul.f32 	%f878, %f1350, %f870;
	mul.f32 	%f879, %f1351, %f869;
	sub.f32 	%f880, %f878, %f879;
	mul.f32 	%f881, %f869, 0f3F61E1D2;
	mul.f32 	%f882, %f870, 0f3F61E1D2;
	mul.f32 	%f883, %f871, 0f3F61E1D2;
	fma.rn.f32 	%f884, %f19, %f881, %f10;
	fma.rn.f32 	%f885, %f19, %f882, %f11;
	fma.rn.f32 	%f886, %f19, %f883, %f12;
	mul.f32 	%f887, %f874, 0fBF61E1E3;
	mul.f32 	%f888, %f877, 0fBF61E1E3;
	mul.f32 	%f889, %f880, 0fBF61E1E3;
	fma.rn.f32 	%f126, %f19, %f887, %f884;
	fma.rn.f32 	%f127, %f19, %f888, %f885;
	fma.rn.f32 	%f128, %f19, %f889, %f886;
	sub.f32 	%f890, %f126, %f10;
	sub.f32 	%f891, %f127, %f11;
	sub.f32 	%f892, %f128, %f12;
	mul.f32 	%f893, %f891, %f891;
	fma.rn.f32 	%f894, %f890, %f890, %f893;
	fma.rn.f32 	%f895, %f892, %f892, %f894;
	sqrt.rn.f32 	%f851, %f895;
	rcp.rn.f32 	%f896, %f851;
	mul.f32 	%f847, %f896, %f890;
	mul.f32 	%f848, %f896, %f891;
	mul.f32 	%f849, %f896, %f892;
	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r330, [root];
	// inline asm
	call _rt_trace_64, (%r330, %f10, %f11, %f12, %f847, %f848, %f849, %r252, %f374, %f851, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f897, [%rd16];
	setp.neu.f32	%p70, %f897, 0f3F800000;
	@%p70 bra 	BB0_70;

	st.local.u32 	[%rd16], %r259;
	ld.global.u32 	%r337, [root];
	mov.f32 	%f905, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r337, %f126, %f127, %f128, %f73, %f74, %f75, %r252, %f374, %f905, %rd75, %r108);
	// inline asm
	ld.local.f32 	%f906, [%rd16];
	add.f32 	%f1356, %f1356, %f906;
	add.f32 	%f1355, %f1355, 0f3F800000;
	mov.u16 	%rs170, 1;

BB0_70:
	setp.ne.s16	%p71, %rs170, 0;
	@%p71 bra 	BB0_72;

	add.u64 	%rd91, %SP, 0;
	cvta.to.local.u64 	%rd92, %rd91;
	st.local.u32 	[%rd92], %r259;
	ld.global.u32 	%r341, [root];
	mov.f32 	%f914, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r341, %f10, %f11, %f12, %f73, %f74, %f75, %r252, %f374, %f914, %rd91, %r108);
	// inline asm
	ld.local.f32 	%f915, [%rd92];
	add.f32 	%f1356, %f1356, %f915;
	add.f32 	%f1355, %f1355, 0f3F800000;

BB0_72:
	ld.global.u32 	%r470, [samples];
	add.s32 	%r473, %r473, 1;
	setp.lt.s32	%p72, %r473, %r470;
	@%p72 bra 	BB0_8;

BB0_73:
	add.s32 	%r471, %r471, 1;
	setp.lt.s32	%p73, %r471, %r470;
	@%p73 bra 	BB0_6;
	bra.uni 	BB0_74;

BB0_4:
	mov.f32 	%f1356, %f1355;

BB0_74:
	mul.f32 	%f917, %f1352, %f9;
	mul.f32 	%f918, %f1351, %f8;
	neg.f32 	%f919, %f918;
	mul.f32 	%f920, %f1350, %f7;
	sub.f32 	%f921, %f919, %f920;
	sub.f32 	%f141, %f921, %f917;
	setp.eq.s32	%p74, %r470, 0;
	mov.f32 	%f1391, 0f3F800000;
	@%p74 bra 	BB0_76;

	mov.f32 	%f922, 0f3F800000;
	max.f32 	%f923, %f1355, %f922;
	div.rn.f32 	%f1391, %f1356, %f923;

BB0_76:
	ld.global.f32 	%f924, [directColor];
	mul.f32 	%f925, %f1391, %f924;
	ld.global.f32 	%f926, [directColor+4];
	mul.f32 	%f927, %f1391, %f926;
	ld.global.f32 	%f928, [directColor+8];
	mul.f32 	%f929, %f1391, %f928;
	cvt.sat.f32.f32	%f930, %f141;
	mul.f32 	%f144, %f925, %f930;
	mul.f32 	%f145, %f927, %f930;
	mul.f32 	%f146, %f929, %f930;
	mul.f32 	%f931, %f141, 0f40800000;
	cvt.sat.f32.f32	%f932, %f931;
	mul.f32 	%f933, %f925, %f932;
	mul.f32 	%f934, %f927, %f932;
	mul.f32 	%f935, %f929, %f932;
	mul.f32 	%f147, %f933, 0f3E800000;
	mul.f32 	%f148, %f934, 0f3E800000;
	mul.f32 	%f149, %f935, 0f3E800000;
	ld.global.u32 	%r499, [imageEnabled];
	and.b32  	%r345, %r499, 8;
	setp.eq.s32	%p75, %r345, 0;
	@%p75 bra 	BB0_89;

	cvt.u64.u32	%rd95, %r2;
	cvt.u64.u32	%rd96, %r3;
	mov.u64 	%rd99, image_Mask;
	cvta.global.u64 	%rd94, %rd99;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r107, %r107, %rd95, %rd96, %rd27, %rd27);
	// inline asm
	mov.f32 	%f938, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f939, %f938;
	fma.rn.f32 	%f940, %f939, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f150, %f940;
	abs.f32 	%f151, %f1391;
	setp.lt.f32	%p76, %f151, 0f00800000;
	mul.f32 	%f941, %f151, 0f4B800000;
	selp.f32	%f942, 0fC3170000, 0fC2FE0000, %p76;
	selp.f32	%f943, %f941, %f151, %p76;
	mov.b32 	 %r348, %f943;
	and.b32  	%r349, %r348, 8388607;
	or.b32  	%r350, %r349, 1065353216;
	mov.b32 	 %f944, %r350;
	shr.u32 	%r351, %r348, 23;
	cvt.rn.f32.u32	%f945, %r351;
	add.f32 	%f946, %f942, %f945;
	setp.gt.f32	%p77, %f944, 0f3FB504F3;
	mul.f32 	%f947, %f944, 0f3F000000;
	add.f32 	%f948, %f946, 0f3F800000;
	selp.f32	%f949, %f947, %f944, %p77;
	selp.f32	%f950, %f948, %f946, %p77;
	add.f32 	%f951, %f949, 0fBF800000;
	add.f32 	%f937, %f949, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f936,%f937;
	// inline asm
	add.f32 	%f952, %f951, %f951;
	mul.f32 	%f953, %f936, %f952;
	mul.f32 	%f954, %f953, %f953;
	mov.f32 	%f955, 0f3C4CAF63;
	mov.f32 	%f956, 0f3B18F0FE;
	fma.rn.f32 	%f957, %f956, %f954, %f955;
	mov.f32 	%f958, 0f3DAAAABD;
	fma.rn.f32 	%f959, %f957, %f954, %f958;
	mul.rn.f32 	%f960, %f959, %f954;
	mul.rn.f32 	%f961, %f960, %f953;
	sub.f32 	%f962, %f951, %f953;
	neg.f32 	%f963, %f953;
	add.f32 	%f964, %f962, %f962;
	fma.rn.f32 	%f965, %f963, %f951, %f964;
	mul.rn.f32 	%f966, %f936, %f965;
	add.f32 	%f967, %f961, %f953;
	sub.f32 	%f968, %f953, %f967;
	add.f32 	%f969, %f961, %f968;
	add.f32 	%f970, %f966, %f969;
	add.f32 	%f971, %f967, %f970;
	sub.f32 	%f972, %f967, %f971;
	add.f32 	%f973, %f970, %f972;
	mov.f32 	%f974, 0f3F317200;
	mul.rn.f32 	%f975, %f950, %f974;
	mov.f32 	%f976, 0f35BFBE8E;
	mul.rn.f32 	%f977, %f950, %f976;
	add.f32 	%f978, %f975, %f971;
	sub.f32 	%f979, %f975, %f978;
	add.f32 	%f980, %f971, %f979;
	add.f32 	%f981, %f973, %f980;
	add.f32 	%f982, %f977, %f981;
	add.f32 	%f983, %f978, %f982;
	sub.f32 	%f984, %f978, %f983;
	add.f32 	%f985, %f982, %f984;
	mov.f32 	%f986, 0f3EE8BA2E;
	mul.rn.f32 	%f987, %f986, %f983;
	neg.f32 	%f988, %f987;
	fma.rn.f32 	%f989, %f986, %f983, %f988;
	fma.rn.f32 	%f990, %f986, %f985, %f989;
	mov.f32 	%f991, 0f00000000;
	fma.rn.f32 	%f992, %f991, %f983, %f990;
	add.rn.f32 	%f993, %f987, %f992;
	neg.f32 	%f994, %f993;
	add.rn.f32 	%f995, %f987, %f994;
	add.rn.f32 	%f996, %f995, %f992;
	mov.b32 	 %r352, %f993;
	setp.eq.s32	%p78, %r352, 1118925336;
	add.s32 	%r353, %r352, -1;
	mov.b32 	 %f997, %r353;
	add.f32 	%f998, %f996, 0f37000000;
	selp.f32	%f999, %f997, %f993, %p78;
	selp.f32	%f152, %f998, %f996, %p78;
	mul.f32 	%f1000, %f999, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1001, %f1000;
	mov.f32 	%f1002, 0fBF317200;
	fma.rn.f32 	%f1003, %f1001, %f1002, %f999;
	mov.f32 	%f1004, 0fB5BFBE8E;
	fma.rn.f32 	%f1005, %f1001, %f1004, %f1003;
	mul.f32 	%f1006, %f1005, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1007, %f1006;
	add.f32 	%f1008, %f1001, 0f00000000;
	ex2.approx.f32 	%f1009, %f1008;
	mul.f32 	%f1010, %f1007, %f1009;
	setp.lt.f32	%p79, %f999, 0fC2D20000;
	selp.f32	%f1011, 0f00000000, %f1010, %p79;
	setp.gt.f32	%p80, %f999, 0f42D20000;
	selp.f32	%f1392, 0f7F800000, %f1011, %p80;
	setp.eq.f32	%p81, %f1392, 0f7F800000;
	@%p81 bra 	BB0_79;

	fma.rn.f32 	%f1392, %f1392, %f152, %f1392;

BB0_79:
	setp.lt.f32	%p82, %f1391, 0f00000000;
	setp.eq.f32	%p83, %f150, 0f3F800000;
	and.pred  	%p1, %p82, %p83;
	mov.b32 	 %r354, %f1392;
	xor.b32  	%r355, %r354, -2147483648;
	mov.b32 	 %f1012, %r355;
	selp.f32	%f1394, %f1012, %f1392, %p1;
	setp.eq.f32	%p84, %f1391, 0f00000000;
	@%p84 bra 	BB0_82;
	bra.uni 	BB0_80;

BB0_82:
	add.f32 	%f1015, %f1391, %f1391;
	selp.f32	%f1394, %f1015, 0f00000000, %p83;
	bra.uni 	BB0_83;

BB0_147:
	mov.u64 	%rd240, image_HDR;
	cvta.global.u64 	%rd235, %rd240;
	mov.u32 	%r441, 8;
	mov.u64 	%rd239, 0;
	// inline asm
	call (%rd234), _rt_buffer_get_64, (%rd235, %r107, %r441, %rd20, %rd21, %rd239, %rd239);
	// inline asm
	mov.f32 	%f1319, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs115, %f1319;}

	// inline asm
	mov.u16 	%rs116, 0;
	st.v4.u16 	[%rd234], {%rs115, %rs115, %rs115, %rs116};

BB0_148:
	ld.global.u32 	%r442, [additive];
	setp.eq.s32	%p151, %r442, 0;
	@%p151 bra 	BB0_150;

	mov.u64 	%rd253, image_RNM0;
	cvta.global.u64 	%rd242, %rd253;
	mov.u32 	%r446, 8;
	mov.u64 	%rd252, 0;
	// inline asm
	call (%rd241), _rt_buffer_get_64, (%rd242, %r107, %r446, %rd20, %rd21, %rd252, %rd252);
	// inline asm
	ld.v4.u16 	{%rs123, %rs124, %rs125, %rs126}, [%rd241];
	// inline asm
	{  cvt.f32.f16 %f1320, %rs123;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1321, %rs124;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1322, %rs125;}

	// inline asm
	// inline asm
	call (%rd247), _rt_buffer_get_64, (%rd242, %r107, %r446, %rd20, %rd21, %rd252, %rd252);
	// inline asm
	add.f32 	%f1323, %f1320, 0f00000000;
	add.f32 	%f1324, %f1321, 0f00000000;
	add.f32 	%f1325, %f1322, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f1325;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f1324;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs120, %f1323;}

	// inline asm
	mov.u16 	%rs127, 0;
	st.v4.u16 	[%rd247], {%rs120, %rs121, %rs122, %rs127};
	bra.uni 	BB0_151;

BB0_150:
	mov.u64 	%rd260, image_RNM0;
	cvta.global.u64 	%rd255, %rd260;
	mov.u32 	%r448, 8;
	mov.u64 	%rd259, 0;
	// inline asm
	call (%rd254), _rt_buffer_get_64, (%rd255, %r107, %r448, %rd20, %rd21, %rd259, %rd259);
	// inline asm
	mov.f32 	%f1326, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs128, %f1326;}

	// inline asm
	mov.u16 	%rs129, 0;
	st.v4.u16 	[%rd254], {%rs128, %rs128, %rs128, %rs129};

BB0_151:
	ld.global.u32 	%r449, [additive];
	setp.eq.s32	%p152, %r449, 0;
	@%p152 bra 	BB0_153;

	mov.u64 	%rd273, image_RNM1;
	cvta.global.u64 	%rd262, %rd273;
	mov.u32 	%r453, 8;
	mov.u64 	%rd272, 0;
	// inline asm
	call (%rd261), _rt_buffer_get_64, (%rd262, %r107, %r453, %rd20, %rd21, %rd272, %rd272);
	// inline asm
	ld.v4.u16 	{%rs136, %rs137, %rs138, %rs139}, [%rd261];
	// inline asm
	{  cvt.f32.f16 %f1327, %rs136;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1328, %rs137;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1329, %rs138;}

	// inline asm
	// inline asm
	call (%rd267), _rt_buffer_get_64, (%rd262, %r107, %r453, %rd20, %rd21, %rd272, %rd272);
	// inline asm
	add.f32 	%f1330, %f1327, 0f00000000;
	add.f32 	%f1331, %f1328, 0f00000000;
	add.f32 	%f1332, %f1329, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f1332;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f1331;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs133, %f1330;}

	// inline asm
	mov.u16 	%rs140, 0;
	st.v4.u16 	[%rd267], {%rs133, %rs134, %rs135, %rs140};
	bra.uni 	BB0_154;

BB0_153:
	mov.u64 	%rd280, image_RNM1;
	cvta.global.u64 	%rd275, %rd280;
	mov.u32 	%r455, 8;
	mov.u64 	%rd279, 0;
	// inline asm
	call (%rd274), _rt_buffer_get_64, (%rd275, %r107, %r455, %rd20, %rd21, %rd279, %rd279);
	// inline asm
	mov.f32 	%f1333, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs141, %f1333;}

	// inline asm
	mov.u16 	%rs142, 0;
	st.v4.u16 	[%rd274], {%rs141, %rs141, %rs141, %rs142};

BB0_154:
	ld.global.u32 	%r456, [additive];
	setp.eq.s32	%p153, %r456, 0;
	@%p153 bra 	BB0_156;

	mov.u64 	%rd293, image_RNM2;
	cvta.global.u64 	%rd282, %rd293;
	mov.u32 	%r460, 8;
	mov.u64 	%rd292, 0;
	// inline asm
	call (%rd281), _rt_buffer_get_64, (%rd282, %r107, %r460, %rd20, %rd21, %rd292, %rd292);
	// inline asm
	ld.v4.u16 	{%rs149, %rs150, %rs151, %rs152}, [%rd281];
	// inline asm
	{  cvt.f32.f16 %f1334, %rs149;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1335, %rs150;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1336, %rs151;}

	// inline asm
	// inline asm
	call (%rd287), _rt_buffer_get_64, (%rd282, %r107, %r460, %rd20, %rd21, %rd292, %rd292);
	// inline asm
	add.f32 	%f1337, %f1334, 0f00000000;
	add.f32 	%f1338, %f1335, 0f00000000;
	add.f32 	%f1339, %f1336, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs148, %f1339;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs147, %f1338;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs146, %f1337;}

	// inline asm
	mov.u16 	%rs153, 0;
	st.v4.u16 	[%rd287], {%rs146, %rs147, %rs148, %rs153};
	bra.uni 	BB0_157;

BB0_156:
	mov.u64 	%rd300, image_RNM2;
	cvta.global.u64 	%rd295, %rd300;
	mov.u32 	%r462, 8;
	mov.u64 	%rd299, 0;
	// inline asm
	call (%rd294), _rt_buffer_get_64, (%rd295, %r107, %r462, %rd20, %rd21, %rd299, %rd299);
	// inline asm
	mov.f32 	%f1340, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs154, %f1340;}

	// inline asm
	mov.u16 	%rs155, 0;
	st.v4.u16 	[%rd294], {%rs154, %rs154, %rs154, %rs155};

BB0_157:
	ld.global.u32 	%r463, [additive];
	setp.eq.s32	%p154, %r463, 0;
	@%p154 bra 	BB0_159;

	mov.u64 	%rd313, image_RNM3;
	cvta.global.u64 	%rd302, %rd313;
	mov.u32 	%r467, 8;
	mov.u64 	%rd312, 0;
	// inline asm
	call (%rd301), _rt_buffer_get_64, (%rd302, %r107, %r467, %rd20, %rd21, %rd312, %rd312);
	// inline asm
	ld.v4.u16 	{%rs162, %rs163, %rs164, %rs165}, [%rd301];
	// inline asm
	{  cvt.f32.f16 %f1341, %rs162;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1342, %rs163;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1343, %rs164;}

	// inline asm
	// inline asm
	call (%rd307), _rt_buffer_get_64, (%rd302, %r107, %r467, %rd20, %rd21, %rd312, %rd312);
	// inline asm
	add.f32 	%f1344, %f1341, 0f00000000;
	add.f32 	%f1345, %f1342, 0f00000000;
	add.f32 	%f1346, %f1343, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs161, %f1346;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs160, %f1345;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs159, %f1344;}

	// inline asm
	mov.u16 	%rs166, 0;
	st.v4.u16 	[%rd307], {%rs159, %rs160, %rs161, %rs166};
	bra.uni 	BB0_160;

BB0_159:
	mov.u64 	%rd320, image_RNM3;
	cvta.global.u64 	%rd315, %rd320;
	mov.u32 	%r469, 8;
	mov.u64 	%rd319, 0;
	// inline asm
	call (%rd314), _rt_buffer_get_64, (%rd315, %r107, %r469, %rd20, %rd21, %rd319, %rd319);
	// inline asm
	mov.f32 	%f1347, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs167, %f1347;}

	// inline asm
	mov.u16 	%rs168, 0;
	st.v4.u16 	[%rd314], {%rs167, %rs167, %rs167, %rs168};
	bra.uni 	BB0_160;

BB0_80:
	setp.geu.f32	%p85, %f1391, 0f00000000;
	@%p85 bra 	BB0_83;

	cvt.rzi.f32.f32	%f1014, %f986;
	setp.neu.f32	%p86, %f1014, 0f3EE8BA2E;
	selp.f32	%f1394, 0f7FFFFFFF, %f1394, %p86;

BB0_83:
	add.f32 	%f1016, %f151, 0f3EE8BA2E;
	mov.b32 	 %r356, %f1016;
	setp.lt.s32	%p88, %r356, 2139095040;
	@%p88 bra 	BB0_88;

	setp.gtu.f32	%p89, %f151, 0f7F800000;
	@%p89 bra 	BB0_87;
	bra.uni 	BB0_85;

BB0_87:
	add.f32 	%f1394, %f1391, 0f3EE8BA2E;
	bra.uni 	BB0_88;

BB0_85:
	setp.neu.f32	%p90, %f151, 0f7F800000;
	@%p90 bra 	BB0_88;

	selp.f32	%f1394, 0fFF800000, 0f7F800000, %p1;

BB0_88:
	mul.f32 	%f1017, %f1394, 0f437F0000;
	setp.eq.f32	%p91, %f1391, 0f3F800000;
	selp.f32	%f1018, 0f437F0000, %f1017, %p91;
	cvt.rzi.u32.f32	%r357, %f1018;
	cvt.u16.u32	%rs31, %r357;
	mov.u16 	%rs32, 255;
	st.v2.u8 	[%rd93], {%rs31, %rs32};
	ld.global.u32 	%r499, [imageEnabled];

BB0_89:
	and.b32  	%r358, %r499, 1;
	setp.eq.b32	%p92, %r358, 1;
	@!%p92 bra 	BB0_124;
	bra.uni 	BB0_90;

BB0_90:
	mov.f32 	%f1021, 0f3E666666;
	cvt.rzi.f32.f32	%f1022, %f1021;
	fma.rn.f32 	%f1023, %f1022, 0fC0000000, 0f3EE66666;
	abs.f32 	%f163, %f1023;
	abs.f32 	%f164, %f144;
	setp.lt.f32	%p93, %f164, 0f00800000;
	mul.f32 	%f1024, %f164, 0f4B800000;
	selp.f32	%f1025, 0fC3170000, 0fC2FE0000, %p93;
	selp.f32	%f1026, %f1024, %f164, %p93;
	mov.b32 	 %r359, %f1026;
	and.b32  	%r360, %r359, 8388607;
	or.b32  	%r361, %r360, 1065353216;
	mov.b32 	 %f1027, %r361;
	shr.u32 	%r362, %r359, 23;
	cvt.rn.f32.u32	%f1028, %r362;
	add.f32 	%f1029, %f1025, %f1028;
	setp.gt.f32	%p94, %f1027, 0f3FB504F3;
	mul.f32 	%f1030, %f1027, 0f3F000000;
	add.f32 	%f1031, %f1029, 0f3F800000;
	selp.f32	%f1032, %f1030, %f1027, %p94;
	selp.f32	%f1033, %f1031, %f1029, %p94;
	add.f32 	%f1034, %f1032, 0fBF800000;
	add.f32 	%f1020, %f1032, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1019,%f1020;
	// inline asm
	add.f32 	%f1035, %f1034, %f1034;
	mul.f32 	%f1036, %f1019, %f1035;
	mul.f32 	%f1037, %f1036, %f1036;
	mov.f32 	%f1038, 0f3C4CAF63;
	mov.f32 	%f1039, 0f3B18F0FE;
	fma.rn.f32 	%f1040, %f1039, %f1037, %f1038;
	mov.f32 	%f1041, 0f3DAAAABD;
	fma.rn.f32 	%f1042, %f1040, %f1037, %f1041;
	mul.rn.f32 	%f1043, %f1042, %f1037;
	mul.rn.f32 	%f1044, %f1043, %f1036;
	sub.f32 	%f1045, %f1034, %f1036;
	neg.f32 	%f1046, %f1036;
	add.f32 	%f1047, %f1045, %f1045;
	fma.rn.f32 	%f1048, %f1046, %f1034, %f1047;
	mul.rn.f32 	%f1049, %f1019, %f1048;
	add.f32 	%f1050, %f1044, %f1036;
	sub.f32 	%f1051, %f1036, %f1050;
	add.f32 	%f1052, %f1044, %f1051;
	add.f32 	%f1053, %f1049, %f1052;
	add.f32 	%f1054, %f1050, %f1053;
	sub.f32 	%f1055, %f1050, %f1054;
	add.f32 	%f1056, %f1053, %f1055;
	mov.f32 	%f1057, 0f3F317200;
	mul.rn.f32 	%f1058, %f1033, %f1057;
	mov.f32 	%f1059, 0f35BFBE8E;
	mul.rn.f32 	%f1060, %f1033, %f1059;
	add.f32 	%f1061, %f1058, %f1054;
	sub.f32 	%f1062, %f1058, %f1061;
	add.f32 	%f1063, %f1054, %f1062;
	add.f32 	%f1064, %f1056, %f1063;
	add.f32 	%f1065, %f1060, %f1064;
	add.f32 	%f1066, %f1061, %f1065;
	sub.f32 	%f1067, %f1061, %f1066;
	add.f32 	%f1068, %f1065, %f1067;
	mov.f32 	%f1069, 0f3EE66666;
	mul.rn.f32 	%f1070, %f1069, %f1066;
	neg.f32 	%f1071, %f1070;
	fma.rn.f32 	%f1072, %f1069, %f1066, %f1071;
	fma.rn.f32 	%f1073, %f1069, %f1068, %f1072;
	mov.f32 	%f1074, 0f00000000;
	fma.rn.f32 	%f1075, %f1074, %f1066, %f1073;
	add.rn.f32 	%f1076, %f1070, %f1075;
	neg.f32 	%f1077, %f1076;
	add.rn.f32 	%f1078, %f1070, %f1077;
	add.rn.f32 	%f1079, %f1078, %f1075;
	mov.b32 	 %r363, %f1076;
	setp.eq.s32	%p95, %r363, 1118925336;
	add.s32 	%r364, %r363, -1;
	mov.b32 	 %f1080, %r364;
	add.f32 	%f1081, %f1079, 0f37000000;
	selp.f32	%f1082, %f1080, %f1076, %p95;
	selp.f32	%f165, %f1081, %f1079, %p95;
	mul.f32 	%f1083, %f1082, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1084, %f1083;
	mov.f32 	%f1085, 0fBF317200;
	fma.rn.f32 	%f1086, %f1084, %f1085, %f1082;
	mov.f32 	%f1087, 0fB5BFBE8E;
	fma.rn.f32 	%f1088, %f1084, %f1087, %f1086;
	mul.f32 	%f1089, %f1088, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1090, %f1089;
	add.f32 	%f1091, %f1084, 0f00000000;
	ex2.approx.f32 	%f1092, %f1091;
	mul.f32 	%f1093, %f1090, %f1092;
	setp.lt.f32	%p96, %f1082, 0fC2D20000;
	selp.f32	%f1094, 0f00000000, %f1093, %p96;
	setp.gt.f32	%p97, %f1082, 0f42D20000;
	selp.f32	%f1395, 0f7F800000, %f1094, %p97;
	setp.eq.f32	%p98, %f1395, 0f7F800000;
	@%p98 bra 	BB0_92;

	fma.rn.f32 	%f1395, %f1395, %f165, %f1395;

BB0_92:
	setp.lt.f32	%p99, %f144, 0f00000000;
	setp.eq.f32	%p100, %f163, 0f3F800000;
	and.pred  	%p2, %p99, %p100;
	mov.b32 	 %r365, %f1395;
	xor.b32  	%r366, %r365, -2147483648;
	mov.b32 	 %f1095, %r366;
	selp.f32	%f1397, %f1095, %f1395, %p2;
	setp.eq.f32	%p101, %f144, 0f00000000;
	@%p101 bra 	BB0_95;
	bra.uni 	BB0_93;

BB0_95:
	add.f32 	%f1098, %f144, %f144;
	selp.f32	%f1397, %f1098, 0f00000000, %p100;
	bra.uni 	BB0_96;

BB0_93:
	setp.geu.f32	%p102, %f144, 0f00000000;
	@%p102 bra 	BB0_96;

	cvt.rzi.f32.f32	%f1097, %f1069;
	setp.neu.f32	%p103, %f1097, 0f3EE66666;
	selp.f32	%f1397, 0f7FFFFFFF, %f1397, %p103;

BB0_96:
	add.f32 	%f1099, %f164, 0f3EE66666;
	mov.b32 	 %r367, %f1099;
	setp.lt.s32	%p105, %r367, 2139095040;
	@%p105 bra 	BB0_101;

	setp.gtu.f32	%p106, %f164, 0f7F800000;
	@%p106 bra 	BB0_100;
	bra.uni 	BB0_98;

BB0_100:
	add.f32 	%f1397, %f144, 0f3EE66666;
	bra.uni 	BB0_101;

BB0_98:
	setp.neu.f32	%p107, %f164, 0f7F800000;
	@%p107 bra 	BB0_101;

	selp.f32	%f1397, 0fFF800000, 0f7F800000, %p2;

BB0_101:
	setp.eq.f32	%p108, %f144, 0f3F800000;
	selp.f32	%f176, 0f3F800000, %f1397, %p108;
	abs.f32 	%f177, %f145;
	setp.lt.f32	%p109, %f177, 0f00800000;
	mul.f32 	%f1102, %f177, 0f4B800000;
	selp.f32	%f1103, 0fC3170000, 0fC2FE0000, %p109;
	selp.f32	%f1104, %f1102, %f177, %p109;
	mov.b32 	 %r368, %f1104;
	and.b32  	%r369, %r368, 8388607;
	or.b32  	%r370, %r369, 1065353216;
	mov.b32 	 %f1105, %r370;
	shr.u32 	%r371, %r368, 23;
	cvt.rn.f32.u32	%f1106, %r371;
	add.f32 	%f1107, %f1103, %f1106;
	setp.gt.f32	%p110, %f1105, 0f3FB504F3;
	mul.f32 	%f1108, %f1105, 0f3F000000;
	add.f32 	%f1109, %f1107, 0f3F800000;
	selp.f32	%f1110, %f1108, %f1105, %p110;
	selp.f32	%f1111, %f1109, %f1107, %p110;
	add.f32 	%f1112, %f1110, 0fBF800000;
	add.f32 	%f1101, %f1110, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1100,%f1101;
	// inline asm
	add.f32 	%f1113, %f1112, %f1112;
	mul.f32 	%f1114, %f1100, %f1113;
	mul.f32 	%f1115, %f1114, %f1114;
	fma.rn.f32 	%f1118, %f1039, %f1115, %f1038;
	fma.rn.f32 	%f1120, %f1118, %f1115, %f1041;
	mul.rn.f32 	%f1121, %f1120, %f1115;
	mul.rn.f32 	%f1122, %f1121, %f1114;
	sub.f32 	%f1123, %f1112, %f1114;
	neg.f32 	%f1124, %f1114;
	add.f32 	%f1125, %f1123, %f1123;
	fma.rn.f32 	%f1126, %f1124, %f1112, %f1125;
	mul.rn.f32 	%f1127, %f1100, %f1126;
	add.f32 	%f1128, %f1122, %f1114;
	sub.f32 	%f1129, %f1114, %f1128;
	add.f32 	%f1130, %f1122, %f1129;
	add.f32 	%f1131, %f1127, %f1130;
	add.f32 	%f1132, %f1128, %f1131;
	sub.f32 	%f1133, %f1128, %f1132;
	add.f32 	%f1134, %f1131, %f1133;
	mul.rn.f32 	%f1136, %f1111, %f1057;
	mul.rn.f32 	%f1138, %f1111, %f1059;
	add.f32 	%f1139, %f1136, %f1132;
	sub.f32 	%f1140, %f1136, %f1139;
	add.f32 	%f1141, %f1132, %f1140;
	add.f32 	%f1142, %f1134, %f1141;
	add.f32 	%f1143, %f1138, %f1142;
	add.f32 	%f1144, %f1139, %f1143;
	sub.f32 	%f1145, %f1139, %f1144;
	add.f32 	%f1146, %f1143, %f1145;
	mul.rn.f32 	%f1148, %f1069, %f1144;
	neg.f32 	%f1149, %f1148;
	fma.rn.f32 	%f1150, %f1069, %f1144, %f1149;
	fma.rn.f32 	%f1151, %f1069, %f1146, %f1150;
	fma.rn.f32 	%f1153, %f1074, %f1144, %f1151;
	add.rn.f32 	%f1154, %f1148, %f1153;
	neg.f32 	%f1155, %f1154;
	add.rn.f32 	%f1156, %f1148, %f1155;
	add.rn.f32 	%f1157, %f1156, %f1153;
	mov.b32 	 %r372, %f1154;
	setp.eq.s32	%p111, %r372, 1118925336;
	add.s32 	%r373, %r372, -1;
	mov.b32 	 %f1158, %r373;
	add.f32 	%f1159, %f1157, 0f37000000;
	selp.f32	%f1160, %f1158, %f1154, %p111;
	selp.f32	%f178, %f1159, %f1157, %p111;
	mul.f32 	%f1161, %f1160, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1162, %f1161;
	fma.rn.f32 	%f1164, %f1162, %f1085, %f1160;
	fma.rn.f32 	%f1166, %f1162, %f1087, %f1164;
	mul.f32 	%f1167, %f1166, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1168, %f1167;
	add.f32 	%f1169, %f1162, 0f00000000;
	ex2.approx.f32 	%f1170, %f1169;
	mul.f32 	%f1171, %f1168, %f1170;
	setp.lt.f32	%p112, %f1160, 0fC2D20000;
	selp.f32	%f1172, 0f00000000, %f1171, %p112;
	setp.gt.f32	%p113, %f1160, 0f42D20000;
	selp.f32	%f1398, 0f7F800000, %f1172, %p113;
	setp.eq.f32	%p114, %f1398, 0f7F800000;
	@%p114 bra 	BB0_103;

	fma.rn.f32 	%f1398, %f1398, %f178, %f1398;

BB0_103:
	setp.lt.f32	%p115, %f145, 0f00000000;
	and.pred  	%p3, %p115, %p100;
	mov.b32 	 %r374, %f1398;
	xor.b32  	%r375, %r374, -2147483648;
	mov.b32 	 %f1173, %r375;
	selp.f32	%f1400, %f1173, %f1398, %p3;
	setp.eq.f32	%p117, %f145, 0f00000000;
	@%p117 bra 	BB0_106;
	bra.uni 	BB0_104;

BB0_106:
	add.f32 	%f1176, %f145, %f145;
	selp.f32	%f1400, %f1176, 0f00000000, %p100;
	bra.uni 	BB0_107;

BB0_104:
	setp.geu.f32	%p118, %f145, 0f00000000;
	@%p118 bra 	BB0_107;

	cvt.rzi.f32.f32	%f1175, %f1069;
	setp.neu.f32	%p119, %f1175, 0f3EE66666;
	selp.f32	%f1400, 0f7FFFFFFF, %f1400, %p119;

BB0_107:
	add.f32 	%f1177, %f177, 0f3EE66666;
	mov.b32 	 %r376, %f1177;
	setp.lt.s32	%p121, %r376, 2139095040;
	@%p121 bra 	BB0_112;

	setp.gtu.f32	%p122, %f177, 0f7F800000;
	@%p122 bra 	BB0_111;
	bra.uni 	BB0_109;

BB0_111:
	add.f32 	%f1400, %f145, 0f3EE66666;
	bra.uni 	BB0_112;

BB0_109:
	setp.neu.f32	%p123, %f177, 0f7F800000;
	@%p123 bra 	BB0_112;

	selp.f32	%f1400, 0fFF800000, 0f7F800000, %p3;

BB0_112:
	setp.eq.f32	%p124, %f145, 0f3F800000;
	selp.f32	%f189, 0f3F800000, %f1400, %p124;
	abs.f32 	%f190, %f146;
	setp.lt.f32	%p125, %f190, 0f00800000;
	mul.f32 	%f1180, %f190, 0f4B800000;
	selp.f32	%f1181, 0fC3170000, 0fC2FE0000, %p125;
	selp.f32	%f1182, %f1180, %f190, %p125;
	mov.b32 	 %r377, %f1182;
	and.b32  	%r378, %r377, 8388607;
	or.b32  	%r379, %r378, 1065353216;
	mov.b32 	 %f1183, %r379;
	shr.u32 	%r380, %r377, 23;
	cvt.rn.f32.u32	%f1184, %r380;
	add.f32 	%f1185, %f1181, %f1184;
	setp.gt.f32	%p126, %f1183, 0f3FB504F3;
	mul.f32 	%f1186, %f1183, 0f3F000000;
	add.f32 	%f1187, %f1185, 0f3F800000;
	selp.f32	%f1188, %f1186, %f1183, %p126;
	selp.f32	%f1189, %f1187, %f1185, %p126;
	add.f32 	%f1190, %f1188, 0fBF800000;
	add.f32 	%f1179, %f1188, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1178,%f1179;
	// inline asm
	add.f32 	%f1191, %f1190, %f1190;
	mul.f32 	%f1192, %f1178, %f1191;
	mul.f32 	%f1193, %f1192, %f1192;
	fma.rn.f32 	%f1196, %f1039, %f1193, %f1038;
	fma.rn.f32 	%f1198, %f1196, %f1193, %f1041;
	mul.rn.f32 	%f1199, %f1198, %f1193;
	mul.rn.f32 	%f1200, %f1199, %f1192;
	sub.f32 	%f1201, %f1190, %f1192;
	neg.f32 	%f1202, %f1192;
	add.f32 	%f1203, %f1201, %f1201;
	fma.rn.f32 	%f1204, %f1202, %f1190, %f1203;
	mul.rn.f32 	%f1205, %f1178, %f1204;
	add.f32 	%f1206, %f1200, %f1192;
	sub.f32 	%f1207, %f1192, %f1206;
	add.f32 	%f1208, %f1200, %f1207;
	add.f32 	%f1209, %f1205, %f1208;
	add.f32 	%f1210, %f1206, %f1209;
	sub.f32 	%f1211, %f1206, %f1210;
	add.f32 	%f1212, %f1209, %f1211;
	mul.rn.f32 	%f1214, %f1189, %f1057;
	mul.rn.f32 	%f1216, %f1189, %f1059;
	add.f32 	%f1217, %f1214, %f1210;
	sub.f32 	%f1218, %f1214, %f1217;
	add.f32 	%f1219, %f1210, %f1218;
	add.f32 	%f1220, %f1212, %f1219;
	add.f32 	%f1221, %f1216, %f1220;
	add.f32 	%f1222, %f1217, %f1221;
	sub.f32 	%f1223, %f1217, %f1222;
	add.f32 	%f1224, %f1221, %f1223;
	mul.rn.f32 	%f1226, %f1069, %f1222;
	neg.f32 	%f1227, %f1226;
	fma.rn.f32 	%f1228, %f1069, %f1222, %f1227;
	fma.rn.f32 	%f1229, %f1069, %f1224, %f1228;
	fma.rn.f32 	%f1231, %f1074, %f1222, %f1229;
	add.rn.f32 	%f1232, %f1226, %f1231;
	neg.f32 	%f1233, %f1232;
	add.rn.f32 	%f1234, %f1226, %f1233;
	add.rn.f32 	%f1235, %f1234, %f1231;
	mov.b32 	 %r381, %f1232;
	setp.eq.s32	%p127, %r381, 1118925336;
	add.s32 	%r382, %r381, -1;
	mov.b32 	 %f1236, %r382;
	add.f32 	%f1237, %f1235, 0f37000000;
	selp.f32	%f1238, %f1236, %f1232, %p127;
	selp.f32	%f191, %f1237, %f1235, %p127;
	mul.f32 	%f1239, %f1238, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1240, %f1239;
	fma.rn.f32 	%f1242, %f1240, %f1085, %f1238;
	fma.rn.f32 	%f1244, %f1240, %f1087, %f1242;
	mul.f32 	%f1245, %f1244, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1246, %f1245;
	add.f32 	%f1247, %f1240, 0f00000000;
	ex2.approx.f32 	%f1248, %f1247;
	mul.f32 	%f1249, %f1246, %f1248;
	setp.lt.f32	%p128, %f1238, 0fC2D20000;
	selp.f32	%f1250, 0f00000000, %f1249, %p128;
	setp.gt.f32	%p129, %f1238, 0f42D20000;
	selp.f32	%f1401, 0f7F800000, %f1250, %p129;
	setp.eq.f32	%p130, %f1401, 0f7F800000;
	@%p130 bra 	BB0_114;

	fma.rn.f32 	%f1401, %f1401, %f191, %f1401;

BB0_114:
	setp.lt.f32	%p131, %f146, 0f00000000;
	and.pred  	%p4, %p131, %p100;
	mov.b32 	 %r383, %f1401;
	xor.b32  	%r384, %r383, -2147483648;
	mov.b32 	 %f1251, %r384;
	selp.f32	%f1403, %f1251, %f1401, %p4;
	setp.eq.f32	%p133, %f146, 0f00000000;
	@%p133 bra 	BB0_117;
	bra.uni 	BB0_115;

BB0_117:
	add.f32 	%f1254, %f146, %f146;
	selp.f32	%f1403, %f1254, 0f00000000, %p100;
	bra.uni 	BB0_118;

BB0_115:
	setp.geu.f32	%p134, %f146, 0f00000000;
	@%p134 bra 	BB0_118;

	cvt.rzi.f32.f32	%f1253, %f1069;
	setp.neu.f32	%p135, %f1253, 0f3EE66666;
	selp.f32	%f1403, 0f7FFFFFFF, %f1403, %p135;

BB0_118:
	add.f32 	%f1255, %f190, 0f3EE66666;
	mov.b32 	 %r385, %f1255;
	setp.lt.s32	%p137, %r385, 2139095040;
	@%p137 bra 	BB0_123;

	setp.gtu.f32	%p138, %f190, 0f7F800000;
	@%p138 bra 	BB0_122;
	bra.uni 	BB0_120;

BB0_122:
	add.f32 	%f1403, %f146, 0f3EE66666;
	bra.uni 	BB0_123;

BB0_120:
	setp.neu.f32	%p139, %f190, 0f7F800000;
	@%p139 bra 	BB0_123;

	selp.f32	%f1403, 0fFF800000, 0f7F800000, %p4;

BB0_123:
	setp.eq.f32	%p140, %f146, 0f3F800000;
	selp.f32	%f1256, 0f3F800000, %f1403, %p140;
	cvt.u64.u32	%rd103, %r3;
	cvt.u64.u32	%rd102, %r2;
	mov.u64 	%rd106, image;
	cvta.global.u64 	%rd101, %rd106;
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd101, %r107, %r108, %rd102, %rd103, %rd27, %rd27);
	// inline asm
	cvt.sat.f32.f32	%f1257, %f1256;
	mul.f32 	%f1258, %f1257, 0f437FFD71;
	cvt.rzi.u32.f32	%r388, %f1258;
	cvt.sat.f32.f32	%f1259, %f189;
	mul.f32 	%f1260, %f1259, 0f437FFD71;
	cvt.rzi.u32.f32	%r389, %f1260;
	cvt.sat.f32.f32	%f1261, %f176;
	mul.f32 	%f1262, %f1261, 0f437FFD71;
	cvt.rzi.u32.f32	%r390, %f1262;
	cvt.u16.u32	%rs33, %r388;
	cvt.u16.u32	%rs34, %r390;
	cvt.u16.u32	%rs35, %r389;
	mov.u16 	%rs36, 255;
	st.v4.u8 	[%rd100], {%rs33, %rs35, %rs34, %rs36};
	ld.global.u32 	%r499, [imageEnabled];

BB0_124:
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	and.b32  	%r391, %r499, 4;
	setp.eq.s32	%p141, %r391, 0;
	@%p141 bra 	BB0_128;

	ld.global.u32 	%r392, [additive];
	setp.eq.s32	%p142, %r392, 0;
	mov.f32 	%f1263, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f1263;}

	// inline asm
	@%p142 bra 	BB0_127;

	mov.u64 	%rd119, image_HDR;
	cvta.global.u64 	%rd108, %rd119;
	mov.u32 	%r396, 8;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r107, %r396, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs44, %rs45, %rs46, %rs47}, [%rd107];
	// inline asm
	{  cvt.f32.f16 %f1264, %rs44;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1265, %rs45;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1266, %rs46;}

	// inline asm
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd108, %r107, %r396, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1267, %f144, %f1264;
	add.f32 	%f1268, %f145, %f1265;
	add.f32 	%f1269, %f146, %f1266;
	// inline asm
	{  cvt.rn.f16.f32 %rs43, %f1269;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f1268;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f1267;}

	// inline asm
	st.v4.u16 	[%rd113], {%rs41, %rs42, %rs43, %rs37};
	bra.uni 	BB0_128;

BB0_127:
	mov.u64 	%rd126, image_HDR;
	cvta.global.u64 	%rd121, %rd126;
	mov.u32 	%r398, 8;
	// inline asm
	call (%rd120), _rt_buffer_get_64, (%rd121, %r107, %r398, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f146;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f145;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f144;}

	// inline asm
	st.v4.u16 	[%rd120], {%rs48, %rs49, %rs50, %rs37};

BB0_128:
	ld.global.u32 	%r399, [additive];
	setp.eq.s32	%p143, %r399, 0;
	mov.f32 	%f1273, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f1273;}

	// inline asm
	@%p143 bra 	BB0_130;

	mov.u64 	%rd139, image_RNM0;
	cvta.global.u64 	%rd128, %rd139;
	mov.u32 	%r403, 8;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd128, %r107, %r403, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs58, %rs59, %rs60, %rs61}, [%rd127];
	// inline asm
	{  cvt.f32.f16 %f1274, %rs58;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1275, %rs59;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1276, %rs60;}

	// inline asm
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd128, %r107, %r403, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1277, %f147, %f1274;
	add.f32 	%f1278, %f148, %f1275;
	add.f32 	%f1279, %f149, %f1276;
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f1279;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f1278;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f1277;}

	// inline asm
	st.v4.u16 	[%rd133], {%rs55, %rs56, %rs57, %rs51};
	bra.uni 	BB0_131;

BB0_130:
	mov.u64 	%rd146, image_RNM0;
	cvta.global.u64 	%rd141, %rd146;
	mov.u32 	%r405, 8;
	// inline asm
	call (%rd140), _rt_buffer_get_64, (%rd141, %r107, %r405, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f149;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f148;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f147;}

	// inline asm
	st.v4.u16 	[%rd140], {%rs62, %rs63, %rs64, %rs51};

BB0_131:
	ld.global.f32 	%f1284, [directDir];
	fma.rn.f32 	%f202, %f1284, 0fBF000000, 0f3F000000;
	ld.global.f32 	%f1285, [directDir+4];
	fma.rn.f32 	%f203, %f1285, 0fBF000000, 0f3F000000;
	ld.global.f32 	%f1286, [directDir+8];
	fma.rn.f32 	%f204, %f1286, 0fBF000000, 0f3F000000;
	ld.global.u32 	%r406, [additive];
	setp.eq.s32	%p144, %r406, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f1273;}

	// inline asm
	@%p144 bra 	BB0_133;

	mov.u64 	%rd159, image_RNM1;
	cvta.global.u64 	%rd148, %rd159;
	mov.u32 	%r410, 8;
	// inline asm
	call (%rd147), _rt_buffer_get_64, (%rd148, %r107, %r410, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs72, %rs73, %rs74, %rs75}, [%rd147];
	// inline asm
	{  cvt.f32.f16 %f1287, %rs72;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1288, %rs73;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1289, %rs74;}

	// inline asm
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd148, %r107, %r410, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1290, %f202, %f1287;
	add.f32 	%f1291, %f202, %f1288;
	add.f32 	%f1292, %f202, %f1289;
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f1292;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f1291;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f1290;}

	// inline asm
	st.v4.u16 	[%rd153], {%rs69, %rs70, %rs71, %rs65};
	bra.uni 	BB0_134;

BB0_133:
	mov.u64 	%rd166, image_RNM1;
	cvta.global.u64 	%rd161, %rd166;
	mov.u32 	%r412, 8;
	// inline asm
	call (%rd160), _rt_buffer_get_64, (%rd161, %r107, %r412, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f202;}

	// inline asm
	st.v4.u16 	[%rd160], {%rs76, %rs76, %rs76, %rs65};

BB0_134:
	ld.global.u32 	%r413, [additive];
	setp.eq.s32	%p145, %r413, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f1273;}

	// inline asm
	@%p145 bra 	BB0_136;

	mov.u64 	%rd179, image_RNM2;
	cvta.global.u64 	%rd168, %rd179;
	mov.u32 	%r417, 8;
	// inline asm
	call (%rd167), _rt_buffer_get_64, (%rd168, %r107, %r417, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs84, %rs85, %rs86, %rs87}, [%rd167];
	// inline asm
	{  cvt.f32.f16 %f1295, %rs84;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1296, %rs85;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1297, %rs86;}

	// inline asm
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd168, %r107, %r417, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1298, %f203, %f1295;
	add.f32 	%f1299, %f203, %f1296;
	add.f32 	%f1300, %f203, %f1297;
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f1300;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f1299;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f1298;}

	// inline asm
	st.v4.u16 	[%rd173], {%rs81, %rs82, %rs83, %rs77};
	bra.uni 	BB0_137;

BB0_136:
	mov.u64 	%rd186, image_RNM2;
	cvta.global.u64 	%rd181, %rd186;
	mov.u32 	%r419, 8;
	// inline asm
	call (%rd180), _rt_buffer_get_64, (%rd181, %r107, %r419, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f203;}

	// inline asm
	st.v4.u16 	[%rd180], {%rs88, %rs88, %rs88, %rs77};

BB0_137:
	ld.global.u32 	%r420, [additive];
	setp.eq.s32	%p146, %r420, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f1273;}

	// inline asm
	@%p146 bra 	BB0_139;

	mov.u64 	%rd199, image_RNM3;
	cvta.global.u64 	%rd188, %rd199;
	mov.u32 	%r424, 8;
	// inline asm
	call (%rd187), _rt_buffer_get_64, (%rd188, %r107, %r424, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs96, %rs97, %rs98, %rs99}, [%rd187];
	// inline asm
	{  cvt.f32.f16 %f1303, %rs96;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1304, %rs97;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1305, %rs98;}

	// inline asm
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd188, %r107, %r424, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1306, %f204, %f1303;
	add.f32 	%f1307, %f204, %f1304;
	add.f32 	%f1308, %f204, %f1305;
	// inline asm
	{  cvt.rn.f16.f32 %rs95, %f1308;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs94, %f1307;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs93, %f1306;}

	// inline asm
	st.v4.u16 	[%rd193], {%rs93, %rs94, %rs95, %rs89};
	bra.uni 	BB0_160;

BB0_139:
	mov.u64 	%rd206, image_RNM3;
	cvta.global.u64 	%rd201, %rd206;
	mov.u32 	%r426, 8;
	// inline asm
	call (%rd200), _rt_buffer_get_64, (%rd201, %r107, %r426, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f204;}

	// inline asm
	st.v4.u16 	[%rd200], {%rs100, %rs100, %rs100, %rs89};

BB0_160:
	ret;
}


