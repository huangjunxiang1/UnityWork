//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .texref sky;
.global .align 4 .b8 skyColor[12];
.global .align 4 .u32 samples;
.global .align 4 .u32 hemispherical;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8skyColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13hemisphericalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8skyColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13hemisphericalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8skyColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13hemisphericalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8skyColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13hemisphericalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8skyColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13hemisphericalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<105>;
	.reg .b16 	%rs<148>;
	.reg .f32 	%f<710>;
	.reg .b32 	%r<355>;
	.reg .b64 	%rd<283>;


	mov.u64 	%rd282, __local_depot0;
	cvta.local.u64 	%SP, %rd282;
	ld.global.u32 	%r1, [samples];
	ld.global.v2.u32 	{%r93, %r94}, [pixelID];
	cvt.u64.u32	%rd22, %r93;
	cvt.u64.u32	%rd23, %r94;
	mov.u64 	%rd26, uvnormal;
	cvta.global.u64 	%rd21, %rd26;
	mov.u32 	%r91, 2;
	mov.u32 	%r92, 4;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r91, %r92, %rd22, %rd23, %rd25, %rd25);
	// inline asm
	ld.u32 	%r2, [%rd20];
	shr.u32 	%r97, %r2, 16;
	cvt.u16.u32	%rs1, %r97;
	and.b16  	%rs7, %rs1, 255;
	cvt.u16.u32	%rs8, %r2;
	or.b16  	%rs9, %rs8, %rs7;
	setp.eq.s16	%p4, %rs9, 0;
	mov.f32 	%f666, 0f00000000;
	mov.f32 	%f667, %f666;
	mov.f32 	%f668, %f666;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs10, [%rd20+1];
	and.b16  	%rs12, %rs8, 255;
	cvt.rn.f32.u16	%f143, %rs12;
	div.rn.f32 	%f144, %f143, 0f437F0000;
	fma.rn.f32 	%f145, %f144, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f146, %rs10;
	div.rn.f32 	%f147, %f146, 0f437F0000;
	fma.rn.f32 	%f148, %f147, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f149, %rs7;
	div.rn.f32 	%f150, %f149, 0f437F0000;
	fma.rn.f32 	%f151, %f150, 0f40000000, 0fBF800000;
	mul.f32 	%f152, %f148, %f148;
	fma.rn.f32 	%f153, %f145, %f145, %f152;
	fma.rn.f32 	%f154, %f151, %f151, %f153;
	sqrt.rn.f32 	%f155, %f154;
	rcp.rn.f32 	%f156, %f155;
	mul.f32 	%f666, %f145, %f156;
	mul.f32 	%f667, %f148, %f156;
	mul.f32 	%f668, %f151, %f156;

BB0_2:
	ld.global.v2.u32 	{%r98, %r99}, [pixelID];
	ld.global.v2.u32 	{%r101, %r102}, [tileInfo];
	add.s32 	%r3, %r98, %r101;
	add.s32 	%r4, %r99, %r102;
	setp.eq.f32	%p5, %f667, 0f00000000;
	setp.eq.f32	%p6, %f666, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f668, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_107;
	bra.uni 	BB0_3;

BB0_107:
	ld.global.u32 	%r354, [imageEnabled];
	and.b32  	%r289, %r354, 1;
	setp.eq.b32	%p98, %r289, 1;
	@!%p98 bra 	BB0_109;
	bra.uni 	BB0_108;

BB0_108:
	cvt.u64.u32	%rd173, %r4;
	cvt.u64.u32	%rd172, %r3;
	mov.u64 	%rd176, image;
	cvta.global.u64 	%rd171, %rd176;
	mov.u64 	%rd175, 0;
	// inline asm
	call (%rd170), _rt_buffer_get_64, (%rd171, %r91, %r92, %rd172, %rd173, %rd175, %rd175);
	// inline asm
	mov.u16 	%rs82, 0;
	st.v4.u8 	[%rd170], {%rs82, %rs82, %rs82, %rs82};
	ld.global.u32 	%r354, [imageEnabled];

BB0_109:
	cvt.u64.u32	%rd18, %r3;
	cvt.u64.u32	%rd19, %r4;
	and.b32  	%r292, %r354, 4;
	setp.eq.s32	%p99, %r292, 0;
	@%p99 bra 	BB0_113;

	ld.global.u32 	%r293, [additive];
	setp.eq.s32	%p100, %r293, 0;
	@%p100 bra 	BB0_112;

	mov.u64 	%rd189, image_HDR;
	cvta.global.u64 	%rd178, %rd189;
	mov.u32 	%r297, 8;
	mov.u64 	%rd188, 0;
	// inline asm
	call (%rd177), _rt_buffer_get_64, (%rd178, %r91, %r297, %rd18, %rd19, %rd188, %rd188);
	// inline asm
	ld.v4.u16 	{%rs89, %rs90, %rs91, %rs92}, [%rd177];
	// inline asm
	{  cvt.f32.f16 %f595, %rs89;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f596, %rs90;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f597, %rs91;}

	// inline asm
	// inline asm
	call (%rd183), _rt_buffer_get_64, (%rd178, %r91, %r297, %rd18, %rd19, %rd188, %rd188);
	// inline asm
	add.f32 	%f598, %f595, 0f00000000;
	add.f32 	%f599, %f596, 0f00000000;
	add.f32 	%f600, %f597, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f600;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f599;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f598;}

	// inline asm
	mov.u16 	%rs93, 0;
	st.v4.u16 	[%rd183], {%rs86, %rs87, %rs88, %rs93};
	bra.uni 	BB0_113;

BB0_3:
	ld.global.v2.u32 	{%r110, %r111}, [pixelID];
	cvt.u64.u32	%rd29, %r110;
	cvt.u64.u32	%rd30, %r111;
	mov.u64 	%rd39, uvpos;
	cvta.global.u64 	%rd28, %rd39;
	mov.u32 	%r107, 12;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r91, %r107, %rd29, %rd30, %rd25, %rd25);
	// inline asm
	ld.f32 	%f162, [%rd27+8];
	ld.f32 	%f163, [%rd27+4];
	ld.f32 	%f164, [%rd27];
	mul.f32 	%f165, %f164, 0f3456BF95;
	mul.f32 	%f166, %f163, 0f3456BF95;
	mul.f32 	%f167, %f162, 0f3456BF95;
	abs.f32 	%f168, %f666;
	div.rn.f32 	%f169, %f165, %f168;
	abs.f32 	%f170, %f667;
	div.rn.f32 	%f171, %f166, %f170;
	abs.f32 	%f172, %f668;
	div.rn.f32 	%f173, %f167, %f172;
	abs.f32 	%f174, %f169;
	abs.f32 	%f175, %f171;
	abs.f32 	%f176, %f173;
	mov.f32 	%f177, 0f38D1B717;
	max.f32 	%f178, %f174, %f177;
	max.f32 	%f179, %f175, %f177;
	max.f32 	%f180, %f176, %f177;
	fma.rn.f32 	%f7, %f666, %f178, %f164;
	fma.rn.f32 	%f8, %f667, %f179, %f163;
	fma.rn.f32 	%f9, %f668, %f180, %f162;
	ld.global.u32 	%r5, [hemispherical];
	setp.gt.f32	%p10, %f168, %f172;
	neg.f32 	%f181, %f667;
	selp.f32	%f182, %f181, 0f00000000, %p10;
	neg.f32 	%f183, %f668;
	selp.f32	%f184, %f666, %f183, %p10;
	selp.f32	%f185, 0f00000000, %f667, %p10;
	mul.f32 	%f186, %f184, %f184;
	fma.rn.f32 	%f187, %f182, %f182, %f186;
	fma.rn.f32 	%f188, %f185, %f185, %f187;
	sqrt.rn.f32 	%f189, %f188;
	rcp.rn.f32 	%f190, %f189;
	mul.f32 	%f10, %f182, %f190;
	mul.f32 	%f11, %f184, %f190;
	mul.f32 	%f12, %f185, %f190;
	ld.global.v2.u32 	{%r114, %r115}, [pixelID];
	cvt.u64.u32	%rd35, %r114;
	cvt.u64.u32	%rd36, %r115;
	mov.u64 	%rd40, rnd_seeds;
	cvta.global.u64 	%rd34, %rd40;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r91, %r92, %rd35, %rd36, %rd25, %rd25);
	// inline asm
	mov.f32 	%f695, 0f00000000;
	setp.lt.s32	%p11, %r1, 1;
	mov.f32 	%f694, %f695;
	mov.f32 	%f693, %f695;
	mov.f32 	%f692, %f695;
	mov.f32 	%f691, %f695;
	@%p11 bra 	BB0_56;

	cvt.rn.f32.s32	%f196, %r1;
	rcp.rn.f32 	%f13, %f196;
	ld.u32 	%r332, [%rd33];
	mul.f32 	%f14, %f7, 0f3456BF95;
	mul.f32 	%f15, %f8, 0f3456BF95;
	mul.f32 	%f16, %f9, 0f3456BF95;
	mul.f32 	%f197, %f666, %f11;
	mul.f32 	%f198, %f667, %f10;
	sub.f32 	%f17, %f198, %f197;
	mul.f32 	%f199, %f668, %f10;
	mul.f32 	%f200, %f666, %f12;
	sub.f32 	%f18, %f200, %f199;
	mul.f32 	%f201, %f667, %f12;
	mul.f32 	%f202, %f668, %f11;
	sub.f32 	%f19, %f202, %f201;
	mov.f32 	%f695, 0f00000000;
	mov.u32 	%r118, 0;
	abs.f32 	%f276, %f15;
	abs.f32 	%f277, %f14;
	max.f32 	%f278, %f277, %f276;
	abs.f32 	%f279, %f16;
	max.f32 	%f280, %f278, %f279;
	mov.u32 	%r329, %r118;
	mov.f32 	%f694, %f695;
	mov.f32 	%f693, %f695;
	mov.f32 	%f692, %f695;
	mov.f32 	%f691, %f695;

BB0_5:
	mov.u32 	%r331, %r118;

BB0_6:
	cvt.rn.f32.s32	%f664, %r329;
	mad.lo.s32 	%r120, %r332, 1664525, 1013904223;
	and.b32  	%r121, %r120, 16777215;
	cvt.rn.f32.u32	%f203, %r121;
	fma.rn.f32 	%f204, %f203, 0f33800000, %f664;
	mul.f32 	%f31, %f13, %f204;
	mad.lo.s32 	%r332, %r120, 1664525, 1013904223;
	and.b32  	%r122, %r332, 16777215;
	cvt.rn.f32.u32	%f205, %r122;
	cvt.rn.f32.s32	%f206, %r331;
	fma.rn.f32 	%f207, %f205, 0f33800000, %f206;
	mul.f32 	%f208, %f13, %f207;
	mul.f32 	%f209, %f31, %f31;
	mov.f32 	%f210, 0f3F800000;
	sub.f32 	%f211, %f210, %f209;
	mov.f32 	%f212, 0f00000000;
	max.f32 	%f213, %f212, %f211;
	sqrt.rn.f32 	%f32, %f213;
	mul.f32 	%f685, %f208, 0f40C90FDB;
	abs.f32 	%f34, %f685;
	setp.neu.f32	%p12, %f34, 0f7F800000;
	mov.f32 	%f679, %f685;
	@%p12 bra 	BB0_8;

	mul.rn.f32 	%f679, %f685, %f212;

BB0_8:
	mul.f32 	%f215, %f679, 0f3F22F983;
	cvt.rni.s32.f32	%r342, %f215;
	cvt.rn.f32.s32	%f216, %r342;
	neg.f32 	%f217, %f216;
	mov.f32 	%f218, 0f3FC90FDA;
	fma.rn.f32 	%f219, %f217, %f218, %f679;
	mov.f32 	%f220, 0f33A22168;
	fma.rn.f32 	%f221, %f217, %f220, %f219;
	mov.f32 	%f222, 0f27C234C5;
	fma.rn.f32 	%f680, %f217, %f222, %f221;
	abs.f32 	%f223, %f679;
	setp.leu.f32	%p13, %f223, 0f47CE4780;
	@%p13 bra 	BB0_19;

	add.u64 	%rd42, %SP, 4;
	cvta.to.local.u64 	%rd3, %rd42;
	mov.b32 	 %r13, %f679;
	shr.u32 	%r14, %r13, 23;
	shl.b32 	%r125, %r13, 8;
	or.b32  	%r15, %r125, -2147483648;
	mov.u32 	%r333, 0;
	mov.u64 	%rd279, 0;
	mov.u64 	%rd278, %rd3;
	mov.u32 	%r334, %r333;

BB0_10:
	.pragma "nounroll";
	shl.b64 	%rd43, %rd279, 2;
	mov.u64 	%rd44, __cudart_i2opi_f;
	add.s64 	%rd45, %rd44, %rd43;
	ld.const.u32 	%r128, [%rd45];
	// inline asm
	{
	mad.lo.cc.u32   %r126, %r128, %r15, %r334;
	madc.hi.u32     %r334, %r128, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd278], %r126;
	add.s32 	%r333, %r333, 1;
	cvt.s64.s32	%rd279, %r333;
	mul.wide.s32 	%rd48, %r333, 4;
	add.s64 	%rd278, %rd3, %rd48;
	setp.ne.s32	%p14, %r333, 6;
	@%p14 bra 	BB0_10;

	add.u64 	%rd277, %SP, 4;
	and.b32  	%r131, %r14, 255;
	add.s32 	%r132, %r131, -128;
	shr.u32 	%r133, %r132, 5;
	and.b32  	%r20, %r13, -2147483648;
	cvta.to.local.u64 	%rd50, %rd277;
	st.local.u32 	[%rd50+24], %r334;
	mov.u32 	%r134, 6;
	sub.s32 	%r135, %r134, %r133;
	mul.wide.s32 	%rd51, %r135, 4;
	add.s64 	%rd8, %rd50, %rd51;
	ld.local.u32 	%r335, [%rd8];
	ld.local.u32 	%r336, [%rd8+-4];
	and.b32  	%r23, %r14, 31;
	setp.eq.s32	%p15, %r23, 0;
	@%p15 bra 	BB0_13;

	mov.u32 	%r136, 32;
	sub.s32 	%r137, %r136, %r23;
	shr.u32 	%r138, %r336, %r137;
	shl.b32 	%r139, %r335, %r23;
	add.s32 	%r335, %r138, %r139;
	ld.local.u32 	%r140, [%rd8+-8];
	shr.u32 	%r141, %r140, %r137;
	shl.b32 	%r142, %r336, %r23;
	add.s32 	%r336, %r141, %r142;

BB0_13:
	shr.u32 	%r143, %r336, 30;
	shl.b32 	%r144, %r335, 2;
	add.s32 	%r337, %r143, %r144;
	shl.b32 	%r29, %r336, 2;
	shr.u32 	%r145, %r337, 31;
	shr.u32 	%r146, %r335, 30;
	add.s32 	%r30, %r145, %r146;
	setp.eq.s32	%p16, %r145, 0;
	@%p16 bra 	BB0_14;
	bra.uni 	BB0_15;

BB0_14:
	mov.u32 	%r338, %r20;
	mov.u32 	%r339, %r29;
	bra.uni 	BB0_16;

BB0_15:
	not.b32 	%r147, %r337;
	neg.s32 	%r339, %r29;
	setp.eq.s32	%p17, %r29, 0;
	selp.u32	%r148, 1, 0, %p17;
	add.s32 	%r337, %r148, %r147;
	xor.b32  	%r338, %r20, -2147483648;

BB0_16:
	clz.b32 	%r341, %r337;
	setp.eq.s32	%p18, %r341, 0;
	shl.b32 	%r149, %r337, %r341;
	mov.u32 	%r150, 32;
	sub.s32 	%r151, %r150, %r341;
	shr.u32 	%r152, %r339, %r151;
	add.s32 	%r153, %r152, %r149;
	selp.b32	%r38, %r337, %r153, %p18;
	mov.u32 	%r154, -921707870;
	mul.hi.u32 	%r340, %r38, %r154;
	setp.eq.s32	%p19, %r20, 0;
	neg.s32 	%r155, %r30;
	selp.b32	%r342, %r30, %r155, %p19;
	setp.lt.s32	%p20, %r340, 1;
	@%p20 bra 	BB0_18;

	mul.lo.s32 	%r156, %r38, -921707870;
	shr.u32 	%r157, %r156, 31;
	shl.b32 	%r158, %r340, 1;
	add.s32 	%r340, %r157, %r158;
	add.s32 	%r341, %r341, 1;

BB0_18:
	mov.u32 	%r159, 126;
	sub.s32 	%r160, %r159, %r341;
	shl.b32 	%r161, %r160, 23;
	add.s32 	%r162, %r340, 1;
	shr.u32 	%r163, %r162, 7;
	add.s32 	%r164, %r163, 1;
	shr.u32 	%r165, %r164, 1;
	add.s32 	%r166, %r165, %r161;
	or.b32  	%r167, %r166, %r338;
	mov.b32 	 %f680, %r167;

BB0_19:
	mul.rn.f32 	%f40, %f680, %f680;
	add.s32 	%r46, %r342, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p21, %r47, 0;
	@%p21 bra 	BB0_21;
	bra.uni 	BB0_20;

BB0_21:
	mov.f32 	%f226, 0f3C08839E;
	mov.f32 	%f227, 0fB94CA1F9;
	fma.rn.f32 	%f681, %f227, %f40, %f226;
	bra.uni 	BB0_22;

BB0_20:
	mov.f32 	%f224, 0fBAB6061A;
	mov.f32 	%f225, 0f37CCF5CE;
	fma.rn.f32 	%f681, %f225, %f40, %f224;

BB0_22:
	@%p21 bra 	BB0_24;
	bra.uni 	BB0_23;

BB0_24:
	mov.f32 	%f231, 0fBE2AAAA3;
	fma.rn.f32 	%f232, %f681, %f40, %f231;
	fma.rn.f32 	%f682, %f232, %f40, %f212;
	bra.uni 	BB0_25;

BB0_23:
	mov.f32 	%f228, 0f3D2AAAA5;
	fma.rn.f32 	%f229, %f681, %f40, %f228;
	mov.f32 	%f230, 0fBF000000;
	fma.rn.f32 	%f682, %f229, %f40, %f230;

BB0_25:
	fma.rn.f32 	%f683, %f682, %f680, %f680;
	@%p21 bra 	BB0_27;

	fma.rn.f32 	%f683, %f682, %f40, %f210;

BB0_27:
	and.b32  	%r168, %r46, 2;
	setp.eq.s32	%p24, %r168, 0;
	@%p24 bra 	BB0_29;

	mov.f32 	%f236, 0fBF800000;
	fma.rn.f32 	%f683, %f683, %f236, %f212;

BB0_29:
	@%p12 bra 	BB0_31;

	mul.rn.f32 	%f685, %f685, %f212;

BB0_31:
	mov.f32 	%f665, 0f3FC90FDA;
	mul.f32 	%f238, %f685, 0f3F22F983;
	cvt.rni.s32.f32	%r352, %f238;
	cvt.rn.f32.s32	%f239, %r352;
	neg.f32 	%f240, %f239;
	fma.rn.f32 	%f242, %f240, %f665, %f685;
	fma.rn.f32 	%f244, %f240, %f220, %f242;
	fma.rn.f32 	%f686, %f240, %f222, %f244;
	abs.f32 	%f246, %f685;
	setp.leu.f32	%p26, %f246, 0f47CE4780;
	@%p26 bra 	BB0_42;

	add.u64 	%rd53, %SP, 4;
	cvta.to.local.u64 	%rd9, %rd53;
	mov.b32 	 %r49, %f685;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r171, %r49, 8;
	or.b32  	%r51, %r171, -2147483648;
	mov.u32 	%r343, 0;
	mov.u64 	%rd280, %rd9;
	mov.u64 	%rd281, %rd25;
	mov.u32 	%r344, %r343;

BB0_33:
	.pragma "nounroll";
	shl.b64 	%rd54, %rd281, 2;
	mov.u64 	%rd55, __cudart_i2opi_f;
	add.s64 	%rd56, %rd55, %rd54;
	ld.const.u32 	%r174, [%rd56];
	// inline asm
	{
	mad.lo.cc.u32   %r172, %r174, %r51, %r344;
	madc.hi.u32     %r344, %r174, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd280], %r172;
	add.s32 	%r343, %r343, 1;
	cvt.s64.s32	%rd281, %r343;
	mul.wide.s32 	%rd57, %r343, 4;
	add.s64 	%rd280, %rd9, %rd57;
	setp.ne.s32	%p27, %r343, 6;
	@%p27 bra 	BB0_33;

	and.b32  	%r177, %r50, 255;
	add.s32 	%r178, %r177, -128;
	shr.u32 	%r179, %r178, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd59, %rd53;
	st.local.u32 	[%rd59+24], %r344;
	mov.u32 	%r180, 6;
	sub.s32 	%r181, %r180, %r179;
	mul.wide.s32 	%rd60, %r181, 4;
	add.s64 	%rd15, %rd59, %rd60;
	ld.local.u32 	%r345, [%rd15];
	ld.local.u32 	%r346, [%rd15+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p28, %r59, 0;
	@%p28 bra 	BB0_36;

	mov.u32 	%r182, 32;
	sub.s32 	%r183, %r182, %r59;
	shr.u32 	%r184, %r346, %r183;
	shl.b32 	%r185, %r345, %r59;
	add.s32 	%r345, %r184, %r185;
	ld.local.u32 	%r186, [%rd15+-8];
	shr.u32 	%r187, %r186, %r183;
	shl.b32 	%r188, %r346, %r59;
	add.s32 	%r346, %r187, %r188;

BB0_36:
	shr.u32 	%r189, %r346, 30;
	shl.b32 	%r190, %r345, 2;
	add.s32 	%r347, %r189, %r190;
	shl.b32 	%r65, %r346, 2;
	shr.u32 	%r191, %r347, 31;
	shr.u32 	%r192, %r345, 30;
	add.s32 	%r66, %r191, %r192;
	setp.eq.s32	%p29, %r191, 0;
	@%p29 bra 	BB0_37;
	bra.uni 	BB0_38;

BB0_37:
	mov.u32 	%r348, %r56;
	mov.u32 	%r349, %r65;
	bra.uni 	BB0_39;

BB0_38:
	not.b32 	%r193, %r347;
	neg.s32 	%r349, %r65;
	setp.eq.s32	%p30, %r65, 0;
	selp.u32	%r194, 1, 0, %p30;
	add.s32 	%r347, %r194, %r193;
	xor.b32  	%r348, %r56, -2147483648;

BB0_39:
	clz.b32 	%r351, %r347;
	setp.eq.s32	%p31, %r351, 0;
	shl.b32 	%r195, %r347, %r351;
	mov.u32 	%r196, 32;
	sub.s32 	%r197, %r196, %r351;
	shr.u32 	%r198, %r349, %r197;
	add.s32 	%r199, %r198, %r195;
	selp.b32	%r74, %r347, %r199, %p31;
	mov.u32 	%r200, -921707870;
	mul.hi.u32 	%r350, %r74, %r200;
	setp.eq.s32	%p32, %r56, 0;
	neg.s32 	%r201, %r66;
	selp.b32	%r352, %r66, %r201, %p32;
	setp.lt.s32	%p33, %r350, 1;
	@%p33 bra 	BB0_41;

	mul.lo.s32 	%r202, %r74, -921707870;
	shr.u32 	%r203, %r202, 31;
	shl.b32 	%r204, %r350, 1;
	add.s32 	%r350, %r203, %r204;
	add.s32 	%r351, %r351, 1;

BB0_41:
	mov.u32 	%r205, 126;
	sub.s32 	%r206, %r205, %r351;
	shl.b32 	%r207, %r206, 23;
	add.s32 	%r208, %r350, 1;
	shr.u32 	%r209, %r208, 7;
	add.s32 	%r210, %r209, 1;
	shr.u32 	%r211, %r210, 1;
	add.s32 	%r212, %r211, %r207;
	or.b32  	%r213, %r212, %r348;
	mov.b32 	 %f686, %r213;

BB0_42:
	mul.rn.f32 	%f57, %f686, %f686;
	and.b32  	%r82, %r352, 1;
	setp.eq.s32	%p34, %r82, 0;
	@%p34 bra 	BB0_44;
	bra.uni 	BB0_43;

BB0_44:
	mov.f32 	%f249, 0f3C08839E;
	mov.f32 	%f250, 0fB94CA1F9;
	fma.rn.f32 	%f687, %f250, %f57, %f249;
	bra.uni 	BB0_45;

BB0_43:
	mov.f32 	%f247, 0fBAB6061A;
	mov.f32 	%f248, 0f37CCF5CE;
	fma.rn.f32 	%f687, %f248, %f57, %f247;

BB0_45:
	@%p34 bra 	BB0_47;
	bra.uni 	BB0_46;

BB0_47:
	mov.f32 	%f254, 0fBE2AAAA3;
	fma.rn.f32 	%f255, %f687, %f57, %f254;
	fma.rn.f32 	%f688, %f255, %f57, %f212;
	bra.uni 	BB0_48;

BB0_46:
	mov.f32 	%f251, 0f3D2AAAA5;
	fma.rn.f32 	%f252, %f687, %f57, %f251;
	mov.f32 	%f253, 0fBF000000;
	fma.rn.f32 	%f688, %f252, %f57, %f253;

BB0_48:
	fma.rn.f32 	%f689, %f688, %f686, %f686;
	@%p34 bra 	BB0_50;

	fma.rn.f32 	%f689, %f688, %f57, %f210;

BB0_50:
	and.b32  	%r214, %r352, 2;
	setp.eq.s32	%p37, %r214, 0;
	@%p37 bra 	BB0_52;

	mov.f32 	%f259, 0fBF800000;
	fma.rn.f32 	%f689, %f689, %f259, %f212;

BB0_52:
	mul.f32 	%f260, %f32, %f683;
	mul.f32 	%f261, %f32, %f689;
	mul.f32 	%f262, %f10, %f261;
	mul.f32 	%f263, %f11, %f261;
	mul.f32 	%f264, %f12, %f261;
	fma.rn.f32 	%f265, %f19, %f260, %f262;
	fma.rn.f32 	%f266, %f18, %f260, %f263;
	fma.rn.f32 	%f267, %f17, %f260, %f264;
	fma.rn.f32 	%f69, %f666, %f31, %f265;
	fma.rn.f32 	%f70, %f667, %f31, %f266;
	fma.rn.f32 	%f71, %f668, %f31, %f267;
	setp.gt.f32	%p38, %f70, 0f00000000;
	setp.eq.s32	%p39, %r5, 0;
	or.pred  	%p40, %p39, %p38;
	@!%p40 bra 	BB0_54;
	bra.uni 	BB0_53;

BB0_53:
	add.u64 	%rd61, %SP, 0;
	cvta.to.local.u64 	%rd62, %rd61;
	max.f32 	%f274, %f280, %f177;
	mov.u32 	%r218, 1065353216;
	st.local.u32 	[%rd62], %r218;
	ld.global.u32 	%r215, [root];
	mov.u32 	%r216, 1;
	mov.f32 	%f275, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r215, %f7, %f8, %f9, %f69, %f70, %f71, %r216, %f274, %f275, %rd61, %r92);
	// inline asm
	mul.f32 	%f282, %f667, %f70;
	fma.rn.f32 	%f283, %f666, %f69, %f282;
	fma.rn.f32 	%f284, %f668, %f71, %f283;
	mul.f32 	%f285, %f284, 0f40800000;
	cvt.sat.f32.f32	%f286, %f285;
	ld.local.f32 	%f287, [%rd62];
	mul.f32 	%f288, %f287, %f286;
	fma.rn.f32 	%f693, %f69, %f288, %f693;
	fma.rn.f32 	%f694, %f70, %f288, %f694;
	fma.rn.f32 	%f695, %f71, %f288, %f695;
	add.f32 	%f692, %f692, %f288;
	cvt.sat.f32.f32	%f289, %f284;
	fma.rn.f32 	%f691, %f289, %f287, %f691;

BB0_54:
	add.s32 	%r331, %r331, 1;
	setp.lt.s32	%p41, %r331, %r1;
	@%p41 bra 	BB0_6;

	add.s32 	%r329, %r329, 1;
	setp.lt.s32	%p42, %r329, %r1;
	@%p42 bra 	BB0_5;

BB0_56:
	mul.lo.s32 	%r219, %r1, %r1;
	cvt.rn.f32.s32	%f290, %r219;
	div.rn.f32 	%f291, %f691, %f290;
	div.rn.f32 	%f87, %f692, %f290;
	div.rn.f32 	%f88, %f693, %f290;
	div.rn.f32 	%f89, %f694, %f290;
	div.rn.f32 	%f90, %f695, %f290;
	add.f32 	%f292, %f291, %f291;
	ld.global.f32 	%f293, [skyColor];
	mul.f32 	%f91, %f292, %f293;
	ld.global.f32 	%f294, [skyColor+4];
	mul.f32 	%f92, %f292, %f294;
	ld.global.f32 	%f295, [skyColor+8];
	mul.f32 	%f93, %f292, %f295;
	ld.global.u32 	%r353, [imageEnabled];
	and.b32  	%r220, %r353, 1;
	setp.eq.b32	%p43, %r220, 1;
	@!%p43 bra 	BB0_91;
	bra.uni 	BB0_57;

BB0_57:
	abs.f32 	%f95, %f91;
	setp.lt.f32	%p44, %f95, 0f00800000;
	mul.f32 	%f301, %f95, 0f4B800000;
	selp.f32	%f302, 0fC3170000, 0fC2FE0000, %p44;
	selp.f32	%f303, %f301, %f95, %p44;
	mov.b32 	 %r221, %f303;
	and.b32  	%r222, %r221, 8388607;
	or.b32  	%r223, %r222, 1065353216;
	mov.b32 	 %f304, %r223;
	shr.u32 	%r224, %r221, 23;
	cvt.rn.f32.u32	%f305, %r224;
	add.f32 	%f306, %f302, %f305;
	setp.gt.f32	%p45, %f304, 0f3FB504F3;
	mul.f32 	%f307, %f304, 0f3F000000;
	add.f32 	%f308, %f306, 0f3F800000;
	selp.f32	%f309, %f307, %f304, %p45;
	selp.f32	%f310, %f308, %f306, %p45;
	add.f32 	%f311, %f309, 0fBF800000;
	add.f32 	%f297, %f309, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f296,%f297;
	// inline asm
	add.f32 	%f312, %f311, %f311;
	mul.f32 	%f313, %f296, %f312;
	mul.f32 	%f314, %f313, %f313;
	mov.f32 	%f315, 0f3C4CAF63;
	mov.f32 	%f316, 0f3B18F0FE;
	fma.rn.f32 	%f317, %f316, %f314, %f315;
	mov.f32 	%f318, 0f3DAAAABD;
	fma.rn.f32 	%f319, %f317, %f314, %f318;
	mul.rn.f32 	%f320, %f319, %f314;
	mul.rn.f32 	%f321, %f320, %f313;
	sub.f32 	%f322, %f311, %f313;
	neg.f32 	%f323, %f313;
	add.f32 	%f324, %f322, %f322;
	fma.rn.f32 	%f325, %f323, %f311, %f324;
	mul.rn.f32 	%f326, %f296, %f325;
	add.f32 	%f327, %f321, %f313;
	sub.f32 	%f328, %f313, %f327;
	add.f32 	%f329, %f321, %f328;
	add.f32 	%f330, %f326, %f329;
	add.f32 	%f331, %f327, %f330;
	sub.f32 	%f332, %f327, %f331;
	add.f32 	%f333, %f330, %f332;
	mov.f32 	%f334, 0f3F317200;
	mul.rn.f32 	%f335, %f310, %f334;
	mov.f32 	%f336, 0f35BFBE8E;
	mul.rn.f32 	%f337, %f310, %f336;
	add.f32 	%f338, %f335, %f331;
	sub.f32 	%f339, %f335, %f338;
	add.f32 	%f340, %f331, %f339;
	add.f32 	%f341, %f333, %f340;
	add.f32 	%f342, %f337, %f341;
	add.f32 	%f343, %f338, %f342;
	sub.f32 	%f344, %f338, %f343;
	add.f32 	%f345, %f342, %f344;
	mov.f32 	%f346, 0f3EE66666;
	mul.rn.f32 	%f347, %f346, %f343;
	neg.f32 	%f348, %f347;
	fma.rn.f32 	%f349, %f346, %f343, %f348;
	fma.rn.f32 	%f350, %f346, %f345, %f349;
	mov.f32 	%f351, 0f00000000;
	fma.rn.f32 	%f352, %f351, %f343, %f350;
	add.rn.f32 	%f353, %f347, %f352;
	neg.f32 	%f354, %f353;
	add.rn.f32 	%f355, %f347, %f354;
	add.rn.f32 	%f356, %f355, %f352;
	mov.b32 	 %r225, %f353;
	setp.eq.s32	%p46, %r225, 1118925336;
	add.s32 	%r226, %r225, -1;
	mov.b32 	 %f357, %r226;
	add.f32 	%f358, %f356, 0f37000000;
	selp.f32	%f359, %f357, %f353, %p46;
	selp.f32	%f96, %f358, %f356, %p46;
	mul.f32 	%f360, %f359, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f361, %f360;
	mov.f32 	%f362, 0fBF317200;
	fma.rn.f32 	%f363, %f361, %f362, %f359;
	mov.f32 	%f364, 0fB5BFBE8E;
	fma.rn.f32 	%f365, %f361, %f364, %f363;
	mul.f32 	%f366, %f365, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f367, %f366;
	add.f32 	%f368, %f361, 0f00000000;
	ex2.approx.f32 	%f369, %f368;
	mul.f32 	%f370, %f367, %f369;
	setp.lt.f32	%p47, %f359, 0fC2D20000;
	selp.f32	%f371, 0f00000000, %f370, %p47;
	setp.gt.f32	%p48, %f359, 0f42D20000;
	selp.f32	%f701, 0f7F800000, %f371, %p48;
	setp.eq.f32	%p49, %f701, 0f7F800000;
	@%p49 bra 	BB0_59;

	fma.rn.f32 	%f701, %f701, %f96, %f701;

BB0_59:
	mov.f32 	%f633, 0f3E666666;
	cvt.rzi.f32.f32	%f632, %f633;
	fma.rn.f32 	%f631, %f632, 0fC0000000, 0f3EE66666;
	abs.f32 	%f630, %f631;
	setp.lt.f32	%p50, %f91, 0f00000000;
	setp.eq.f32	%p51, %f630, 0f3F800000;
	and.pred  	%p1, %p50, %p51;
	mov.b32 	 %r227, %f701;
	xor.b32  	%r228, %r227, -2147483648;
	mov.b32 	 %f372, %r228;
	selp.f32	%f703, %f372, %f701, %p1;
	setp.eq.f32	%p52, %f91, 0f00000000;
	@%p52 bra 	BB0_62;
	bra.uni 	BB0_60;

BB0_62:
	add.f32 	%f375, %f91, %f91;
	selp.f32	%f703, %f375, 0f00000000, %p51;
	bra.uni 	BB0_63;

BB0_112:
	mov.u64 	%rd196, image_HDR;
	cvta.global.u64 	%rd191, %rd196;
	mov.u32 	%r299, 8;
	mov.u64 	%rd195, 0;
	// inline asm
	call (%rd190), _rt_buffer_get_64, (%rd191, %r91, %r299, %rd18, %rd19, %rd195, %rd195);
	// inline asm
	mov.f32 	%f601, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs94, %f601;}

	// inline asm
	mov.u16 	%rs95, 0;
	st.v4.u16 	[%rd190], {%rs94, %rs94, %rs94, %rs95};

BB0_113:
	ld.global.u32 	%r300, [additive];
	setp.eq.s32	%p101, %r300, 0;
	@%p101 bra 	BB0_115;

	mov.u64 	%rd209, image_RNM0;
	cvta.global.u64 	%rd198, %rd209;
	mov.u32 	%r304, 8;
	mov.u64 	%rd208, 0;
	// inline asm
	call (%rd197), _rt_buffer_get_64, (%rd198, %r91, %r304, %rd18, %rd19, %rd208, %rd208);
	// inline asm
	ld.v4.u16 	{%rs102, %rs103, %rs104, %rs105}, [%rd197];
	// inline asm
	{  cvt.f32.f16 %f602, %rs102;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f603, %rs103;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f604, %rs104;}

	// inline asm
	// inline asm
	call (%rd203), _rt_buffer_get_64, (%rd198, %r91, %r304, %rd18, %rd19, %rd208, %rd208);
	// inline asm
	add.f32 	%f605, %f602, 0f00000000;
	add.f32 	%f606, %f603, 0f00000000;
	add.f32 	%f607, %f604, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f607;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f606;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f605;}

	// inline asm
	mov.u16 	%rs106, 0;
	st.v4.u16 	[%rd203], {%rs99, %rs100, %rs101, %rs106};
	bra.uni 	BB0_116;

BB0_115:
	mov.u64 	%rd216, image_RNM0;
	cvta.global.u64 	%rd211, %rd216;
	mov.u32 	%r306, 8;
	mov.u64 	%rd215, 0;
	// inline asm
	call (%rd210), _rt_buffer_get_64, (%rd211, %r91, %r306, %rd18, %rd19, %rd215, %rd215);
	// inline asm
	mov.f32 	%f608, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs107, %f608;}

	// inline asm
	mov.u16 	%rs108, 0;
	st.v4.u16 	[%rd210], {%rs107, %rs107, %rs107, %rs108};

BB0_116:
	ld.global.u32 	%r307, [additive];
	setp.eq.s32	%p102, %r307, 0;
	@%p102 bra 	BB0_118;

	mov.u64 	%rd229, image_RNM1;
	cvta.global.u64 	%rd218, %rd229;
	mov.u32 	%r311, 8;
	mov.u64 	%rd228, 0;
	// inline asm
	call (%rd217), _rt_buffer_get_64, (%rd218, %r91, %r311, %rd18, %rd19, %rd228, %rd228);
	// inline asm
	ld.v4.u16 	{%rs115, %rs116, %rs117, %rs118}, [%rd217];
	// inline asm
	{  cvt.f32.f16 %f609, %rs115;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f610, %rs116;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f611, %rs117;}

	// inline asm
	// inline asm
	call (%rd223), _rt_buffer_get_64, (%rd218, %r91, %r311, %rd18, %rd19, %rd228, %rd228);
	// inline asm
	add.f32 	%f612, %f609, 0f00000000;
	add.f32 	%f613, %f610, 0f00000000;
	add.f32 	%f614, %f611, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs114, %f614;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs113, %f613;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs112, %f612;}

	// inline asm
	mov.u16 	%rs119, 0;
	st.v4.u16 	[%rd223], {%rs112, %rs113, %rs114, %rs119};
	bra.uni 	BB0_119;

BB0_118:
	mov.u64 	%rd236, image_RNM1;
	cvta.global.u64 	%rd231, %rd236;
	mov.u32 	%r313, 8;
	mov.u64 	%rd235, 0;
	// inline asm
	call (%rd230), _rt_buffer_get_64, (%rd231, %r91, %r313, %rd18, %rd19, %rd235, %rd235);
	// inline asm
	mov.f32 	%f615, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs120, %f615;}

	// inline asm
	mov.u16 	%rs121, 0;
	st.v4.u16 	[%rd230], {%rs120, %rs120, %rs120, %rs121};

BB0_119:
	ld.global.u32 	%r314, [additive];
	setp.eq.s32	%p103, %r314, 0;
	@%p103 bra 	BB0_121;

	mov.u64 	%rd249, image_RNM2;
	cvta.global.u64 	%rd238, %rd249;
	mov.u32 	%r318, 8;
	mov.u64 	%rd248, 0;
	// inline asm
	call (%rd237), _rt_buffer_get_64, (%rd238, %r91, %r318, %rd18, %rd19, %rd248, %rd248);
	// inline asm
	ld.v4.u16 	{%rs128, %rs129, %rs130, %rs131}, [%rd237];
	// inline asm
	{  cvt.f32.f16 %f616, %rs128;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f617, %rs129;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f618, %rs130;}

	// inline asm
	// inline asm
	call (%rd243), _rt_buffer_get_64, (%rd238, %r91, %r318, %rd18, %rd19, %rd248, %rd248);
	// inline asm
	add.f32 	%f619, %f616, 0f00000000;
	add.f32 	%f620, %f617, 0f00000000;
	add.f32 	%f621, %f618, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs127, %f621;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs126, %f620;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs125, %f619;}

	// inline asm
	mov.u16 	%rs132, 0;
	st.v4.u16 	[%rd243], {%rs125, %rs126, %rs127, %rs132};
	bra.uni 	BB0_122;

BB0_121:
	mov.u64 	%rd256, image_RNM2;
	cvta.global.u64 	%rd251, %rd256;
	mov.u32 	%r320, 8;
	mov.u64 	%rd255, 0;
	// inline asm
	call (%rd250), _rt_buffer_get_64, (%rd251, %r91, %r320, %rd18, %rd19, %rd255, %rd255);
	// inline asm
	mov.f32 	%f622, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs133, %f622;}

	// inline asm
	mov.u16 	%rs134, 0;
	st.v4.u16 	[%rd250], {%rs133, %rs133, %rs133, %rs134};

BB0_122:
	ld.global.u32 	%r321, [additive];
	setp.eq.s32	%p104, %r321, 0;
	@%p104 bra 	BB0_124;

	mov.u64 	%rd269, image_RNM3;
	cvta.global.u64 	%rd258, %rd269;
	mov.u32 	%r325, 8;
	mov.u64 	%rd268, 0;
	// inline asm
	call (%rd257), _rt_buffer_get_64, (%rd258, %r91, %r325, %rd18, %rd19, %rd268, %rd268);
	// inline asm
	ld.v4.u16 	{%rs141, %rs142, %rs143, %rs144}, [%rd257];
	// inline asm
	{  cvt.f32.f16 %f623, %rs141;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f624, %rs142;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f625, %rs143;}

	// inline asm
	// inline asm
	call (%rd263), _rt_buffer_get_64, (%rd258, %r91, %r325, %rd18, %rd19, %rd268, %rd268);
	// inline asm
	add.f32 	%f626, %f623, 0f00000000;
	add.f32 	%f627, %f624, 0f00000000;
	add.f32 	%f628, %f625, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs140, %f628;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs139, %f627;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs138, %f626;}

	// inline asm
	mov.u16 	%rs145, 0;
	st.v4.u16 	[%rd263], {%rs138, %rs139, %rs140, %rs145};
	bra.uni 	BB0_125;

BB0_124:
	mov.u64 	%rd276, image_RNM3;
	cvta.global.u64 	%rd271, %rd276;
	mov.u32 	%r327, 8;
	mov.u64 	%rd275, 0;
	// inline asm
	call (%rd270), _rt_buffer_get_64, (%rd271, %r91, %r327, %rd18, %rd19, %rd275, %rd275);
	// inline asm
	mov.f32 	%f629, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs146, %f629;}

	// inline asm
	mov.u16 	%rs147, 0;
	st.v4.u16 	[%rd270], {%rs146, %rs146, %rs146, %rs147};
	bra.uni 	BB0_125;

BB0_60:
	setp.geu.f32	%p53, %f91, 0f00000000;
	@%p53 bra 	BB0_63;

	mov.f32 	%f657, 0f3EE66666;
	cvt.rzi.f32.f32	%f374, %f657;
	setp.neu.f32	%p54, %f374, 0f3EE66666;
	selp.f32	%f703, 0f7FFFFFFF, %f703, %p54;

BB0_63:
	abs.f32 	%f634, %f91;
	add.f32 	%f376, %f634, 0f3EE66666;
	mov.b32 	 %r229, %f376;
	setp.lt.s32	%p56, %r229, 2139095040;
	@%p56 bra 	BB0_68;

	abs.f32 	%f655, %f91;
	setp.gtu.f32	%p57, %f655, 0f7F800000;
	@%p57 bra 	BB0_67;
	bra.uni 	BB0_65;

BB0_67:
	add.f32 	%f703, %f91, 0f3EE66666;
	bra.uni 	BB0_68;

BB0_65:
	abs.f32 	%f656, %f91;
	setp.neu.f32	%p58, %f656, 0f7F800000;
	@%p58 bra 	BB0_68;

	selp.f32	%f703, 0fFF800000, 0f7F800000, %p1;

BB0_68:
	mov.f32 	%f643, 0fB5BFBE8E;
	mov.f32 	%f642, 0fBF317200;
	mov.f32 	%f641, 0f00000000;
	mov.f32 	%f640, 0f35BFBE8E;
	mov.f32 	%f639, 0f3F317200;
	mov.f32 	%f638, 0f3DAAAABD;
	mov.f32 	%f637, 0f3C4CAF63;
	mov.f32 	%f636, 0f3B18F0FE;
	mov.f32 	%f635, 0f3EE66666;
	setp.eq.f32	%p59, %f91, 0f3F800000;
	selp.f32	%f107, 0f3F800000, %f703, %p59;
	abs.f32 	%f108, %f92;
	setp.lt.f32	%p60, %f108, 0f00800000;
	mul.f32 	%f379, %f108, 0f4B800000;
	selp.f32	%f380, 0fC3170000, 0fC2FE0000, %p60;
	selp.f32	%f381, %f379, %f108, %p60;
	mov.b32 	 %r230, %f381;
	and.b32  	%r231, %r230, 8388607;
	or.b32  	%r232, %r231, 1065353216;
	mov.b32 	 %f382, %r232;
	shr.u32 	%r233, %r230, 23;
	cvt.rn.f32.u32	%f383, %r233;
	add.f32 	%f384, %f380, %f383;
	setp.gt.f32	%p61, %f382, 0f3FB504F3;
	mul.f32 	%f385, %f382, 0f3F000000;
	add.f32 	%f386, %f384, 0f3F800000;
	selp.f32	%f387, %f385, %f382, %p61;
	selp.f32	%f388, %f386, %f384, %p61;
	add.f32 	%f389, %f387, 0fBF800000;
	add.f32 	%f378, %f387, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f377,%f378;
	// inline asm
	add.f32 	%f390, %f389, %f389;
	mul.f32 	%f391, %f377, %f390;
	mul.f32 	%f392, %f391, %f391;
	fma.rn.f32 	%f395, %f636, %f392, %f637;
	fma.rn.f32 	%f397, %f395, %f392, %f638;
	mul.rn.f32 	%f398, %f397, %f392;
	mul.rn.f32 	%f399, %f398, %f391;
	sub.f32 	%f400, %f389, %f391;
	neg.f32 	%f401, %f391;
	add.f32 	%f402, %f400, %f400;
	fma.rn.f32 	%f403, %f401, %f389, %f402;
	mul.rn.f32 	%f404, %f377, %f403;
	add.f32 	%f405, %f399, %f391;
	sub.f32 	%f406, %f391, %f405;
	add.f32 	%f407, %f399, %f406;
	add.f32 	%f408, %f404, %f407;
	add.f32 	%f409, %f405, %f408;
	sub.f32 	%f410, %f405, %f409;
	add.f32 	%f411, %f408, %f410;
	mul.rn.f32 	%f413, %f388, %f639;
	mul.rn.f32 	%f415, %f388, %f640;
	add.f32 	%f416, %f413, %f409;
	sub.f32 	%f417, %f413, %f416;
	add.f32 	%f418, %f409, %f417;
	add.f32 	%f419, %f411, %f418;
	add.f32 	%f420, %f415, %f419;
	add.f32 	%f421, %f416, %f420;
	sub.f32 	%f422, %f416, %f421;
	add.f32 	%f423, %f420, %f422;
	mul.rn.f32 	%f425, %f635, %f421;
	neg.f32 	%f426, %f425;
	fma.rn.f32 	%f427, %f635, %f421, %f426;
	fma.rn.f32 	%f428, %f635, %f423, %f427;
	fma.rn.f32 	%f430, %f641, %f421, %f428;
	add.rn.f32 	%f431, %f425, %f430;
	neg.f32 	%f432, %f431;
	add.rn.f32 	%f433, %f425, %f432;
	add.rn.f32 	%f434, %f433, %f430;
	mov.b32 	 %r234, %f431;
	setp.eq.s32	%p62, %r234, 1118925336;
	add.s32 	%r235, %r234, -1;
	mov.b32 	 %f435, %r235;
	add.f32 	%f436, %f434, 0f37000000;
	selp.f32	%f437, %f435, %f431, %p62;
	selp.f32	%f109, %f436, %f434, %p62;
	mul.f32 	%f438, %f437, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f439, %f438;
	fma.rn.f32 	%f441, %f439, %f642, %f437;
	fma.rn.f32 	%f443, %f439, %f643, %f441;
	mul.f32 	%f444, %f443, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f445, %f444;
	add.f32 	%f446, %f439, 0f00000000;
	ex2.approx.f32 	%f447, %f446;
	mul.f32 	%f448, %f445, %f447;
	setp.lt.f32	%p63, %f437, 0fC2D20000;
	selp.f32	%f449, 0f00000000, %f448, %p63;
	setp.gt.f32	%p64, %f437, 0f42D20000;
	selp.f32	%f704, 0f7F800000, %f449, %p64;
	setp.eq.f32	%p65, %f704, 0f7F800000;
	@%p65 bra 	BB0_70;

	fma.rn.f32 	%f704, %f704, %f109, %f704;

BB0_70:
	setp.lt.f32	%p66, %f92, 0f00000000;
	and.pred  	%p2, %p66, %p51;
	mov.b32 	 %r236, %f704;
	xor.b32  	%r237, %r236, -2147483648;
	mov.b32 	 %f450, %r237;
	selp.f32	%f706, %f450, %f704, %p2;
	setp.eq.f32	%p68, %f92, 0f00000000;
	@%p68 bra 	BB0_73;
	bra.uni 	BB0_71;

BB0_73:
	add.f32 	%f453, %f92, %f92;
	selp.f32	%f706, %f453, 0f00000000, %p51;
	bra.uni 	BB0_74;

BB0_71:
	setp.geu.f32	%p69, %f92, 0f00000000;
	@%p69 bra 	BB0_74;

	mov.f32 	%f654, 0f3EE66666;
	cvt.rzi.f32.f32	%f452, %f654;
	setp.neu.f32	%p70, %f452, 0f3EE66666;
	selp.f32	%f706, 0f7FFFFFFF, %f706, %p70;

BB0_74:
	abs.f32 	%f658, %f92;
	add.f32 	%f454, %f658, 0f3EE66666;
	mov.b32 	 %r238, %f454;
	setp.lt.s32	%p72, %r238, 2139095040;
	@%p72 bra 	BB0_79;

	abs.f32 	%f659, %f92;
	setp.gtu.f32	%p73, %f659, 0f7F800000;
	@%p73 bra 	BB0_78;
	bra.uni 	BB0_76;

BB0_78:
	add.f32 	%f706, %f92, 0f3EE66666;
	bra.uni 	BB0_79;

BB0_76:
	abs.f32 	%f660, %f92;
	setp.neu.f32	%p74, %f660, 0f7F800000;
	@%p74 bra 	BB0_79;

	selp.f32	%f706, 0fFF800000, 0f7F800000, %p2;

BB0_79:
	mov.f32 	%f652, 0fB5BFBE8E;
	mov.f32 	%f651, 0fBF317200;
	mov.f32 	%f650, 0f00000000;
	mov.f32 	%f649, 0f35BFBE8E;
	mov.f32 	%f648, 0f3F317200;
	mov.f32 	%f647, 0f3DAAAABD;
	mov.f32 	%f646, 0f3C4CAF63;
	mov.f32 	%f645, 0f3B18F0FE;
	mov.f32 	%f644, 0f3EE66666;
	setp.eq.f32	%p75, %f92, 0f3F800000;
	selp.f32	%f120, 0f3F800000, %f706, %p75;
	abs.f32 	%f121, %f93;
	setp.lt.f32	%p76, %f121, 0f00800000;
	mul.f32 	%f457, %f121, 0f4B800000;
	selp.f32	%f458, 0fC3170000, 0fC2FE0000, %p76;
	selp.f32	%f459, %f457, %f121, %p76;
	mov.b32 	 %r239, %f459;
	and.b32  	%r240, %r239, 8388607;
	or.b32  	%r241, %r240, 1065353216;
	mov.b32 	 %f460, %r241;
	shr.u32 	%r242, %r239, 23;
	cvt.rn.f32.u32	%f461, %r242;
	add.f32 	%f462, %f458, %f461;
	setp.gt.f32	%p77, %f460, 0f3FB504F3;
	mul.f32 	%f463, %f460, 0f3F000000;
	add.f32 	%f464, %f462, 0f3F800000;
	selp.f32	%f465, %f463, %f460, %p77;
	selp.f32	%f466, %f464, %f462, %p77;
	add.f32 	%f467, %f465, 0fBF800000;
	add.f32 	%f456, %f465, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f455,%f456;
	// inline asm
	add.f32 	%f468, %f467, %f467;
	mul.f32 	%f469, %f455, %f468;
	mul.f32 	%f470, %f469, %f469;
	fma.rn.f32 	%f473, %f645, %f470, %f646;
	fma.rn.f32 	%f475, %f473, %f470, %f647;
	mul.rn.f32 	%f476, %f475, %f470;
	mul.rn.f32 	%f477, %f476, %f469;
	sub.f32 	%f478, %f467, %f469;
	neg.f32 	%f479, %f469;
	add.f32 	%f480, %f478, %f478;
	fma.rn.f32 	%f481, %f479, %f467, %f480;
	mul.rn.f32 	%f482, %f455, %f481;
	add.f32 	%f483, %f477, %f469;
	sub.f32 	%f484, %f469, %f483;
	add.f32 	%f485, %f477, %f484;
	add.f32 	%f486, %f482, %f485;
	add.f32 	%f487, %f483, %f486;
	sub.f32 	%f488, %f483, %f487;
	add.f32 	%f489, %f486, %f488;
	mul.rn.f32 	%f491, %f466, %f648;
	mul.rn.f32 	%f493, %f466, %f649;
	add.f32 	%f494, %f491, %f487;
	sub.f32 	%f495, %f491, %f494;
	add.f32 	%f496, %f487, %f495;
	add.f32 	%f497, %f489, %f496;
	add.f32 	%f498, %f493, %f497;
	add.f32 	%f499, %f494, %f498;
	sub.f32 	%f500, %f494, %f499;
	add.f32 	%f501, %f498, %f500;
	mul.rn.f32 	%f503, %f644, %f499;
	neg.f32 	%f504, %f503;
	fma.rn.f32 	%f505, %f644, %f499, %f504;
	fma.rn.f32 	%f506, %f644, %f501, %f505;
	fma.rn.f32 	%f508, %f650, %f499, %f506;
	add.rn.f32 	%f509, %f503, %f508;
	neg.f32 	%f510, %f509;
	add.rn.f32 	%f511, %f503, %f510;
	add.rn.f32 	%f512, %f511, %f508;
	mov.b32 	 %r243, %f509;
	setp.eq.s32	%p78, %r243, 1118925336;
	add.s32 	%r244, %r243, -1;
	mov.b32 	 %f513, %r244;
	add.f32 	%f514, %f512, 0f37000000;
	selp.f32	%f515, %f513, %f509, %p78;
	selp.f32	%f122, %f514, %f512, %p78;
	mul.f32 	%f516, %f515, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f517, %f516;
	fma.rn.f32 	%f519, %f517, %f651, %f515;
	fma.rn.f32 	%f521, %f517, %f652, %f519;
	mul.f32 	%f522, %f521, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f523, %f522;
	add.f32 	%f524, %f517, 0f00000000;
	ex2.approx.f32 	%f525, %f524;
	mul.f32 	%f526, %f523, %f525;
	setp.lt.f32	%p79, %f515, 0fC2D20000;
	selp.f32	%f527, 0f00000000, %f526, %p79;
	setp.gt.f32	%p80, %f515, 0f42D20000;
	selp.f32	%f707, 0f7F800000, %f527, %p80;
	setp.eq.f32	%p81, %f707, 0f7F800000;
	@%p81 bra 	BB0_81;

	fma.rn.f32 	%f707, %f707, %f122, %f707;

BB0_81:
	setp.lt.f32	%p82, %f93, 0f00000000;
	and.pred  	%p3, %p82, %p51;
	mov.b32 	 %r245, %f707;
	xor.b32  	%r246, %r245, -2147483648;
	mov.b32 	 %f528, %r246;
	selp.f32	%f709, %f528, %f707, %p3;
	setp.eq.f32	%p84, %f93, 0f00000000;
	@%p84 bra 	BB0_84;
	bra.uni 	BB0_82;

BB0_84:
	add.f32 	%f531, %f93, %f93;
	selp.f32	%f709, %f531, 0f00000000, %p51;
	bra.uni 	BB0_85;

BB0_82:
	setp.geu.f32	%p85, %f93, 0f00000000;
	@%p85 bra 	BB0_85;

	mov.f32 	%f653, 0f3EE66666;
	cvt.rzi.f32.f32	%f530, %f653;
	setp.neu.f32	%p86, %f530, 0f3EE66666;
	selp.f32	%f709, 0f7FFFFFFF, %f709, %p86;

BB0_85:
	abs.f32 	%f661, %f93;
	add.f32 	%f532, %f661, 0f3EE66666;
	mov.b32 	 %r247, %f532;
	setp.lt.s32	%p88, %r247, 2139095040;
	@%p88 bra 	BB0_90;

	abs.f32 	%f662, %f93;
	setp.gtu.f32	%p89, %f662, 0f7F800000;
	@%p89 bra 	BB0_89;
	bra.uni 	BB0_87;

BB0_89:
	add.f32 	%f709, %f93, 0f3EE66666;
	bra.uni 	BB0_90;

BB0_87:
	abs.f32 	%f663, %f93;
	setp.neu.f32	%p90, %f663, 0f7F800000;
	@%p90 bra 	BB0_90;

	selp.f32	%f709, 0fFF800000, 0f7F800000, %p3;

BB0_90:
	mov.u32 	%r328, 4;
	setp.eq.f32	%p91, %f93, 0f3F800000;
	selp.f32	%f533, 0f3F800000, %f709, %p91;
	cvt.u64.u32	%rd66, %r4;
	cvt.u64.u32	%rd65, %r3;
	mov.u64 	%rd69, image;
	cvta.global.u64 	%rd64, %rd69;
	// inline asm
	call (%rd63), _rt_buffer_get_64, (%rd64, %r91, %r328, %rd65, %rd66, %rd25, %rd25);
	// inline asm
	cvt.sat.f32.f32	%f534, %f533;
	mul.f32 	%f535, %f534, 0f437FFD71;
	cvt.rzi.u32.f32	%r250, %f535;
	cvt.sat.f32.f32	%f536, %f120;
	mul.f32 	%f537, %f536, 0f437FFD71;
	cvt.rzi.u32.f32	%r251, %f537;
	cvt.sat.f32.f32	%f538, %f107;
	mul.f32 	%f539, %f538, 0f437FFD71;
	cvt.rzi.u32.f32	%r252, %f539;
	cvt.u16.u32	%rs14, %r250;
	cvt.u16.u32	%rs15, %r252;
	cvt.u16.u32	%rs16, %r251;
	mov.u16 	%rs17, 255;
	st.v4.u8 	[%rd63], {%rs14, %rs16, %rs15, %rs17};
	ld.global.u32 	%r353, [imageEnabled];

BB0_91:
	cvt.u64.u32	%rd16, %r3;
	cvt.u64.u32	%rd17, %r4;
	and.b32  	%r253, %r353, 4;
	setp.eq.s32	%p92, %r253, 0;
	@%p92 bra 	BB0_95;

	ld.global.u32 	%r254, [additive];
	setp.eq.s32	%p93, %r254, 0;
	mov.f32 	%f540, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs18, %f540;}

	// inline asm
	@%p93 bra 	BB0_94;

	mov.u64 	%rd82, image_HDR;
	cvta.global.u64 	%rd71, %rd82;
	mov.u32 	%r258, 8;
	// inline asm
	call (%rd70), _rt_buffer_get_64, (%rd71, %r91, %r258, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs25, %rs26, %rs27, %rs28}, [%rd70];
	// inline asm
	{  cvt.f32.f16 %f541, %rs25;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f542, %rs26;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f543, %rs27;}

	// inline asm
	// inline asm
	call (%rd76), _rt_buffer_get_64, (%rd71, %r91, %r258, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f544, %f91, %f541;
	add.f32 	%f545, %f92, %f542;
	add.f32 	%f546, %f93, %f543;
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f546;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f545;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f544;}

	// inline asm
	st.v4.u16 	[%rd76], {%rs22, %rs23, %rs24, %rs18};
	bra.uni 	BB0_95;

BB0_94:
	mov.u64 	%rd89, image_HDR;
	cvta.global.u64 	%rd84, %rd89;
	mov.u32 	%r260, 8;
	// inline asm
	call (%rd83), _rt_buffer_get_64, (%rd84, %r91, %r260, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs31, %f93;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f92;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f91;}

	// inline asm
	st.v4.u16 	[%rd83], {%rs29, %rs30, %rs31, %rs18};

BB0_95:
	mul.f32 	%f133, %f87, 0f3F000000;
	ld.global.f32 	%f551, [skyColor];
	mul.f32 	%f134, %f133, %f551;
	ld.global.f32 	%f552, [skyColor+4];
	mul.f32 	%f135, %f133, %f552;
	ld.global.f32 	%f553, [skyColor+8];
	mul.f32 	%f136, %f133, %f553;
	ld.global.u32 	%r261, [additive];
	setp.eq.s32	%p94, %r261, 0;
	mov.f32 	%f550, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f550;}

	// inline asm
	@%p94 bra 	BB0_97;

	mov.u64 	%rd102, image_RNM0;
	cvta.global.u64 	%rd91, %rd102;
	mov.u32 	%r265, 8;
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd91, %r91, %r265, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs39, %rs40, %rs41, %rs42}, [%rd90];
	// inline asm
	{  cvt.f32.f16 %f554, %rs39;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f555, %rs40;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f556, %rs41;}

	// inline asm
	// inline asm
	call (%rd96), _rt_buffer_get_64, (%rd91, %r91, %r265, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f557, %f134, %f554;
	add.f32 	%f558, %f135, %f555;
	add.f32 	%f559, %f136, %f556;
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f559;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f558;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs36, %f557;}

	// inline asm
	st.v4.u16 	[%rd96], {%rs36, %rs37, %rs38, %rs32};
	bra.uni 	BB0_98;

BB0_97:
	mov.u64 	%rd109, image_RNM0;
	cvta.global.u64 	%rd104, %rd109;
	mov.u32 	%r267, 8;
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd104, %r91, %r267, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f136;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f135;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs43, %f134;}

	// inline asm
	st.v4.u16 	[%rd103], {%rs43, %rs44, %rs45, %rs32};

BB0_98:
	mov.f32 	%f564, 0f34000000;
	max.f32 	%f565, %f133, %f564;
	mul.f32 	%f566, %f88, 0f3F000000;
	div.rn.f32 	%f567, %f566, %f565;
	fma.rn.f32 	%f137, %f567, 0f3F000000, 0f3F000000;
	mul.f32 	%f568, %f89, 0f3F000000;
	div.rn.f32 	%f569, %f568, %f565;
	fma.rn.f32 	%f138, %f569, 0f3F000000, 0f3F000000;
	mul.f32 	%f570, %f90, 0f3F000000;
	div.rn.f32 	%f571, %f570, %f565;
	fma.rn.f32 	%f139, %f571, 0f3F000000, 0f3F000000;
	ld.global.u32 	%r268, [additive];
	setp.eq.s32	%p95, %r268, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f550;}

	// inline asm
	@%p95 bra 	BB0_100;

	mov.u64 	%rd122, image_RNM1;
	cvta.global.u64 	%rd111, %rd122;
	mov.u32 	%r272, 8;
	// inline asm
	call (%rd110), _rt_buffer_get_64, (%rd111, %r91, %r272, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs53, %rs54, %rs55, %rs56}, [%rd110];
	// inline asm
	{  cvt.f32.f16 %f572, %rs53;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f573, %rs54;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f574, %rs55;}

	// inline asm
	// inline asm
	call (%rd116), _rt_buffer_get_64, (%rd111, %r91, %r272, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f575, %f137, %f572;
	add.f32 	%f576, %f137, %f573;
	add.f32 	%f577, %f137, %f574;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f577;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f576;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f575;}

	// inline asm
	st.v4.u16 	[%rd116], {%rs50, %rs51, %rs52, %rs46};
	bra.uni 	BB0_101;

BB0_100:
	mov.u64 	%rd129, image_RNM1;
	cvta.global.u64 	%rd124, %rd129;
	mov.u32 	%r274, 8;
	// inline asm
	call (%rd123), _rt_buffer_get_64, (%rd124, %r91, %r274, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f137;}

	// inline asm
	st.v4.u16 	[%rd123], {%rs57, %rs57, %rs57, %rs46};

BB0_101:
	ld.global.u32 	%r275, [additive];
	setp.eq.s32	%p96, %r275, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f550;}

	// inline asm
	@%p96 bra 	BB0_103;

	mov.u64 	%rd142, image_RNM2;
	cvta.global.u64 	%rd131, %rd142;
	mov.u32 	%r279, 8;
	// inline asm
	call (%rd130), _rt_buffer_get_64, (%rd131, %r91, %r279, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs65, %rs66, %rs67, %rs68}, [%rd130];
	// inline asm
	{  cvt.f32.f16 %f580, %rs65;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f581, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f582, %rs67;}

	// inline asm
	// inline asm
	call (%rd136), _rt_buffer_get_64, (%rd131, %r91, %r279, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f583, %f138, %f580;
	add.f32 	%f584, %f138, %f581;
	add.f32 	%f585, %f138, %f582;
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f585;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f584;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f583;}

	// inline asm
	st.v4.u16 	[%rd136], {%rs62, %rs63, %rs64, %rs58};
	bra.uni 	BB0_104;

BB0_103:
	mov.u64 	%rd149, image_RNM2;
	cvta.global.u64 	%rd144, %rd149;
	mov.u32 	%r281, 8;
	// inline asm
	call (%rd143), _rt_buffer_get_64, (%rd144, %r91, %r281, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f138;}

	// inline asm
	st.v4.u16 	[%rd143], {%rs69, %rs69, %rs69, %rs58};

BB0_104:
	ld.global.u32 	%r282, [additive];
	setp.eq.s32	%p97, %r282, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f550;}

	// inline asm
	@%p97 bra 	BB0_106;

	mov.u64 	%rd162, image_RNM3;
	cvta.global.u64 	%rd151, %rd162;
	mov.u32 	%r286, 8;
	// inline asm
	call (%rd150), _rt_buffer_get_64, (%rd151, %r91, %r286, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs77, %rs78, %rs79, %rs80}, [%rd150];
	// inline asm
	{  cvt.f32.f16 %f588, %rs77;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f589, %rs78;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f590, %rs79;}

	// inline asm
	// inline asm
	call (%rd156), _rt_buffer_get_64, (%rd151, %r91, %r286, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f591, %f139, %f588;
	add.f32 	%f592, %f139, %f589;
	add.f32 	%f593, %f139, %f590;
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f593;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs75, %f592;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f591;}

	// inline asm
	st.v4.u16 	[%rd156], {%rs74, %rs75, %rs76, %rs70};
	bra.uni 	BB0_125;

BB0_106:
	mov.u64 	%rd169, image_RNM3;
	cvta.global.u64 	%rd164, %rd169;
	mov.u32 	%r288, 8;
	// inline asm
	call (%rd163), _rt_buffer_get_64, (%rd164, %r91, %r288, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f139;}

	// inline asm
	st.v4.u16 	[%rd163], {%rs81, %rs81, %rs81, %rs70};

BB0_125:
	ret;
}


