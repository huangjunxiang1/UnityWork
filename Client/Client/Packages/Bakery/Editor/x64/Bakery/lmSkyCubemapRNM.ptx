//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 sky;
.global .align 4 .b8 skyColor[12];
.global .align 4 .u32 samples;
.global .align 4 .u32 hemispherical;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3skyE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8skyColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13hemisphericalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename3skyE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8skyColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13hemisphericalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3skyE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8skyColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13hemisphericalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3skyE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8skyColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13hemisphericalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3skyE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8skyColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13hemisphericalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<113>;
	.reg .b16 	%rs<153>;
	.reg .f32 	%f<995>;
	.reg .b32 	%r<406>;
	.reg .b64 	%rd<285>;


	mov.u64 	%rd284, __local_depot0;
	cvta.local.u64 	%SP, %rd284;
	ld.global.u32 	%r1, [samples];
	ld.global.v2.u32 	{%r99, %r100}, [pixelID];
	cvt.u64.u32	%rd24, %r99;
	cvt.u64.u32	%rd25, %r100;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r97, 2;
	mov.u32 	%r98, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r97, %r98, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r2, [%rd22];
	shr.u32 	%r103, %r2, 16;
	cvt.u16.u32	%rs1, %r103;
	and.b16  	%rs6, %rs1, 255;
	cvt.u16.u32	%rs7, %r2;
	or.b16  	%rs8, %rs7, %rs6;
	setp.eq.s16	%p4, %rs8, 0;
	mov.f32 	%f914, 0f00000000;
	mov.f32 	%f915, %f914;
	mov.f32 	%f916, %f914;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs9, [%rd22+1];
	and.b16  	%rs11, %rs7, 255;
	cvt.rn.f32.u16	%f215, %rs11;
	div.rn.f32 	%f216, %f215, 0f437F0000;
	fma.rn.f32 	%f217, %f216, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f218, %rs9;
	div.rn.f32 	%f219, %f218, 0f437F0000;
	fma.rn.f32 	%f220, %f219, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f221, %rs6;
	div.rn.f32 	%f222, %f221, 0f437F0000;
	fma.rn.f32 	%f223, %f222, 0f40000000, 0fBF800000;
	mul.f32 	%f224, %f220, %f220;
	fma.rn.f32 	%f225, %f217, %f217, %f224;
	fma.rn.f32 	%f226, %f223, %f223, %f225;
	sqrt.rn.f32 	%f227, %f226;
	rcp.rn.f32 	%f228, %f227;
	mul.f32 	%f914, %f217, %f228;
	mul.f32 	%f915, %f220, %f228;
	mul.f32 	%f916, %f223, %f228;

BB0_2:
	ld.global.v2.u32 	{%r104, %r105}, [pixelID];
	ld.global.v2.u32 	{%r107, %r108}, [tileInfo];
	add.s32 	%r3, %r104, %r107;
	add.s32 	%r4, %r105, %r108;
	setp.eq.f32	%p5, %f915, 0f00000000;
	setp.eq.f32	%p6, %f914, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f916, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_110;
	bra.uni 	BB0_3;

BB0_110:
	ld.global.u32 	%r405, [imageEnabled];
	and.b32  	%r308, %r405, 1;
	setp.eq.b32	%p106, %r308, 1;
	@!%p106 bra 	BB0_112;
	bra.uni 	BB0_111;

BB0_111:
	cvt.u64.u32	%rd176, %r4;
	cvt.u64.u32	%rd175, %r3;
	mov.u64 	%rd179, image;
	cvta.global.u64 	%rd174, %rd179;
	mov.u64 	%rd178, 0;
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd174, %r97, %r98, %rd175, %rd176, %rd178, %rd178);
	// inline asm
	mov.u16 	%rs100, 0;
	st.v4.u8 	[%rd173], {%rs100, %rs100, %rs100, %rs100};
	ld.global.u32 	%r405, [imageEnabled];

BB0_112:
	cvt.u64.u32	%rd20, %r3;
	cvt.u64.u32	%rd21, %r4;
	and.b32  	%r311, %r405, 4;
	setp.eq.s32	%p107, %r311, 0;
	@%p107 bra 	BB0_116;

	ld.global.u32 	%r312, [additive];
	setp.eq.s32	%p108, %r312, 0;
	@%p108 bra 	BB0_115;

	mov.u64 	%rd192, image_HDR;
	cvta.global.u64 	%rd181, %rd192;
	mov.u32 	%r316, 8;
	mov.u64 	%rd191, 0;
	// inline asm
	call (%rd180), _rt_buffer_get_64, (%rd181, %r97, %r316, %rd20, %rd21, %rd191, %rd191);
	// inline asm
	ld.v4.u16 	{%rs107, %rs108, %rs109, %rs110}, [%rd180];
	// inline asm
	{  cvt.f32.f16 %f824, %rs107;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f825, %rs108;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f826, %rs109;}

	// inline asm
	// inline asm
	call (%rd186), _rt_buffer_get_64, (%rd181, %r97, %r316, %rd20, %rd21, %rd191, %rd191);
	// inline asm
	add.f32 	%f827, %f824, 0f00000000;
	add.f32 	%f828, %f825, 0f00000000;
	add.f32 	%f829, %f826, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs106, %f829;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs105, %f828;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f827;}

	// inline asm
	mov.u16 	%rs111, 0;
	st.v4.u16 	[%rd186], {%rs104, %rs105, %rs106, %rs111};
	bra.uni 	BB0_116;

BB0_3:
	ld.global.v2.u32 	{%r118, %r119}, [pixelID];
	cvt.u64.u32	%rd31, %r118;
	cvt.u64.u32	%rd32, %r119;
	mov.u64 	%rd47, uvpos;
	cvta.global.u64 	%rd30, %rd47;
	mov.u32 	%r113, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r97, %r113, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f232, [%rd29+8];
	ld.f32 	%f233, [%rd29+4];
	ld.f32 	%f234, [%rd29];
	mul.f32 	%f235, %f234, 0f3456BF95;
	mul.f32 	%f236, %f233, 0f3456BF95;
	mul.f32 	%f237, %f232, 0f3456BF95;
	abs.f32 	%f238, %f914;
	div.rn.f32 	%f239, %f235, %f238;
	abs.f32 	%f240, %f915;
	div.rn.f32 	%f241, %f236, %f240;
	abs.f32 	%f242, %f916;
	div.rn.f32 	%f243, %f237, %f242;
	abs.f32 	%f244, %f239;
	abs.f32 	%f245, %f241;
	abs.f32 	%f246, %f243;
	mov.f32 	%f247, 0f38D1B717;
	max.f32 	%f248, %f244, %f247;
	max.f32 	%f249, %f245, %f247;
	max.f32 	%f250, %f246, %f247;
	fma.rn.f32 	%f7, %f914, %f248, %f234;
	fma.rn.f32 	%f8, %f915, %f249, %f233;
	fma.rn.f32 	%f9, %f916, %f250, %f232;
	ld.global.u32 	%r5, [hemispherical];
	setp.gt.f32	%p10, %f238, %f242;
	neg.f32 	%f251, %f915;
	selp.f32	%f252, %f251, 0f00000000, %p10;
	neg.f32 	%f253, %f916;
	selp.f32	%f254, %f914, %f253, %p10;
	selp.f32	%f255, 0f00000000, %f915, %p10;
	mul.f32 	%f256, %f254, %f254;
	fma.rn.f32 	%f257, %f252, %f252, %f256;
	fma.rn.f32 	%f258, %f255, %f255, %f257;
	sqrt.rn.f32 	%f259, %f258;
	rcp.rn.f32 	%f260, %f259;
	mul.f32 	%f10, %f252, %f260;
	mul.f32 	%f11, %f254, %f260;
	mul.f32 	%f12, %f255, %f260;
	ld.global.v2.u32 	{%r122, %r123}, [pixelID];
	cvt.u64.u32	%rd37, %r122;
	cvt.u64.u32	%rd38, %r123;
	mov.u64 	%rd48, rnd_seeds;
	cvta.global.u64 	%rd36, %rd48;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r97, %r98, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.u32 	%r383, [%rd35];
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd43, %r126;
	cvt.u64.u32	%rd44, %r127;
	mov.u64 	%rd49, uvtangent;
	cvta.global.u64 	%rd42, %rd49;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd42, %r97, %r98, %rd43, %rd44, %rd27, %rd27);
	// inline asm
	ld.u32 	%r7, [%rd41];
	shr.u32 	%r8, %r7, 16;
	cvt.u16.u32	%rs13, %r8;
	and.b16  	%rs14, %rs13, 255;
	cvt.u16.u32	%rs15, %r7;
	or.b16  	%rs16, %rs15, %rs14;
	setp.eq.s16	%p11, %rs16, 0;
	mov.f32 	%f917, 0f00000000;
	mov.f32 	%f918, %f917;
	mov.f32 	%f919, %f917;
	@%p11 bra 	BB0_5;

	ld.u8 	%rs17, [%rd41+1];
	and.b16  	%rs19, %rs15, 255;
	cvt.rn.f32.u16	%f261, %rs19;
	div.rn.f32 	%f262, %f261, 0f437F0000;
	fma.rn.f32 	%f263, %f262, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f264, %rs17;
	div.rn.f32 	%f265, %f264, 0f437F0000;
	fma.rn.f32 	%f266, %f265, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f267, %rs14;
	div.rn.f32 	%f268, %f267, 0f437F0000;
	fma.rn.f32 	%f269, %f268, 0f40000000, 0fBF800000;
	mul.f32 	%f270, %f266, %f266;
	fma.rn.f32 	%f271, %f263, %f263, %f270;
	fma.rn.f32 	%f272, %f269, %f269, %f271;
	sqrt.rn.f32 	%f273, %f272;
	rcp.rn.f32 	%f274, %f273;
	mul.f32 	%f917, %f263, %f274;
	mul.f32 	%f918, %f266, %f274;
	mul.f32 	%f919, %f269, %f274;

BB0_5:
	mov.f32 	%f920, 0f00000000;
	mov.u32 	%r377, 4;
	mov.u64 	%rd276, 0;
	mov.u32 	%r376, 2;
	mul.f32 	%f278, %f916, %f918;
	mul.f32 	%f279, %f915, %f919;
	sub.f32 	%f280, %f279, %f278;
	mul.f32 	%f281, %f914, %f919;
	mul.f32 	%f282, %f916, %f917;
	sub.f32 	%f283, %f282, %f281;
	mul.f32 	%f284, %f915, %f917;
	mul.f32 	%f285, %f914, %f918;
	sub.f32 	%f286, %f285, %f284;
	setp.lt.u32	%p12, %r7, 16777216;
	selp.f32	%f287, 0fBF800000, 0f3F800000, %p12;
	mul.f32 	%f288, %f280, %f287;
	mul.f32 	%f289, %f283, %f287;
	mul.f32 	%f290, %f286, %f287;
	mul.f32 	%f291, %f288, 0f00000000;
	mul.f32 	%f292, %f289, 0f00000000;
	mul.f32 	%f293, %f290, 0f00000000;
	fma.rn.f32 	%f294, %f917, 0f3F5105EC, %f291;
	fma.rn.f32 	%f295, %f918, 0f3F5105EC, %f292;
	fma.rn.f32 	%f296, %f919, 0f3F5105EC, %f293;
	mul.f32 	%f19, %f914, 0f3F13CD3A;
	add.f32 	%f20, %f19, %f294;
	mul.f32 	%f21, %f915, 0f3F13CD3A;
	add.f32 	%f22, %f21, %f295;
	mul.f32 	%f23, %f916, 0f3F13CD3A;
	add.f32 	%f24, %f23, %f296;
	ld.global.v2.u32 	{%r132, %r133}, [pixelID];
	cvt.u64.u32	%rd52, %r132;
	cvt.u64.u32	%rd53, %r133;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd42, %r376, %r377, %rd52, %rd53, %rd276, %rd276);
	// inline asm
	ld.u32 	%r9, [%rd50];
	shr.u32 	%r10, %r9, 16;
	cvt.u16.u32	%rs22, %r10;
	and.b16  	%rs23, %rs22, 255;
	cvt.u16.u32	%rs24, %r9;
	or.b16  	%rs25, %rs24, %rs23;
	setp.eq.s16	%p13, %rs25, 0;
	mov.f32 	%f921, %f920;
	mov.f32 	%f922, %f920;
	@%p13 bra 	BB0_7;

	ld.u8 	%rs26, [%rd50+1];
	and.b16  	%rs28, %rs24, 255;
	cvt.rn.f32.u16	%f297, %rs28;
	div.rn.f32 	%f298, %f297, 0f437F0000;
	fma.rn.f32 	%f299, %f298, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f300, %rs26;
	div.rn.f32 	%f301, %f300, 0f437F0000;
	fma.rn.f32 	%f302, %f301, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f303, %rs23;
	div.rn.f32 	%f304, %f303, 0f437F0000;
	fma.rn.f32 	%f305, %f304, 0f40000000, 0fBF800000;
	mul.f32 	%f306, %f302, %f302;
	fma.rn.f32 	%f307, %f299, %f299, %f306;
	fma.rn.f32 	%f308, %f305, %f305, %f307;
	sqrt.rn.f32 	%f309, %f308;
	rcp.rn.f32 	%f310, %f309;
	mul.f32 	%f920, %f299, %f310;
	mul.f32 	%f921, %f302, %f310;
	mul.f32 	%f922, %f305, %f310;

BB0_7:
	mul.f32 	%f910, %f915, 0f3F13CD3A;
	mul.f32 	%f909, %f914, 0f3F13CD3A;
	mov.u64 	%rd279, uvtangent;
	cvta.global.u64 	%rd278, %rd279;
	mov.f32 	%f923, 0f00000000;
	mov.u32 	%r379, 4;
	mov.u64 	%rd277, 0;
	mov.u32 	%r378, 2;
	mul.f32 	%f314, %f916, %f921;
	mul.f32 	%f315, %f915, %f922;
	sub.f32 	%f316, %f315, %f314;
	mul.f32 	%f317, %f914, %f922;
	mul.f32 	%f318, %f916, %f920;
	sub.f32 	%f319, %f318, %f317;
	mul.f32 	%f320, %f915, %f920;
	mul.f32 	%f321, %f914, %f921;
	sub.f32 	%f322, %f321, %f320;
	setp.lt.u32	%p14, %r9, 16777216;
	selp.f32	%f323, 0fBF800000, 0f3F800000, %p14;
	mul.f32 	%f324, %f316, %f323;
	mul.f32 	%f325, %f319, %f323;
	mul.f32 	%f326, %f322, %f323;
	mul.f32 	%f327, %f324, 0f3F3504F3;
	mul.f32 	%f328, %f325, 0f3F3504F3;
	mul.f32 	%f329, %f326, 0f3F3504F3;
	fma.rn.f32 	%f330, %f920, 0fBED105EC, %f327;
	fma.rn.f32 	%f331, %f921, 0fBED105EC, %f328;
	fma.rn.f32 	%f332, %f922, 0fBED105EC, %f329;
	add.f32 	%f31, %f909, %f330;
	add.f32 	%f32, %f910, %f331;
	add.f32 	%f33, %f23, %f332;
	ld.global.v2.u32 	{%r138, %r139}, [pixelID];
	cvt.u64.u32	%rd59, %r138;
	cvt.u64.u32	%rd60, %r139;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd278, %r378, %r379, %rd59, %rd60, %rd277, %rd277);
	// inline asm
	ld.u32 	%r11, [%rd57];
	shr.u32 	%r12, %r11, 16;
	cvt.u16.u32	%rs31, %r12;
	and.b16  	%rs32, %rs31, 255;
	cvt.u16.u32	%rs33, %r11;
	or.b16  	%rs34, %rs33, %rs32;
	setp.eq.s16	%p15, %rs34, 0;
	mov.f32 	%f924, %f923;
	mov.f32 	%f925, %f923;
	@%p15 bra 	BB0_9;

	ld.u8 	%rs35, [%rd57+1];
	and.b16  	%rs37, %rs33, 255;
	cvt.rn.f32.u16	%f333, %rs37;
	div.rn.f32 	%f334, %f333, 0f437F0000;
	fma.rn.f32 	%f335, %f334, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f336, %rs35;
	div.rn.f32 	%f337, %f336, 0f437F0000;
	fma.rn.f32 	%f338, %f337, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f339, %rs32;
	div.rn.f32 	%f340, %f339, 0f437F0000;
	fma.rn.f32 	%f341, %f340, 0f40000000, 0fBF800000;
	mul.f32 	%f342, %f338, %f338;
	fma.rn.f32 	%f343, %f335, %f335, %f342;
	fma.rn.f32 	%f344, %f341, %f341, %f343;
	sqrt.rn.f32 	%f345, %f344;
	rcp.rn.f32 	%f346, %f345;
	mul.f32 	%f923, %f335, %f346;
	mul.f32 	%f924, %f338, %f346;
	mul.f32 	%f925, %f341, %f346;

BB0_9:
	mul.f32 	%f913, %f916, 0f3F13CD3A;
	mul.f32 	%f912, %f915, 0f3F13CD3A;
	mul.f32 	%f911, %f914, 0f3F13CD3A;
	mov.f32 	%f973, 0f00000000;
	mul.f32 	%f359, %f916, %f924;
	mul.f32 	%f360, %f915, %f925;
	sub.f32 	%f361, %f360, %f359;
	mul.f32 	%f362, %f914, %f925;
	mul.f32 	%f363, %f916, %f923;
	sub.f32 	%f364, %f363, %f362;
	mul.f32 	%f365, %f915, %f923;
	mul.f32 	%f366, %f914, %f924;
	sub.f32 	%f367, %f366, %f365;
	setp.lt.u32	%p16, %r11, 16777216;
	selp.f32	%f368, 0fBF800000, 0f3F800000, %p16;
	mul.f32 	%f369, %f361, %f368;
	mul.f32 	%f370, %f364, %f368;
	mul.f32 	%f371, %f367, %f368;
	mul.f32 	%f372, %f369, 0fBF3504F3;
	mul.f32 	%f373, %f370, 0fBF3504F3;
	mul.f32 	%f374, %f371, 0fBF3504F3;
	fma.rn.f32 	%f375, %f923, 0fBED105EC, %f372;
	fma.rn.f32 	%f376, %f924, 0fBED105EC, %f373;
	fma.rn.f32 	%f377, %f925, 0fBED105EC, %f374;
	add.f32 	%f40, %f911, %f375;
	add.f32 	%f41, %f912, %f376;
	add.f32 	%f42, %f913, %f377;
	setp.lt.s32	%p17, %r1, 1;
	mov.f32 	%f972, %f973;
	mov.f32 	%f971, %f973;
	mov.f32 	%f970, %f973;
	mov.f32 	%f969, %f973;
	mov.f32 	%f968, %f973;
	mov.f32 	%f967, %f973;
	mov.f32 	%f966, %f973;
	mov.f32 	%f965, %f973;
	mov.f32 	%f964, %f973;
	mov.f32 	%f963, %f973;
	mov.f32 	%f962, %f973;
	@%p17 bra 	BB0_62;

	cvt.rn.f32.s32	%f390, %r1;
	rcp.rn.f32 	%f43, %f390;
	mul.f32 	%f44, %f7, 0f3456BF95;
	mul.f32 	%f45, %f8, 0f3456BF95;
	mul.f32 	%f46, %f9, 0f3456BF95;
	mul.f32 	%f391, %f916, %f11;
	mul.f32 	%f392, %f915, %f12;
	sub.f32 	%f47, %f391, %f392;
	mul.f32 	%f393, %f914, %f12;
	mul.f32 	%f394, %f916, %f10;
	sub.f32 	%f48, %f393, %f394;
	mul.f32 	%f395, %f915, %f10;
	mul.f32 	%f396, %f914, %f11;
	sub.f32 	%f49, %f395, %f396;
	mov.f32 	%f973, 0f00000000;
	mov.u32 	%r142, 0;
	abs.f32 	%f477, %f45;
	abs.f32 	%f478, %f44;
	max.f32 	%f479, %f478, %f477;
	abs.f32 	%f480, %f46;
	max.f32 	%f481, %f479, %f480;
	mov.u32 	%r380, %r142;
	mov.f32 	%f972, %f973;
	mov.f32 	%f971, %f973;
	mov.f32 	%f970, %f973;
	mov.f32 	%f969, %f973;
	mov.f32 	%f968, %f973;
	mov.f32 	%f967, %f973;
	mov.f32 	%f966, %f973;
	mov.f32 	%f965, %f973;
	mov.f32 	%f964, %f973;
	mov.f32 	%f963, %f973;
	mov.f32 	%f962, %f973;

BB0_11:
	mov.u32 	%r382, %r142;

BB0_12:
	mov.u32 	%r16, %r383;
	cvt.rn.f32.s32	%f860, %r380;
	mad.lo.s32 	%r144, %r16, 1664525, 1013904223;
	and.b32  	%r145, %r144, 16777215;
	cvt.rn.f32.u32	%f397, %r145;
	fma.rn.f32 	%f398, %f397, 0f33800000, %f860;
	mul.f32 	%f75, %f43, %f398;
	mad.lo.s32 	%r17, %r144, 1664525, 1013904223;
	and.b32  	%r146, %r17, 16777215;
	cvt.rn.f32.u32	%f399, %r146;
	cvt.rn.f32.s32	%f400, %r382;
	fma.rn.f32 	%f401, %f399, 0f33800000, %f400;
	mul.f32 	%f402, %f43, %f401;
	mul.f32 	%f403, %f75, %f75;
	mov.f32 	%f404, 0f3F800000;
	sub.f32 	%f405, %f404, %f403;
	mov.f32 	%f406, 0f00000000;
	max.f32 	%f407, %f406, %f405;
	sqrt.rn.f32 	%f76, %f407;
	mul.f32 	%f956, %f402, 0f40C90FDB;
	abs.f32 	%f78, %f956;
	setp.neu.f32	%p18, %f78, 0f7F800000;
	mov.f32 	%f950, %f956;
	@%p18 bra 	BB0_14;

	mov.f32 	%f861, 0f00000000;
	mul.rn.f32 	%f950, %f956, %f861;

BB0_14:
	mul.f32 	%f409, %f950, 0f3F22F983;
	cvt.rni.s32.f32	%r393, %f409;
	cvt.rn.f32.s32	%f410, %r393;
	neg.f32 	%f411, %f410;
	mov.f32 	%f412, 0f3FC90FDA;
	fma.rn.f32 	%f413, %f411, %f412, %f950;
	mov.f32 	%f414, 0f33A22168;
	fma.rn.f32 	%f415, %f411, %f414, %f413;
	mov.f32 	%f416, 0f27C234C5;
	fma.rn.f32 	%f951, %f411, %f416, %f415;
	abs.f32 	%f417, %f950;
	setp.leu.f32	%p19, %f417, 0f47CE4780;
	@%p19 bra 	BB0_25;

	add.u64 	%rd65, %SP, 12;
	cvta.to.local.u64 	%rd280, %rd65;
	mov.u32 	%r384, 0;
	mov.u64 	%rd281, 0;
	mov.u32 	%r385, %r384;

BB0_16:
	.pragma "nounroll";
	mov.b32 	 %r342, %f950;
	shl.b32 	%r341, %r342, 8;
	or.b32  	%r340, %r341, -2147483648;
	add.u64 	%rd261, %SP, 12;
	cvta.to.local.u64 	%rd260, %rd261;
	shl.b64 	%rd66, %rd281, 2;
	mov.u64 	%rd67, __cudart_i2opi_f;
	add.s64 	%rd68, %rd67, %rd66;
	ld.const.u32 	%r152, [%rd68];
	// inline asm
	{
	mad.lo.cc.u32   %r150, %r152, %r340, %r385;
	madc.hi.u32     %r385, %r152, %r340,  0;
	}
	// inline asm
	st.local.u32 	[%rd280], %r150;
	add.s32 	%r384, %r384, 1;
	cvt.s64.s32	%rd281, %r384;
	mul.wide.s32 	%rd71, %r384, 4;
	add.s64 	%rd280, %rd260, %rd71;
	setp.ne.s32	%p20, %r384, 6;
	@%p20 bra 	BB0_16;

	mov.b32 	 %r344, %f950;
	shr.u32 	%r343, %r344, 23;
	add.u64 	%rd262, %SP, 12;
	and.b32  	%r155, %r343, 255;
	add.s32 	%r156, %r155, -128;
	shr.u32 	%r157, %r156, 5;
	cvta.to.local.u64 	%rd73, %rd262;
	st.local.u32 	[%rd73+24], %r385;
	mov.u32 	%r158, 6;
	sub.s32 	%r159, %r158, %r157;
	mul.wide.s32 	%rd74, %r159, 4;
	add.s64 	%rd10, %rd73, %rd74;
	ld.local.u32 	%r386, [%rd10];
	ld.local.u32 	%r387, [%rd10+-4];
	and.b32  	%r29, %r343, 31;
	setp.eq.s32	%p21, %r29, 0;
	@%p21 bra 	BB0_19;

	mov.u32 	%r160, 32;
	sub.s32 	%r161, %r160, %r29;
	shr.u32 	%r162, %r387, %r161;
	shl.b32 	%r163, %r386, %r29;
	add.s32 	%r386, %r162, %r163;
	ld.local.u32 	%r164, [%rd10+-8];
	shr.u32 	%r165, %r164, %r161;
	shl.b32 	%r166, %r387, %r29;
	add.s32 	%r387, %r165, %r166;

BB0_19:
	mov.b32 	 %r352, %f950;
	and.b32  	%r389, %r352, -2147483648;
	shr.u32 	%r167, %r387, 30;
	shl.b32 	%r168, %r386, 2;
	add.s32 	%r388, %r167, %r168;
	shl.b32 	%r35, %r387, 2;
	shr.u32 	%r169, %r388, 31;
	shr.u32 	%r170, %r386, 30;
	add.s32 	%r36, %r169, %r170;
	setp.eq.s32	%p22, %r169, 0;
	@%p22 bra 	BB0_20;
	bra.uni 	BB0_21;

BB0_20:
	mov.u32 	%r390, %r35;
	bra.uni 	BB0_22;

BB0_21:
	mov.b32 	 %r354, %f950;
	and.b32  	%r353, %r354, -2147483648;
	not.b32 	%r171, %r388;
	neg.s32 	%r390, %r35;
	setp.eq.s32	%p23, %r35, 0;
	selp.u32	%r172, 1, 0, %p23;
	add.s32 	%r388, %r172, %r171;
	xor.b32  	%r389, %r353, -2147483648;

BB0_22:
	mov.b32 	 %r356, %f950;
	and.b32  	%r355, %r356, -2147483648;
	clz.b32 	%r392, %r388;
	setp.eq.s32	%p24, %r392, 0;
	shl.b32 	%r173, %r388, %r392;
	mov.u32 	%r174, 32;
	sub.s32 	%r175, %r174, %r392;
	shr.u32 	%r176, %r390, %r175;
	add.s32 	%r177, %r176, %r173;
	selp.b32	%r44, %r388, %r177, %p24;
	mov.u32 	%r178, -921707870;
	mul.hi.u32 	%r391, %r44, %r178;
	setp.eq.s32	%p25, %r355, 0;
	neg.s32 	%r179, %r36;
	selp.b32	%r393, %r36, %r179, %p25;
	setp.lt.s32	%p26, %r391, 1;
	@%p26 bra 	BB0_24;

	mul.lo.s32 	%r180, %r44, -921707870;
	shr.u32 	%r181, %r180, 31;
	shl.b32 	%r182, %r391, 1;
	add.s32 	%r391, %r181, %r182;
	add.s32 	%r392, %r392, 1;

BB0_24:
	mov.u32 	%r183, 126;
	sub.s32 	%r184, %r183, %r392;
	shl.b32 	%r185, %r184, 23;
	add.s32 	%r186, %r391, 1;
	shr.u32 	%r187, %r186, 7;
	add.s32 	%r188, %r187, 1;
	shr.u32 	%r189, %r188, 1;
	add.s32 	%r190, %r189, %r185;
	or.b32  	%r191, %r190, %r389;
	mov.b32 	 %f951, %r191;

BB0_25:
	add.s32 	%r52, %r393, 1;
	and.b32  	%r53, %r52, 1;
	setp.eq.s32	%p27, %r53, 0;
	@%p27 bra 	BB0_27;
	bra.uni 	BB0_26;

BB0_27:
	mul.rn.f32 	%f869, %f951, %f951;
	mov.f32 	%f420, 0f3C08839E;
	mov.f32 	%f421, 0fB94CA1F9;
	fma.rn.f32 	%f952, %f421, %f869, %f420;
	bra.uni 	BB0_28;

BB0_26:
	mul.rn.f32 	%f865, %f951, %f951;
	mov.f32 	%f418, 0fBAB6061A;
	mov.f32 	%f419, 0f37CCF5CE;
	fma.rn.f32 	%f952, %f419, %f865, %f418;

BB0_28:
	@%p27 bra 	BB0_30;
	bra.uni 	BB0_29;

BB0_30:
	mul.rn.f32 	%f868, %f951, %f951;
	mov.f32 	%f864, 0f00000000;
	mov.f32 	%f425, 0fBE2AAAA3;
	fma.rn.f32 	%f426, %f952, %f868, %f425;
	fma.rn.f32 	%f953, %f426, %f868, %f864;
	bra.uni 	BB0_31;

BB0_29:
	mul.rn.f32 	%f866, %f951, %f951;
	mov.f32 	%f422, 0f3D2AAAA5;
	fma.rn.f32 	%f423, %f952, %f866, %f422;
	mov.f32 	%f424, 0fBF000000;
	fma.rn.f32 	%f953, %f423, %f866, %f424;

BB0_31:
	fma.rn.f32 	%f954, %f953, %f951, %f951;
	@%p27 bra 	BB0_33;

	mul.rn.f32 	%f867, %f951, %f951;
	mov.f32 	%f852, 0f3F800000;
	fma.rn.f32 	%f954, %f953, %f867, %f852;

BB0_33:
	add.s32 	%r366, %r393, 1;
	and.b32  	%r192, %r366, 2;
	setp.eq.s32	%p30, %r192, 0;
	@%p30 bra 	BB0_35;

	mov.f32 	%f853, 0f00000000;
	mov.f32 	%f430, 0fBF800000;
	fma.rn.f32 	%f954, %f954, %f430, %f853;

BB0_35:
	abs.f32 	%f854, %f956;
	setp.neu.f32	%p112, %f854, 0f7F800000;
	@%p112 bra 	BB0_37;

	mov.f32 	%f863, 0f00000000;
	mul.rn.f32 	%f956, %f956, %f863;

BB0_37:
	mov.f32 	%f857, 0f27C234C5;
	mov.f32 	%f856, 0f33A22168;
	mov.f32 	%f855, 0f3FC90FDA;
	mul.f32 	%f432, %f956, 0f3F22F983;
	cvt.rni.s32.f32	%r403, %f432;
	cvt.rn.f32.s32	%f433, %r403;
	neg.f32 	%f434, %f433;
	fma.rn.f32 	%f436, %f434, %f855, %f956;
	fma.rn.f32 	%f438, %f434, %f856, %f436;
	fma.rn.f32 	%f957, %f434, %f857, %f438;
	abs.f32 	%f440, %f956;
	setp.leu.f32	%p32, %f440, 0f47CE4780;
	@%p32 bra 	BB0_48;

	mov.u64 	%rd283, 0;
	add.u64 	%rd76, %SP, 12;
	cvta.to.local.u64 	%rd282, %rd76;
	mov.b32 	 %r55, %f956;
	shl.b32 	%r195, %r55, 8;
	or.b32  	%r57, %r195, -2147483648;
	mov.u32 	%r394, 0;
	mov.u32 	%r395, %r394;

BB0_39:
	.pragma "nounroll";
	add.u64 	%rd264, %SP, 12;
	cvta.to.local.u64 	%rd263, %rd264;
	shl.b64 	%rd77, %rd283, 2;
	mov.u64 	%rd78, __cudart_i2opi_f;
	add.s64 	%rd79, %rd78, %rd77;
	ld.const.u32 	%r198, [%rd79];
	// inline asm
	{
	mad.lo.cc.u32   %r196, %r198, %r57, %r395;
	madc.hi.u32     %r395, %r198, %r57,  0;
	}
	// inline asm
	st.local.u32 	[%rd282], %r196;
	add.s32 	%r394, %r394, 1;
	cvt.s64.s32	%rd283, %r394;
	mul.wide.s32 	%rd80, %r394, 4;
	add.s64 	%rd282, %rd263, %rd80;
	setp.ne.s32	%p33, %r394, 6;
	@%p33 bra 	BB0_39;

	mov.b32 	 %r368, %f956;
	shr.u32 	%r367, %r368, 23;
	add.u64 	%rd265, %SP, 12;
	and.b32  	%r201, %r367, 255;
	add.s32 	%r202, %r201, -128;
	shr.u32 	%r203, %r202, 5;
	cvta.to.local.u64 	%rd82, %rd265;
	st.local.u32 	[%rd82+24], %r395;
	mov.u32 	%r204, 6;
	sub.s32 	%r205, %r204, %r203;
	mul.wide.s32 	%rd83, %r205, 4;
	add.s64 	%rd17, %rd82, %rd83;
	ld.local.u32 	%r396, [%rd17];
	ld.local.u32 	%r397, [%rd17+-4];
	and.b32  	%r65, %r367, 31;
	setp.eq.s32	%p34, %r65, 0;
	@%p34 bra 	BB0_42;

	mov.u32 	%r206, 32;
	sub.s32 	%r207, %r206, %r65;
	shr.u32 	%r208, %r397, %r207;
	shl.b32 	%r209, %r396, %r65;
	add.s32 	%r396, %r208, %r209;
	ld.local.u32 	%r210, [%rd17+-8];
	shr.u32 	%r211, %r210, %r207;
	shl.b32 	%r212, %r397, %r65;
	add.s32 	%r397, %r211, %r212;

BB0_42:
	mov.b32 	 %r371, %f956;
	and.b32  	%r399, %r371, -2147483648;
	shr.u32 	%r213, %r397, 30;
	shl.b32 	%r214, %r396, 2;
	add.s32 	%r398, %r213, %r214;
	shl.b32 	%r71, %r397, 2;
	shr.u32 	%r215, %r398, 31;
	shr.u32 	%r216, %r396, 30;
	add.s32 	%r72, %r215, %r216;
	setp.eq.s32	%p35, %r215, 0;
	@%p35 bra 	BB0_43;
	bra.uni 	BB0_44;

BB0_43:
	mov.u32 	%r400, %r71;
	bra.uni 	BB0_45;

BB0_44:
	mov.b32 	 %r373, %f956;
	and.b32  	%r372, %r373, -2147483648;
	not.b32 	%r217, %r398;
	neg.s32 	%r400, %r71;
	setp.eq.s32	%p36, %r71, 0;
	selp.u32	%r218, 1, 0, %p36;
	add.s32 	%r398, %r218, %r217;
	xor.b32  	%r399, %r372, -2147483648;

BB0_45:
	mov.b32 	 %r375, %f956;
	and.b32  	%r374, %r375, -2147483648;
	clz.b32 	%r402, %r398;
	setp.eq.s32	%p37, %r402, 0;
	shl.b32 	%r219, %r398, %r402;
	mov.u32 	%r220, 32;
	sub.s32 	%r221, %r220, %r402;
	shr.u32 	%r222, %r400, %r221;
	add.s32 	%r223, %r222, %r219;
	selp.b32	%r80, %r398, %r223, %p37;
	mov.u32 	%r224, -921707870;
	mul.hi.u32 	%r401, %r80, %r224;
	setp.eq.s32	%p38, %r374, 0;
	neg.s32 	%r225, %r72;
	selp.b32	%r403, %r72, %r225, %p38;
	setp.lt.s32	%p39, %r401, 1;
	@%p39 bra 	BB0_47;

	mul.lo.s32 	%r226, %r80, -921707870;
	shr.u32 	%r227, %r226, 31;
	shl.b32 	%r228, %r401, 1;
	add.s32 	%r401, %r227, %r228;
	add.s32 	%r402, %r402, 1;

BB0_47:
	mov.u32 	%r229, 126;
	sub.s32 	%r230, %r229, %r402;
	shl.b32 	%r231, %r230, 23;
	add.s32 	%r232, %r401, 1;
	shr.u32 	%r233, %r232, 7;
	add.s32 	%r234, %r233, 1;
	shr.u32 	%r235, %r234, 1;
	add.s32 	%r236, %r235, %r231;
	or.b32  	%r237, %r236, %r399;
	mov.b32 	 %f957, %r237;

BB0_48:
	and.b32  	%r88, %r403, 1;
	setp.eq.s32	%p40, %r88, 0;
	@%p40 bra 	BB0_50;
	bra.uni 	BB0_49;

BB0_50:
	mul.rn.f32 	%f874, %f957, %f957;
	mov.f32 	%f443, 0f3C08839E;
	mov.f32 	%f444, 0fB94CA1F9;
	fma.rn.f32 	%f958, %f444, %f874, %f443;
	bra.uni 	BB0_51;

BB0_49:
	mul.rn.f32 	%f870, %f957, %f957;
	mov.f32 	%f441, 0fBAB6061A;
	mov.f32 	%f442, 0f37CCF5CE;
	fma.rn.f32 	%f958, %f442, %f870, %f441;

BB0_51:
	@%p40 bra 	BB0_53;
	bra.uni 	BB0_52;

BB0_53:
	mul.rn.f32 	%f873, %f957, %f957;
	mov.f32 	%f862, 0f00000000;
	mov.f32 	%f448, 0fBE2AAAA3;
	fma.rn.f32 	%f449, %f958, %f873, %f448;
	fma.rn.f32 	%f959, %f449, %f873, %f862;
	bra.uni 	BB0_54;

BB0_52:
	mul.rn.f32 	%f871, %f957, %f957;
	mov.f32 	%f445, 0f3D2AAAA5;
	fma.rn.f32 	%f446, %f958, %f871, %f445;
	mov.f32 	%f447, 0fBF000000;
	fma.rn.f32 	%f959, %f446, %f871, %f447;

BB0_54:
	fma.rn.f32 	%f960, %f959, %f957, %f957;
	@%p40 bra 	BB0_56;

	mul.rn.f32 	%f872, %f957, %f957;
	mov.f32 	%f858, 0f3F800000;
	fma.rn.f32 	%f960, %f959, %f872, %f858;

BB0_56:
	and.b32  	%r238, %r403, 2;
	setp.eq.s32	%p43, %r238, 0;
	@%p43 bra 	BB0_58;

	mov.f32 	%f859, 0f00000000;
	mov.f32 	%f453, 0fBF800000;
	fma.rn.f32 	%f960, %f960, %f453, %f859;

BB0_58:
	mul.f32 	%f454, %f76, %f954;
	mul.f32 	%f455, %f76, %f960;
	mul.f32 	%f456, %f10, %f455;
	mul.f32 	%f457, %f11, %f455;
	mul.f32 	%f458, %f12, %f455;
	fma.rn.f32 	%f459, %f47, %f454, %f456;
	fma.rn.f32 	%f460, %f48, %f454, %f457;
	fma.rn.f32 	%f461, %f49, %f454, %f458;
	fma.rn.f32 	%f113, %f914, %f75, %f459;
	fma.rn.f32 	%f114, %f915, %f75, %f460;
	fma.rn.f32 	%f115, %f916, %f75, %f461;
	setp.gt.f32	%p44, %f114, 0f00000000;
	setp.eq.s32	%p45, %r5, 0;
	or.pred  	%p46, %p45, %p44;
	@!%p46 bra 	BB0_60;
	bra.uni 	BB0_59;

BB0_59:
	add.u64 	%rd84, %SP, 0;
	cvta.to.local.u64 	%rd85, %rd84;
	max.f32 	%f475, %f481, %f247;
	ld.global.u32 	%r239, [sky];
	neg.f32 	%f468, %f113;
	neg.f32 	%f467, %f114;
	neg.f32 	%f466, %f115;
	mov.u32 	%r240, 6;
	mov.u32 	%r241, 0;
	// inline asm
	call (%f462, %f463, %f464, %f465), _rt_texture_get_base_id, (%r239, %r240, %f466, %f467, %f468, %r241);
	// inline asm
	st.local.f32 	[%rd85], %f462;
	st.local.f32 	[%rd85+4], %f463;
	st.local.f32 	[%rd85+8], %f464;
	ld.global.u32 	%r242, [root];
	mov.u32 	%r243, 1;
	mov.f32 	%f476, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r242, %f7, %f8, %f9, %f113, %f114, %f115, %r243, %f475, %f476, %rd84, %r113);
	// inline asm
	mul.f32 	%f483, %f22, %f114;
	fma.rn.f32 	%f484, %f20, %f113, %f483;
	fma.rn.f32 	%f485, %f24, %f115, %f484;
	cvt.sat.f32.f32	%f486, %f485;
	ld.local.f32 	%f487, [%rd85];
	ld.local.f32 	%f488, [%rd85+4];
	ld.local.f32 	%f489, [%rd85+8];
	fma.rn.f32 	%f968, %f486, %f487, %f968;
	fma.rn.f32 	%f969, %f486, %f488, %f969;
	fma.rn.f32 	%f970, %f486, %f489, %f970;
	mul.f32 	%f490, %f32, %f114;
	fma.rn.f32 	%f491, %f31, %f113, %f490;
	fma.rn.f32 	%f492, %f33, %f115, %f491;
	cvt.sat.f32.f32	%f493, %f492;
	fma.rn.f32 	%f965, %f493, %f487, %f965;
	fma.rn.f32 	%f966, %f493, %f488, %f966;
	fma.rn.f32 	%f967, %f493, %f489, %f967;
	mul.f32 	%f494, %f41, %f114;
	fma.rn.f32 	%f495, %f40, %f113, %f494;
	fma.rn.f32 	%f496, %f42, %f115, %f495;
	cvt.sat.f32.f32	%f497, %f496;
	fma.rn.f32 	%f962, %f497, %f487, %f962;
	fma.rn.f32 	%f963, %f497, %f488, %f963;
	fma.rn.f32 	%f964, %f497, %f489, %f964;
	mul.f32 	%f498, %f915, %f114;
	fma.rn.f32 	%f499, %f914, %f113, %f498;
	fma.rn.f32 	%f500, %f916, %f115, %f499;
	cvt.sat.f32.f32	%f501, %f500;
	fma.rn.f32 	%f971, %f501, %f487, %f971;
	fma.rn.f32 	%f972, %f501, %f488, %f972;
	fma.rn.f32 	%f973, %f501, %f489, %f973;

BB0_60:
	mad.lo.s32 	%r347, %r16, 1664525, 1013904223;
	mad.lo.s32 	%r383, %r347, 1664525, 1013904223;
	add.s32 	%r382, %r382, 1;
	setp.lt.s32	%p47, %r382, %r1;
	@%p47 bra 	BB0_12;

	mad.lo.s32 	%r349, %r16, 1664525, 1013904223;
	mad.lo.s32 	%r383, %r349, 1664525, 1013904223;
	add.s32 	%r380, %r380, 1;
	setp.lt.s32	%p48, %r380, %r1;
	@%p48 bra 	BB0_11;

BB0_62:
	mul.lo.s32 	%r245, %r1, %r1;
	cvt.rn.f32.s32	%f502, %r245;
	rcp.rn.f32 	%f503, %f502;
	mul.f32 	%f504, %f971, %f503;
	mul.f32 	%f505, %f972, %f503;
	mul.f32 	%f506, %f973, %f503;
	mul.f32 	%f152, %f968, %f503;
	mul.f32 	%f153, %f969, %f503;
	mul.f32 	%f154, %f970, %f503;
	mul.f32 	%f155, %f965, %f503;
	mul.f32 	%f156, %f966, %f503;
	mul.f32 	%f157, %f967, %f503;
	mul.f32 	%f158, %f962, %f503;
	mul.f32 	%f159, %f963, %f503;
	mul.f32 	%f160, %f964, %f503;
	fma.rn.f32 	%f507, %f971, %f503, %f504;
	fma.rn.f32 	%f508, %f972, %f503, %f505;
	fma.rn.f32 	%f509, %f973, %f503, %f506;
	ld.global.f32 	%f510, [skyColor];
	mul.f32 	%f161, %f510, %f507;
	ld.global.f32 	%f511, [skyColor+4];
	mul.f32 	%f162, %f508, %f511;
	ld.global.f32 	%f512, [skyColor+8];
	mul.f32 	%f163, %f509, %f512;
	ld.global.u32 	%r404, [imageEnabled];
	and.b32  	%r246, %r404, 1;
	setp.eq.b32	%p49, %r246, 1;
	@!%p49 bra 	BB0_97;
	bra.uni 	BB0_63;

BB0_63:
	abs.f32 	%f165, %f161;
	setp.lt.f32	%p50, %f165, 0f00800000;
	mul.f32 	%f518, %f165, 0f4B800000;
	selp.f32	%f519, 0fC3170000, 0fC2FE0000, %p50;
	selp.f32	%f520, %f518, %f165, %p50;
	mov.b32 	 %r247, %f520;
	and.b32  	%r248, %r247, 8388607;
	or.b32  	%r249, %r248, 1065353216;
	mov.b32 	 %f521, %r249;
	shr.u32 	%r250, %r247, 23;
	cvt.rn.f32.u32	%f522, %r250;
	add.f32 	%f523, %f519, %f522;
	setp.gt.f32	%p51, %f521, 0f3FB504F3;
	mul.f32 	%f524, %f521, 0f3F000000;
	add.f32 	%f525, %f523, 0f3F800000;
	selp.f32	%f526, %f524, %f521, %p51;
	selp.f32	%f527, %f525, %f523, %p51;
	add.f32 	%f528, %f526, 0fBF800000;
	add.f32 	%f514, %f526, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f513,%f514;
	// inline asm
	add.f32 	%f529, %f528, %f528;
	mul.f32 	%f530, %f513, %f529;
	mul.f32 	%f531, %f530, %f530;
	mov.f32 	%f532, 0f3C4CAF63;
	mov.f32 	%f533, 0f3B18F0FE;
	fma.rn.f32 	%f534, %f533, %f531, %f532;
	mov.f32 	%f535, 0f3DAAAABD;
	fma.rn.f32 	%f536, %f534, %f531, %f535;
	mul.rn.f32 	%f537, %f536, %f531;
	mul.rn.f32 	%f538, %f537, %f530;
	sub.f32 	%f539, %f528, %f530;
	neg.f32 	%f540, %f530;
	add.f32 	%f541, %f539, %f539;
	fma.rn.f32 	%f542, %f540, %f528, %f541;
	mul.rn.f32 	%f543, %f513, %f542;
	add.f32 	%f544, %f538, %f530;
	sub.f32 	%f545, %f530, %f544;
	add.f32 	%f546, %f538, %f545;
	add.f32 	%f547, %f543, %f546;
	add.f32 	%f548, %f544, %f547;
	sub.f32 	%f549, %f544, %f548;
	add.f32 	%f550, %f547, %f549;
	mov.f32 	%f551, 0f3F317200;
	mul.rn.f32 	%f552, %f527, %f551;
	mov.f32 	%f553, 0f35BFBE8E;
	mul.rn.f32 	%f554, %f527, %f553;
	add.f32 	%f555, %f552, %f548;
	sub.f32 	%f556, %f552, %f555;
	add.f32 	%f557, %f548, %f556;
	add.f32 	%f558, %f550, %f557;
	add.f32 	%f559, %f554, %f558;
	add.f32 	%f560, %f555, %f559;
	sub.f32 	%f561, %f555, %f560;
	add.f32 	%f562, %f559, %f561;
	mov.f32 	%f563, 0f3EE66666;
	mul.rn.f32 	%f564, %f563, %f560;
	neg.f32 	%f565, %f564;
	fma.rn.f32 	%f566, %f563, %f560, %f565;
	fma.rn.f32 	%f567, %f563, %f562, %f566;
	mov.f32 	%f568, 0f00000000;
	fma.rn.f32 	%f569, %f568, %f560, %f567;
	add.rn.f32 	%f570, %f564, %f569;
	neg.f32 	%f571, %f570;
	add.rn.f32 	%f572, %f564, %f571;
	add.rn.f32 	%f573, %f572, %f569;
	mov.b32 	 %r251, %f570;
	setp.eq.s32	%p52, %r251, 1118925336;
	add.s32 	%r252, %r251, -1;
	mov.b32 	 %f574, %r252;
	add.f32 	%f575, %f573, 0f37000000;
	selp.f32	%f576, %f574, %f570, %p52;
	selp.f32	%f166, %f575, %f573, %p52;
	mul.f32 	%f577, %f576, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f578, %f577;
	mov.f32 	%f579, 0fBF317200;
	fma.rn.f32 	%f580, %f578, %f579, %f576;
	mov.f32 	%f581, 0fB5BFBE8E;
	fma.rn.f32 	%f582, %f578, %f581, %f580;
	mul.f32 	%f583, %f582, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f584, %f583;
	add.f32 	%f585, %f578, 0f00000000;
	ex2.approx.f32 	%f586, %f585;
	mul.f32 	%f587, %f584, %f586;
	setp.lt.f32	%p53, %f576, 0fC2D20000;
	selp.f32	%f588, 0f00000000, %f587, %p53;
	setp.gt.f32	%p54, %f576, 0f42D20000;
	selp.f32	%f986, 0f7F800000, %f588, %p54;
	setp.eq.f32	%p55, %f986, 0f7F800000;
	@%p55 bra 	BB0_65;

	fma.rn.f32 	%f986, %f986, %f166, %f986;

BB0_65:
	mov.f32 	%f878, 0f3E666666;
	cvt.rzi.f32.f32	%f877, %f878;
	fma.rn.f32 	%f876, %f877, 0fC0000000, 0f3EE66666;
	abs.f32 	%f875, %f876;
	setp.lt.f32	%p56, %f161, 0f00000000;
	setp.eq.f32	%p57, %f875, 0f3F800000;
	and.pred  	%p1, %p56, %p57;
	mov.b32 	 %r253, %f986;
	xor.b32  	%r254, %r253, -2147483648;
	mov.b32 	 %f589, %r254;
	selp.f32	%f988, %f589, %f986, %p1;
	setp.eq.f32	%p58, %f161, 0f00000000;
	@%p58 bra 	BB0_68;
	bra.uni 	BB0_66;

BB0_68:
	add.f32 	%f592, %f161, %f161;
	selp.f32	%f988, %f592, 0f00000000, %p57;
	bra.uni 	BB0_69;

BB0_115:
	mov.u64 	%rd199, image_HDR;
	cvta.global.u64 	%rd194, %rd199;
	mov.u32 	%r318, 8;
	mov.u64 	%rd198, 0;
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd194, %r97, %r318, %rd20, %rd21, %rd198, %rd198);
	// inline asm
	mov.f32 	%f830, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs112, %f830;}

	// inline asm
	mov.u16 	%rs113, 0;
	st.v4.u16 	[%rd193], {%rs112, %rs112, %rs112, %rs113};

BB0_116:
	ld.global.u32 	%r319, [additive];
	setp.eq.s32	%p109, %r319, 0;
	@%p109 bra 	BB0_118;

	mov.u64 	%rd212, image_RNM0;
	cvta.global.u64 	%rd201, %rd212;
	mov.u32 	%r323, 8;
	mov.u64 	%rd211, 0;
	// inline asm
	call (%rd200), _rt_buffer_get_64, (%rd201, %r97, %r323, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	ld.v4.u16 	{%rs120, %rs121, %rs122, %rs123}, [%rd200];
	// inline asm
	{  cvt.f32.f16 %f831, %rs120;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f832, %rs121;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f833, %rs122;}

	// inline asm
	// inline asm
	call (%rd206), _rt_buffer_get_64, (%rd201, %r97, %r323, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	add.f32 	%f834, %f831, 0f00000000;
	add.f32 	%f835, %f832, 0f00000000;
	add.f32 	%f836, %f833, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs119, %f836;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs118, %f835;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f834;}

	// inline asm
	mov.u16 	%rs124, 0;
	st.v4.u16 	[%rd206], {%rs117, %rs118, %rs119, %rs124};
	bra.uni 	BB0_119;

BB0_118:
	mov.u64 	%rd219, image_RNM0;
	cvta.global.u64 	%rd214, %rd219;
	mov.u32 	%r325, 8;
	mov.u64 	%rd218, 0;
	// inline asm
	call (%rd213), _rt_buffer_get_64, (%rd214, %r97, %r325, %rd20, %rd21, %rd218, %rd218);
	// inline asm
	mov.f32 	%f837, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs125, %f837;}

	// inline asm
	mov.u16 	%rs126, 0;
	st.v4.u16 	[%rd213], {%rs125, %rs125, %rs125, %rs126};

BB0_119:
	ld.global.u32 	%r326, [additive];
	setp.eq.s32	%p110, %r326, 0;
	@%p110 bra 	BB0_121;

	mov.u64 	%rd232, image_RNM1;
	cvta.global.u64 	%rd221, %rd232;
	mov.u32 	%r330, 8;
	mov.u64 	%rd231, 0;
	// inline asm
	call (%rd220), _rt_buffer_get_64, (%rd221, %r97, %r330, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	ld.v4.u16 	{%rs133, %rs134, %rs135, %rs136}, [%rd220];
	// inline asm
	{  cvt.f32.f16 %f838, %rs133;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f839, %rs134;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f840, %rs135;}

	// inline asm
	// inline asm
	call (%rd226), _rt_buffer_get_64, (%rd221, %r97, %r330, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	add.f32 	%f841, %f838, 0f00000000;
	add.f32 	%f842, %f839, 0f00000000;
	add.f32 	%f843, %f840, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs132, %f843;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs131, %f842;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs130, %f841;}

	// inline asm
	mov.u16 	%rs137, 0;
	st.v4.u16 	[%rd226], {%rs130, %rs131, %rs132, %rs137};
	bra.uni 	BB0_122;

BB0_121:
	mov.u64 	%rd239, image_RNM1;
	cvta.global.u64 	%rd234, %rd239;
	mov.u32 	%r332, 8;
	mov.u64 	%rd238, 0;
	// inline asm
	call (%rd233), _rt_buffer_get_64, (%rd234, %r97, %r332, %rd20, %rd21, %rd238, %rd238);
	// inline asm
	mov.f32 	%f844, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs138, %f844;}

	// inline asm
	mov.u16 	%rs139, 0;
	st.v4.u16 	[%rd233], {%rs138, %rs138, %rs138, %rs139};

BB0_122:
	ld.global.u32 	%r333, [additive];
	setp.eq.s32	%p111, %r333, 0;
	@%p111 bra 	BB0_124;

	mov.u64 	%rd252, image_RNM2;
	cvta.global.u64 	%rd241, %rd252;
	mov.u32 	%r337, 8;
	mov.u64 	%rd251, 0;
	// inline asm
	call (%rd240), _rt_buffer_get_64, (%rd241, %r97, %r337, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	ld.v4.u16 	{%rs146, %rs147, %rs148, %rs149}, [%rd240];
	// inline asm
	{  cvt.f32.f16 %f845, %rs146;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f846, %rs147;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f847, %rs148;}

	// inline asm
	// inline asm
	call (%rd246), _rt_buffer_get_64, (%rd241, %r97, %r337, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	add.f32 	%f848, %f845, 0f00000000;
	add.f32 	%f849, %f846, 0f00000000;
	add.f32 	%f850, %f847, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs145, %f850;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs144, %f849;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs143, %f848;}

	// inline asm
	mov.u16 	%rs150, 0;
	st.v4.u16 	[%rd246], {%rs143, %rs144, %rs145, %rs150};
	bra.uni 	BB0_125;

BB0_124:
	mov.u64 	%rd259, image_RNM2;
	cvta.global.u64 	%rd254, %rd259;
	mov.u32 	%r339, 8;
	mov.u64 	%rd258, 0;
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd254, %r97, %r339, %rd20, %rd21, %rd258, %rd258);
	// inline asm
	mov.f32 	%f851, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs151, %f851;}

	// inline asm
	mov.u16 	%rs152, 0;
	st.v4.u16 	[%rd253], {%rs151, %rs151, %rs151, %rs152};
	bra.uni 	BB0_125;

BB0_66:
	setp.geu.f32	%p59, %f161, 0f00000000;
	@%p59 bra 	BB0_69;

	mov.f32 	%f902, 0f3EE66666;
	cvt.rzi.f32.f32	%f591, %f902;
	setp.neu.f32	%p60, %f591, 0f3EE66666;
	selp.f32	%f988, 0f7FFFFFFF, %f988, %p60;

BB0_69:
	abs.f32 	%f879, %f161;
	add.f32 	%f593, %f879, 0f3EE66666;
	mov.b32 	 %r255, %f593;
	setp.lt.s32	%p62, %r255, 2139095040;
	@%p62 bra 	BB0_74;

	abs.f32 	%f900, %f161;
	setp.gtu.f32	%p63, %f900, 0f7F800000;
	@%p63 bra 	BB0_73;
	bra.uni 	BB0_71;

BB0_73:
	add.f32 	%f988, %f161, 0f3EE66666;
	bra.uni 	BB0_74;

BB0_71:
	abs.f32 	%f901, %f161;
	setp.neu.f32	%p64, %f901, 0f7F800000;
	@%p64 bra 	BB0_74;

	selp.f32	%f988, 0fFF800000, 0f7F800000, %p1;

BB0_74:
	mov.f32 	%f888, 0fB5BFBE8E;
	mov.f32 	%f887, 0fBF317200;
	mov.f32 	%f886, 0f00000000;
	mov.f32 	%f885, 0f35BFBE8E;
	mov.f32 	%f884, 0f3F317200;
	mov.f32 	%f883, 0f3DAAAABD;
	mov.f32 	%f882, 0f3C4CAF63;
	mov.f32 	%f881, 0f3B18F0FE;
	mov.f32 	%f880, 0f3EE66666;
	setp.eq.f32	%p65, %f161, 0f3F800000;
	selp.f32	%f177, 0f3F800000, %f988, %p65;
	abs.f32 	%f178, %f162;
	setp.lt.f32	%p66, %f178, 0f00800000;
	mul.f32 	%f596, %f178, 0f4B800000;
	selp.f32	%f597, 0fC3170000, 0fC2FE0000, %p66;
	selp.f32	%f598, %f596, %f178, %p66;
	mov.b32 	 %r256, %f598;
	and.b32  	%r257, %r256, 8388607;
	or.b32  	%r258, %r257, 1065353216;
	mov.b32 	 %f599, %r258;
	shr.u32 	%r259, %r256, 23;
	cvt.rn.f32.u32	%f600, %r259;
	add.f32 	%f601, %f597, %f600;
	setp.gt.f32	%p67, %f599, 0f3FB504F3;
	mul.f32 	%f602, %f599, 0f3F000000;
	add.f32 	%f603, %f601, 0f3F800000;
	selp.f32	%f604, %f602, %f599, %p67;
	selp.f32	%f605, %f603, %f601, %p67;
	add.f32 	%f606, %f604, 0fBF800000;
	add.f32 	%f595, %f604, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f594,%f595;
	// inline asm
	add.f32 	%f607, %f606, %f606;
	mul.f32 	%f608, %f594, %f607;
	mul.f32 	%f609, %f608, %f608;
	fma.rn.f32 	%f612, %f881, %f609, %f882;
	fma.rn.f32 	%f614, %f612, %f609, %f883;
	mul.rn.f32 	%f615, %f614, %f609;
	mul.rn.f32 	%f616, %f615, %f608;
	sub.f32 	%f617, %f606, %f608;
	neg.f32 	%f618, %f608;
	add.f32 	%f619, %f617, %f617;
	fma.rn.f32 	%f620, %f618, %f606, %f619;
	mul.rn.f32 	%f621, %f594, %f620;
	add.f32 	%f622, %f616, %f608;
	sub.f32 	%f623, %f608, %f622;
	add.f32 	%f624, %f616, %f623;
	add.f32 	%f625, %f621, %f624;
	add.f32 	%f626, %f622, %f625;
	sub.f32 	%f627, %f622, %f626;
	add.f32 	%f628, %f625, %f627;
	mul.rn.f32 	%f630, %f605, %f884;
	mul.rn.f32 	%f632, %f605, %f885;
	add.f32 	%f633, %f630, %f626;
	sub.f32 	%f634, %f630, %f633;
	add.f32 	%f635, %f626, %f634;
	add.f32 	%f636, %f628, %f635;
	add.f32 	%f637, %f632, %f636;
	add.f32 	%f638, %f633, %f637;
	sub.f32 	%f639, %f633, %f638;
	add.f32 	%f640, %f637, %f639;
	mul.rn.f32 	%f642, %f880, %f638;
	neg.f32 	%f643, %f642;
	fma.rn.f32 	%f644, %f880, %f638, %f643;
	fma.rn.f32 	%f645, %f880, %f640, %f644;
	fma.rn.f32 	%f647, %f886, %f638, %f645;
	add.rn.f32 	%f648, %f642, %f647;
	neg.f32 	%f649, %f648;
	add.rn.f32 	%f650, %f642, %f649;
	add.rn.f32 	%f651, %f650, %f647;
	mov.b32 	 %r260, %f648;
	setp.eq.s32	%p68, %r260, 1118925336;
	add.s32 	%r261, %r260, -1;
	mov.b32 	 %f652, %r261;
	add.f32 	%f653, %f651, 0f37000000;
	selp.f32	%f654, %f652, %f648, %p68;
	selp.f32	%f179, %f653, %f651, %p68;
	mul.f32 	%f655, %f654, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f656, %f655;
	fma.rn.f32 	%f658, %f656, %f887, %f654;
	fma.rn.f32 	%f660, %f656, %f888, %f658;
	mul.f32 	%f661, %f660, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f662, %f661;
	add.f32 	%f663, %f656, 0f00000000;
	ex2.approx.f32 	%f664, %f663;
	mul.f32 	%f665, %f662, %f664;
	setp.lt.f32	%p69, %f654, 0fC2D20000;
	selp.f32	%f666, 0f00000000, %f665, %p69;
	setp.gt.f32	%p70, %f654, 0f42D20000;
	selp.f32	%f989, 0f7F800000, %f666, %p70;
	setp.eq.f32	%p71, %f989, 0f7F800000;
	@%p71 bra 	BB0_76;

	fma.rn.f32 	%f989, %f989, %f179, %f989;

BB0_76:
	setp.lt.f32	%p72, %f162, 0f00000000;
	and.pred  	%p2, %p72, %p57;
	mov.b32 	 %r262, %f989;
	xor.b32  	%r263, %r262, -2147483648;
	mov.b32 	 %f667, %r263;
	selp.f32	%f991, %f667, %f989, %p2;
	setp.eq.f32	%p74, %f162, 0f00000000;
	@%p74 bra 	BB0_79;
	bra.uni 	BB0_77;

BB0_79:
	add.f32 	%f670, %f162, %f162;
	selp.f32	%f991, %f670, 0f00000000, %p57;
	bra.uni 	BB0_80;

BB0_77:
	setp.geu.f32	%p75, %f162, 0f00000000;
	@%p75 bra 	BB0_80;

	mov.f32 	%f899, 0f3EE66666;
	cvt.rzi.f32.f32	%f669, %f899;
	setp.neu.f32	%p76, %f669, 0f3EE66666;
	selp.f32	%f991, 0f7FFFFFFF, %f991, %p76;

BB0_80:
	abs.f32 	%f903, %f162;
	add.f32 	%f671, %f903, 0f3EE66666;
	mov.b32 	 %r264, %f671;
	setp.lt.s32	%p78, %r264, 2139095040;
	@%p78 bra 	BB0_85;

	abs.f32 	%f904, %f162;
	setp.gtu.f32	%p79, %f904, 0f7F800000;
	@%p79 bra 	BB0_84;
	bra.uni 	BB0_82;

BB0_84:
	add.f32 	%f991, %f162, 0f3EE66666;
	bra.uni 	BB0_85;

BB0_82:
	abs.f32 	%f905, %f162;
	setp.neu.f32	%p80, %f905, 0f7F800000;
	@%p80 bra 	BB0_85;

	selp.f32	%f991, 0fFF800000, 0f7F800000, %p2;

BB0_85:
	mov.f32 	%f897, 0fB5BFBE8E;
	mov.f32 	%f896, 0fBF317200;
	mov.f32 	%f895, 0f00000000;
	mov.f32 	%f894, 0f35BFBE8E;
	mov.f32 	%f893, 0f3F317200;
	mov.f32 	%f892, 0f3DAAAABD;
	mov.f32 	%f891, 0f3C4CAF63;
	mov.f32 	%f890, 0f3B18F0FE;
	mov.f32 	%f889, 0f3EE66666;
	setp.eq.f32	%p81, %f162, 0f3F800000;
	selp.f32	%f190, 0f3F800000, %f991, %p81;
	abs.f32 	%f191, %f163;
	setp.lt.f32	%p82, %f191, 0f00800000;
	mul.f32 	%f674, %f191, 0f4B800000;
	selp.f32	%f675, 0fC3170000, 0fC2FE0000, %p82;
	selp.f32	%f676, %f674, %f191, %p82;
	mov.b32 	 %r265, %f676;
	and.b32  	%r266, %r265, 8388607;
	or.b32  	%r267, %r266, 1065353216;
	mov.b32 	 %f677, %r267;
	shr.u32 	%r268, %r265, 23;
	cvt.rn.f32.u32	%f678, %r268;
	add.f32 	%f679, %f675, %f678;
	setp.gt.f32	%p83, %f677, 0f3FB504F3;
	mul.f32 	%f680, %f677, 0f3F000000;
	add.f32 	%f681, %f679, 0f3F800000;
	selp.f32	%f682, %f680, %f677, %p83;
	selp.f32	%f683, %f681, %f679, %p83;
	add.f32 	%f684, %f682, 0fBF800000;
	add.f32 	%f673, %f682, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f672,%f673;
	// inline asm
	add.f32 	%f685, %f684, %f684;
	mul.f32 	%f686, %f672, %f685;
	mul.f32 	%f687, %f686, %f686;
	fma.rn.f32 	%f690, %f890, %f687, %f891;
	fma.rn.f32 	%f692, %f690, %f687, %f892;
	mul.rn.f32 	%f693, %f692, %f687;
	mul.rn.f32 	%f694, %f693, %f686;
	sub.f32 	%f695, %f684, %f686;
	neg.f32 	%f696, %f686;
	add.f32 	%f697, %f695, %f695;
	fma.rn.f32 	%f698, %f696, %f684, %f697;
	mul.rn.f32 	%f699, %f672, %f698;
	add.f32 	%f700, %f694, %f686;
	sub.f32 	%f701, %f686, %f700;
	add.f32 	%f702, %f694, %f701;
	add.f32 	%f703, %f699, %f702;
	add.f32 	%f704, %f700, %f703;
	sub.f32 	%f705, %f700, %f704;
	add.f32 	%f706, %f703, %f705;
	mul.rn.f32 	%f708, %f683, %f893;
	mul.rn.f32 	%f710, %f683, %f894;
	add.f32 	%f711, %f708, %f704;
	sub.f32 	%f712, %f708, %f711;
	add.f32 	%f713, %f704, %f712;
	add.f32 	%f714, %f706, %f713;
	add.f32 	%f715, %f710, %f714;
	add.f32 	%f716, %f711, %f715;
	sub.f32 	%f717, %f711, %f716;
	add.f32 	%f718, %f715, %f717;
	mul.rn.f32 	%f720, %f889, %f716;
	neg.f32 	%f721, %f720;
	fma.rn.f32 	%f722, %f889, %f716, %f721;
	fma.rn.f32 	%f723, %f889, %f718, %f722;
	fma.rn.f32 	%f725, %f895, %f716, %f723;
	add.rn.f32 	%f726, %f720, %f725;
	neg.f32 	%f727, %f726;
	add.rn.f32 	%f728, %f720, %f727;
	add.rn.f32 	%f729, %f728, %f725;
	mov.b32 	 %r269, %f726;
	setp.eq.s32	%p84, %r269, 1118925336;
	add.s32 	%r270, %r269, -1;
	mov.b32 	 %f730, %r270;
	add.f32 	%f731, %f729, 0f37000000;
	selp.f32	%f732, %f730, %f726, %p84;
	selp.f32	%f192, %f731, %f729, %p84;
	mul.f32 	%f733, %f732, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f734, %f733;
	fma.rn.f32 	%f736, %f734, %f896, %f732;
	fma.rn.f32 	%f738, %f734, %f897, %f736;
	mul.f32 	%f739, %f738, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f740, %f739;
	add.f32 	%f741, %f734, 0f00000000;
	ex2.approx.f32 	%f742, %f741;
	mul.f32 	%f743, %f740, %f742;
	setp.lt.f32	%p85, %f732, 0fC2D20000;
	selp.f32	%f744, 0f00000000, %f743, %p85;
	setp.gt.f32	%p86, %f732, 0f42D20000;
	selp.f32	%f992, 0f7F800000, %f744, %p86;
	setp.eq.f32	%p87, %f992, 0f7F800000;
	@%p87 bra 	BB0_87;

	fma.rn.f32 	%f992, %f992, %f192, %f992;

BB0_87:
	setp.lt.f32	%p88, %f163, 0f00000000;
	and.pred  	%p3, %p88, %p57;
	mov.b32 	 %r271, %f992;
	xor.b32  	%r272, %r271, -2147483648;
	mov.b32 	 %f745, %r272;
	selp.f32	%f994, %f745, %f992, %p3;
	setp.eq.f32	%p90, %f163, 0f00000000;
	@%p90 bra 	BB0_90;
	bra.uni 	BB0_88;

BB0_90:
	add.f32 	%f748, %f163, %f163;
	selp.f32	%f994, %f748, 0f00000000, %p57;
	bra.uni 	BB0_91;

BB0_88:
	setp.geu.f32	%p91, %f163, 0f00000000;
	@%p91 bra 	BB0_91;

	mov.f32 	%f898, 0f3EE66666;
	cvt.rzi.f32.f32	%f747, %f898;
	setp.neu.f32	%p92, %f747, 0f3EE66666;
	selp.f32	%f994, 0f7FFFFFFF, %f994, %p92;

BB0_91:
	add.f32 	%f749, %f191, 0f3EE66666;
	mov.b32 	 %r273, %f749;
	setp.lt.s32	%p94, %r273, 2139095040;
	@%p94 bra 	BB0_96;

	setp.gtu.f32	%p95, %f191, 0f7F800000;
	@%p95 bra 	BB0_95;
	bra.uni 	BB0_93;

BB0_95:
	add.f32 	%f994, %f163, 0f3EE66666;
	bra.uni 	BB0_96;

BB0_93:
	setp.neu.f32	%p96, %f191, 0f7F800000;
	@%p96 bra 	BB0_96;

	selp.f32	%f994, 0fFF800000, 0f7F800000, %p3;

BB0_96:
	mov.u64 	%rd266, 0;
	mov.u32 	%r357, 2;
	mov.u32 	%r350, 4;
	setp.eq.f32	%p97, %f163, 0f3F800000;
	selp.f32	%f750, 0f3F800000, %f994, %p97;
	cvt.u64.u32	%rd89, %r4;
	cvt.u64.u32	%rd88, %r3;
	mov.u64 	%rd92, image;
	cvta.global.u64 	%rd87, %rd92;
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd87, %r357, %r350, %rd88, %rd89, %rd266, %rd266);
	// inline asm
	cvt.sat.f32.f32	%f751, %f750;
	mul.f32 	%f752, %f751, 0f437FFD71;
	cvt.rzi.u32.f32	%r276, %f752;
	cvt.sat.f32.f32	%f753, %f190;
	mul.f32 	%f754, %f753, 0f437FFD71;
	cvt.rzi.u32.f32	%r277, %f754;
	cvt.sat.f32.f32	%f755, %f177;
	mul.f32 	%f756, %f755, 0f437FFD71;
	cvt.rzi.u32.f32	%r278, %f756;
	cvt.u16.u32	%rs40, %r276;
	cvt.u16.u32	%rs41, %r278;
	cvt.u16.u32	%rs42, %r277;
	mov.u16 	%rs43, 255;
	st.v4.u8 	[%rd86], {%rs40, %rs42, %rs41, %rs43};
	ld.global.u32 	%r404, [imageEnabled];

BB0_97:
	cvt.u64.u32	%rd18, %r3;
	cvt.u64.u32	%rd19, %r4;
	and.b32  	%r279, %r404, 4;
	setp.eq.s32	%p98, %r279, 0;
	@%p98 bra 	BB0_101;

	ld.global.u32 	%r280, [additive];
	setp.eq.s32	%p99, %r280, 0;
	mov.f32 	%f757, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f757;}

	// inline asm
	@%p99 bra 	BB0_100;

	mov.u64 	%rd267, 0;
	mov.u32 	%r358, 2;
	mov.u64 	%rd105, image_HDR;
	cvta.global.u64 	%rd94, %rd105;
	mov.u32 	%r284, 8;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r358, %r284, %rd18, %rd19, %rd267, %rd267);
	// inline asm
	ld.v4.u16 	{%rs51, %rs52, %rs53, %rs54}, [%rd93];
	// inline asm
	{  cvt.f32.f16 %f758, %rs51;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f759, %rs52;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f760, %rs53;}

	// inline asm
	// inline asm
	call (%rd99), _rt_buffer_get_64, (%rd94, %r358, %r284, %rd18, %rd19, %rd267, %rd267);
	// inline asm
	add.f32 	%f761, %f161, %f758;
	add.f32 	%f762, %f162, %f759;
	add.f32 	%f763, %f163, %f760;
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f763;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f762;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f761;}

	// inline asm
	st.v4.u16 	[%rd99], {%rs48, %rs49, %rs50, %rs44};
	bra.uni 	BB0_101;

BB0_100:
	mov.u64 	%rd268, 0;
	mov.u32 	%r359, 2;
	mov.u64 	%rd112, image_HDR;
	cvta.global.u64 	%rd107, %rd112;
	mov.u32 	%r286, 8;
	// inline asm
	call (%rd106), _rt_buffer_get_64, (%rd107, %r359, %r286, %rd18, %rd19, %rd268, %rd268);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f163;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f162;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f161;}

	// inline asm
	st.v4.u16 	[%rd106], {%rs55, %rs56, %rs57, %rs44};

BB0_101:
	ld.global.f32 	%f768, [skyColor];
	mul.f32 	%f769, %f152, %f768;
	ld.global.f32 	%f770, [skyColor+4];
	mul.f32 	%f771, %f153, %f770;
	ld.global.f32 	%f772, [skyColor+8];
	mul.f32 	%f773, %f154, %f772;
	mul.f32 	%f774, %f155, %f768;
	mul.f32 	%f775, %f156, %f770;
	mul.f32 	%f776, %f157, %f772;
	mul.f32 	%f777, %f158, %f768;
	mul.f32 	%f778, %f159, %f770;
	mul.f32 	%f779, %f160, %f772;
	add.f32 	%f780, %f769, %f774;
	add.f32 	%f781, %f771, %f775;
	add.f32 	%f782, %f773, %f776;
	add.f32 	%f783, %f780, %f777;
	add.f32 	%f784, %f781, %f778;
	add.f32 	%f785, %f782, %f779;
	mul.f32 	%f786, %f783, 0f3F13CD3A;
	mul.f32 	%f787, %f784, 0f3F13CD3A;
	mul.f32 	%f788, %f785, 0f3F13CD3A;
	div.rn.f32 	%f789, %f161, %f786;
	div.rn.f32 	%f790, %f162, %f787;
	div.rn.f32 	%f791, %f163, %f788;
	setp.eq.f32	%p100, %f161, 0f00000000;
	selp.f32	%f792, 0f00000000, %f789, %p100;
	setp.eq.f32	%p101, %f162, 0f00000000;
	selp.f32	%f793, 0f00000000, %f790, %p101;
	setp.eq.f32	%p102, %f163, 0f00000000;
	selp.f32	%f794, 0f00000000, %f791, %p102;
	mul.f32 	%f203, %f769, %f792;
	mul.f32 	%f204, %f771, %f793;
	mul.f32 	%f205, %f773, %f794;
	mul.f32 	%f206, %f774, %f792;
	mul.f32 	%f207, %f775, %f793;
	mul.f32 	%f208, %f776, %f794;
	mul.f32 	%f209, %f777, %f792;
	mul.f32 	%f210, %f778, %f793;
	mul.f32 	%f211, %f779, %f794;
	ld.global.u32 	%r287, [additive];
	setp.eq.s32	%p103, %r287, 0;
	mov.f32 	%f767, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f767;}

	// inline asm
	@%p103 bra 	BB0_103;

	mov.u64 	%rd269, 0;
	mov.u32 	%r360, 2;
	mov.u64 	%rd125, image_RNM0;
	cvta.global.u64 	%rd114, %rd125;
	mov.u32 	%r291, 8;
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd114, %r360, %r291, %rd18, %rd19, %rd269, %rd269);
	// inline asm
	ld.v4.u16 	{%rs65, %rs66, %rs67, %rs68}, [%rd113];
	// inline asm
	{  cvt.f32.f16 %f795, %rs65;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f796, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f797, %rs67;}

	// inline asm
	// inline asm
	call (%rd119), _rt_buffer_get_64, (%rd114, %r360, %r291, %rd18, %rd19, %rd269, %rd269);
	// inline asm
	add.f32 	%f798, %f203, %f795;
	add.f32 	%f799, %f204, %f796;
	add.f32 	%f800, %f205, %f797;
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f800;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f799;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f798;}

	// inline asm
	st.v4.u16 	[%rd119], {%rs62, %rs63, %rs64, %rs58};
	bra.uni 	BB0_104;

BB0_103:
	mov.u64 	%rd274, 0;
	mov.u32 	%r365, 2;
	mov.u64 	%rd132, image_RNM0;
	cvta.global.u64 	%rd127, %rd132;
	mov.u32 	%r293, 8;
	// inline asm
	call (%rd126), _rt_buffer_get_64, (%rd127, %r365, %r293, %rd18, %rd19, %rd274, %rd274);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f205;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f204;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f203;}

	// inline asm
	st.v4.u16 	[%rd126], {%rs69, %rs70, %rs71, %rs58};

BB0_104:
	ld.global.u32 	%r294, [additive];
	setp.eq.s32	%p104, %r294, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f767;}

	// inline asm
	@%p104 bra 	BB0_106;

	mov.u64 	%rd270, 0;
	mov.u32 	%r361, 2;
	mov.u64 	%rd145, image_RNM1;
	cvta.global.u64 	%rd134, %rd145;
	mov.u32 	%r298, 8;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r361, %r298, %rd18, %rd19, %rd270, %rd270);
	// inline asm
	ld.v4.u16 	{%rs79, %rs80, %rs81, %rs82}, [%rd133];
	// inline asm
	{  cvt.f32.f16 %f805, %rs79;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f806, %rs80;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f807, %rs81;}

	// inline asm
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd134, %r361, %r298, %rd18, %rd19, %rd270, %rd270);
	// inline asm
	add.f32 	%f808, %f206, %f805;
	add.f32 	%f809, %f207, %f806;
	add.f32 	%f810, %f208, %f807;
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f810;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f809;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f808;}

	// inline asm
	st.v4.u16 	[%rd139], {%rs76, %rs77, %rs78, %rs72};
	bra.uni 	BB0_107;

BB0_106:
	mov.u64 	%rd273, 0;
	mov.u32 	%r364, 2;
	mov.u64 	%rd152, image_RNM1;
	cvta.global.u64 	%rd147, %rd152;
	mov.u32 	%r300, 8;
	// inline asm
	call (%rd146), _rt_buffer_get_64, (%rd147, %r364, %r300, %rd18, %rd19, %rd273, %rd273);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f208;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs84, %f207;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f206;}

	// inline asm
	st.v4.u16 	[%rd146], {%rs83, %rs84, %rs85, %rs72};

BB0_107:
	ld.global.u32 	%r301, [additive];
	setp.eq.s32	%p105, %r301, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f767;}

	// inline asm
	@%p105 bra 	BB0_109;

	mov.u64 	%rd271, 0;
	mov.u32 	%r362, 2;
	mov.u64 	%rd165, image_RNM2;
	cvta.global.u64 	%rd154, %rd165;
	mov.u32 	%r305, 8;
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd154, %r362, %r305, %rd18, %rd19, %rd271, %rd271);
	// inline asm
	ld.v4.u16 	{%rs93, %rs94, %rs95, %rs96}, [%rd153];
	// inline asm
	{  cvt.f32.f16 %f815, %rs93;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f816, %rs94;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f817, %rs95;}

	// inline asm
	// inline asm
	call (%rd159), _rt_buffer_get_64, (%rd154, %r362, %r305, %rd18, %rd19, %rd271, %rd271);
	// inline asm
	add.f32 	%f818, %f209, %f815;
	add.f32 	%f819, %f210, %f816;
	add.f32 	%f820, %f211, %f817;
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f820;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f819;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f818;}

	// inline asm
	st.v4.u16 	[%rd159], {%rs90, %rs91, %rs92, %rs86};
	bra.uni 	BB0_125;

BB0_109:
	mov.u64 	%rd272, 0;
	mov.u32 	%r363, 2;
	mov.u64 	%rd172, image_RNM2;
	cvta.global.u64 	%rd167, %rd172;
	mov.u32 	%r307, 8;
	// inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r363, %r307, %rd18, %rd19, %rd272, %rd272);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f211;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f210;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f209;}

	// inline asm
	st.v4.u16 	[%rd166], {%rs97, %rs98, %rs99, %rs86};

BB0_125:
	ret;
}


