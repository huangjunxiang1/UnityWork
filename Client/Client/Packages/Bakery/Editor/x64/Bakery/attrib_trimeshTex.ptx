//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z11interpolatei
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 8 .b8 texCoords[8];
.global .align 4 .f32 triAlpha;
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 index_buffer[1];
.global .align 4 .u32 firstAlphaTriangle;
.global .align 1 .b8 vertex_buffer_uv[1];
.global .align 1 .b8 triangleAlphaIDs[1];
.global .align 1 .b8 alphaTextures[1];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9texCoordsE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8triAlphaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18firstAlphaTriangleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9texCoordsE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8triAlphaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename18firstAlphaTriangleE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename3rayE[4] = {82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9texCoordsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8triAlphaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18firstAlphaTriangleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic9texCoordsE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 67, 111, 111, 114, 100, 115, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic8triAlphaE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 114, 105, 65, 108, 112, 104, 97, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic18firstAlphaTriangleE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9texCoordsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8triAlphaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18firstAlphaTriangleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z11interpolatei(
	.param .u32 _Z11interpolatei_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<88>;
	.reg .b32 	%r<45>;
	.reg .b64 	%rd<95>;


	ld.param.u32 	%r5, [_Z11interpolatei_param_0];
	// inline asm
	call (%f15, %f16), _rt_get_triangle_barycentrics, ();
	// inline asm
	cvt.s64.s32	%rd4, %r5;
	mov.u64 	%rd8, index_buffer;
	cvta.global.u64 	%rd3, %rd8;
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 12;
	mov.u64 	%rd7, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r6, %r7, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%r1, [%rd2];
	ld.u32 	%r2, [%rd2+4];
	ld.u32 	%r3, [%rd2+8];
	ld.global.u32 	%r4, [firstAlphaTriangle];
	setp.gt.s32	%p1, %r4, %r5;
	mov.f32 	%f85, 0f3F800000;
	sub.f32 	%f18, %f85, %f15;
	sub.f32 	%f3, %f18, %f16;
	@%p1 bra 	BB0_2;

	cvt.s64.s32	%rd29, %r3;
	sub.s32 	%r26, %r5, %r4;
	cvt.s64.s32	%rd11, %r26;
	mov.u64 	%rd54, triangleAlphaIDs;
	cvta.global.u64 	%rd10, %rd54;
	mov.u32 	%r22, 4;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r6, %r22, %rd11, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%rd55, [%rd9];
	cvt.u32.u64	%r27, %rd55;
	shr.u32 	%r28, %r27, 16;
	cvt.s64.s32	%rd17, %r1;
	mov.u64 	%rd56, vertex_buffer_uv;
	cvta.global.u64 	%rd16, %rd56;
	mov.u32 	%r15, 8;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r6, %r15, %rd17, %rd7, %rd7, %rd7);
	// inline asm
	ld.v2.f32 	{%f19, %f20}, [%rd15];
	cvt.s64.s32	%rd23, %r2;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd16, %r6, %r15, %rd23, %rd7, %rd7, %rd7);
	// inline asm
	ld.v2.f32 	{%f23, %f24}, [%rd21];
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd16, %r6, %r15, %rd29, %rd7, %rd7, %rd7);
	// inline asm
	mul.f32 	%f27, %f15, %f23;
	mul.f32 	%f28, %f15, %f24;
	fma.rn.f32 	%f29, %f3, %f19, %f27;
	fma.rn.f32 	%f30, %f3, %f20, %f28;
	ld.v2.f32 	{%f31, %f32}, [%rd27];
	fma.rn.f32 	%f35, %f16, %f31, %f29;
	fma.rn.f32 	%f36, %f16, %f32, %f30;
	abs.f32 	%f37, %f35;
	cvt.rmi.f32.f32	%f38, %f37;
	sub.f32 	%f39, %f37, %f38;
	abs.f32 	%f40, %f36;
	cvt.rmi.f32.f32	%f41, %f40;
	sub.f32 	%f42, %f40, %f41;
	and.b64  	%rd35, %rd55, 65535;
	mov.u64 	%rd57, alphaTextures;
	cvta.global.u64 	%rd34, %rd57;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r6, %r22, %rd35, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%r18, [%rd33];
	mov.u32 	%r24, 2;
	// inline asm
	call (%rd39, %rd40, %rd41, %rd42), _rt_buffer_get_id_size_64, (%r18, %r24, %r6);
	// inline asm
	cvt.rn.f32.u64	%f43, %rd39;
	mul.f32 	%f44, %f39, %f43;
	cvt.rzi.u32.f32	%r29, %f44;
	cvt.rn.f32.u64	%f45, %rd40;
	mul.f32 	%f46, %f42, %f45;
	cvt.rzi.u32.f32	%r30, %f46;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd34, %r6, %r22, %rd35, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%r23, [%rd43];
	cvt.u64.u32	%rd50, %r29;
	cvt.u64.u32	%rd51, %r30;
	// inline asm
	call (%rd49), _rt_buffer_get_id_64, (%r23, %r24, %r6, %rd50, %rd51, %rd7, %rd7);
	// inline asm
	ld.u8 	%r31, [%rd49];
	and.b32  	%r32, %r31, %r28;
	setp.eq.s32	%p2, %r32, 0;
	selp.f32	%f85, 0f00000000, 0f3F800000, %p2;

BB0_2:
	st.global.f32 	[triAlpha], %f85;
	cvt.s64.s32	%rd78, %r1;
	mov.u64 	%rd94, vertex_buffer;
	cvta.global.u64 	%rd59, %rd94;
	mov.u32 	%r44, 32;
	// inline asm
	call (%rd58), _rt_buffer_get_64, (%rd59, %r6, %r44, %rd78, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f47, [%rd58+20];
	ld.f32 	%f48, [%rd58+16];
	ld.f32 	%f49, [%rd58+12];
	cvt.s64.s32	%rd84, %r2;
	// inline asm
	call (%rd64), _rt_buffer_get_64, (%rd59, %r6, %r44, %rd84, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f50, [%rd64+20];
	ld.f32 	%f51, [%rd64+16];
	ld.f32 	%f52, [%rd64+12];
	cvt.s64.s32	%rd90, %r3;
	// inline asm
	call (%rd70), _rt_buffer_get_64, (%rd59, %r6, %r44, %rd90, %rd7, %rd7, %rd7);
	// inline asm
	mul.f32 	%f53, %f15, %f52;
	mul.f32 	%f54, %f15, %f51;
	mul.f32 	%f55, %f15, %f50;
	fma.rn.f32 	%f56, %f3, %f49, %f53;
	fma.rn.f32 	%f57, %f3, %f48, %f54;
	fma.rn.f32 	%f58, %f3, %f47, %f55;
	ld.f32 	%f59, [%rd70+20];
	ld.f32 	%f60, [%rd70+16];
	ld.f32 	%f61, [%rd70+12];
	fma.rn.f32 	%f62, %f16, %f61, %f56;
	fma.rn.f32 	%f63, %f16, %f60, %f57;
	fma.rn.f32 	%f64, %f16, %f59, %f58;
	mul.f32 	%f65, %f63, %f63;
	fma.rn.f32 	%f66, %f62, %f62, %f65;
	fma.rn.f32 	%f67, %f64, %f64, %f66;
	sqrt.rn.f32 	%f68, %f67;
	rcp.rn.f32 	%f69, %f68;
	mul.f32 	%f70, %f69, %f62;
	mul.f32 	%f71, %f69, %f63;
	mul.f32 	%f72, %f69, %f64;
	st.global.f32 	[normal], %f70;
	st.global.f32 	[normal+4], %f71;
	st.global.f32 	[normal+8], %f72;
	// inline asm
	call (%rd76), _rt_buffer_get_64, (%rd59, %r6, %r44, %rd78, %rd7, %rd7, %rd7);
	// inline asm
	ld.v2.f32 	{%f86, %f74}, [%rd76+24];
	// inline asm
	call (%rd82), _rt_buffer_get_64, (%rd59, %r6, %r44, %rd84, %rd7, %rd7, %rd7);
	// inline asm
	ld.v2.f32 	{%f75, %f76}, [%rd82+24];
	// inline asm
	call (%rd88), _rt_buffer_get_64, (%rd59, %r6, %r44, %rd90, %rd7, %rd7, %rd7);
	// inline asm
	setp.lt.f32	%p3, %f74, 0f00000000;
	@%p3 bra 	BB0_4;
	bra.uni 	BB0_3;

BB0_4:
	add.f32 	%f87, %f74, 0f3F800000;
	bra.uni 	BB0_5;

BB0_3:
	ld.v2.f32 	{%f77, %f78}, [%rd88+24];
	mul.f32 	%f81, %f15, %f75;
	mul.f32 	%f82, %f15, %f76;
	fma.rn.f32 	%f83, %f3, %f86, %f81;
	fma.rn.f32 	%f84, %f3, %f74, %f82;
	fma.rn.f32 	%f86, %f16, %f77, %f83;
	fma.rn.f32 	%f87, %f16, %f78, %f84;

BB0_5:
	st.global.v2.f32 	[texCoords], {%f86, %f87};
	ret;
}


