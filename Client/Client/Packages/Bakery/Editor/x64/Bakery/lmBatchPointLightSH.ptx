//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 4 .u32 ignoreNormal;
.global .align 1 .b8 localLights[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<165>;
	.reg .b16 	%rs<162>;
	.reg .f32 	%f<1575>;
	.reg .b32 	%r<273>;
	.reg .b64 	%rd<272>;


	mov.u64 	%rd271, __local_depot0;
	cvta.local.u64 	%SP, %rd271;
	ld.global.v2.u32 	{%r30, %r31}, [pixelID];
	cvt.u64.u32	%rd10, %r30;
	cvt.u64.u32	%rd11, %r31;
	mov.u64 	%rd14, uvnormal;
	cvta.global.u64 	%rd9, %rd14;
	mov.u32 	%r28, 2;
	mov.u32 	%r29, 4;
	mov.u64 	%rd13, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r28, %r29, %rd10, %rd11, %rd13, %rd13);
	// inline asm
	ld.u32 	%r1, [%rd8];
	shr.u32 	%r34, %r1, 16;
	cvt.u16.u32	%rs1, %r34;
	and.b16  	%rs9, %rs1, 255;
	cvt.u16.u32	%rs10, %r1;
	or.b16  	%rs11, %rs10, %rs9;
	setp.eq.s16	%p9, %rs11, 0;
	mov.f32 	%f1480, 0f00000000;
	mov.f32 	%f1481, %f1480;
	mov.f32 	%f1482, %f1480;
	@%p9 bra 	BB0_2;

	ld.u8 	%rs12, [%rd8+1];
	and.b16  	%rs14, %rs10, 255;
	cvt.rn.f32.u16	%f288, %rs14;
	div.rn.f32 	%f289, %f288, 0f437F0000;
	fma.rn.f32 	%f290, %f289, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f291, %rs12;
	div.rn.f32 	%f292, %f291, 0f437F0000;
	fma.rn.f32 	%f293, %f292, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f294, %rs9;
	div.rn.f32 	%f295, %f294, 0f437F0000;
	fma.rn.f32 	%f296, %f295, 0f40000000, 0fBF800000;
	mul.f32 	%f297, %f293, %f293;
	fma.rn.f32 	%f298, %f290, %f290, %f297;
	fma.rn.f32 	%f299, %f296, %f296, %f298;
	sqrt.rn.f32 	%f300, %f299;
	rcp.rn.f32 	%f301, %f300;
	mul.f32 	%f1480, %f290, %f301;
	mul.f32 	%f1481, %f293, %f301;
	mul.f32 	%f1482, %f296, %f301;

BB0_2:
	ld.global.v2.u32 	{%r35, %r36}, [pixelID];
	ld.global.v2.u32 	{%r38, %r39}, [tileInfo];
	add.s32 	%r2, %r35, %r38;
	add.s32 	%r3, %r36, %r39;
	setp.eq.f32	%p10, %f1481, 0f00000000;
	setp.eq.f32	%p11, %f1480, 0f00000000;
	and.pred  	%p12, %p11, %p10;
	setp.eq.f32	%p13, %f1482, 0f00000000;
	and.pred  	%p14, %p12, %p13;
	@%p14 bra 	BB0_121;
	bra.uni 	BB0_3;

BB0_121:
	ld.global.u32 	%r272, [imageEnabled];
	and.b32  	%r221, %r272, 1;
	setp.eq.b32	%p156, %r221, 1;
	@!%p156 bra 	BB0_123;
	bra.uni 	BB0_122;

BB0_122:
	cvt.u64.u32	%rd159, %r2;
	cvt.u64.u32	%rd160, %r3;
	mov.u64 	%rd163, image;
	cvta.global.u64 	%rd158, %rd163;
	// inline asm
	call (%rd157), _rt_buffer_get_64, (%rd158, %r28, %r29, %rd159, %rd160, %rd13, %rd13);
	// inline asm
	mov.u16 	%rs93, 0;
	st.v4.u8 	[%rd157], {%rs93, %rs93, %rs93, %rs93};
	ld.global.u32 	%r272, [imageEnabled];

BB0_123:
	and.b32  	%r224, %r272, 8;
	setp.eq.s32	%p157, %r224, 0;
	@%p157 bra 	BB0_125;

	cvt.u64.u32	%rd167, %r3;
	cvt.u64.u32	%rd166, %r2;
	mov.u64 	%rd170, image_Mask;
	cvta.global.u64 	%rd165, %rd170;
	// inline asm
	call (%rd164), _rt_buffer_get_64, (%rd165, %r28, %r28, %rd166, %rd167, %rd13, %rd13);
	// inline asm
	mov.f32 	%f1437, 0f00000000;
	cvt.rzi.u32.f32	%r227, %f1437;
	cvt.u16.u32	%rs94, %r227;
	mov.u16 	%rs95, 0;
	st.v2.u8 	[%rd164], {%rs94, %rs95};
	ld.global.u32 	%r272, [imageEnabled];

BB0_125:
	cvt.u64.u32	%rd6, %r2;
	cvt.u64.u32	%rd7, %r3;
	and.b32  	%r228, %r272, 4;
	setp.eq.s32	%p158, %r228, 0;
	@%p158 bra 	BB0_129;

	ld.global.u32 	%r229, [additive];
	setp.eq.s32	%p159, %r229, 0;
	@%p159 bra 	BB0_128;

	mov.u64 	%rd183, image_HDR;
	cvta.global.u64 	%rd172, %rd183;
	mov.u32 	%r233, 8;
	// inline asm
	call (%rd171), _rt_buffer_get_64, (%rd172, %r28, %r233, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs102, %rs103, %rs104, %rs105}, [%rd171];
	// inline asm
	{  cvt.f32.f16 %f1438, %rs102;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1439, %rs103;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1440, %rs104;}

	// inline asm
	// inline asm
	call (%rd177), _rt_buffer_get_64, (%rd172, %r28, %r233, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	add.f32 	%f1441, %f1438, 0f00000000;
	add.f32 	%f1442, %f1439, 0f00000000;
	add.f32 	%f1443, %f1440, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f1443;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f1442;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f1441;}

	// inline asm
	mov.u16 	%rs106, 0;
	st.v4.u16 	[%rd177], {%rs99, %rs100, %rs101, %rs106};
	bra.uni 	BB0_129;

BB0_3:
	ld.global.v2.u32 	{%r47, %r48}, [pixelID];
	cvt.u64.u32	%rd17, %r47;
	cvt.u64.u32	%rd18, %r48;
	mov.u64 	%rd26, uvpos;
	cvta.global.u64 	%rd16, %rd26;
	mov.u32 	%r44, 12;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r28, %r44, %rd17, %rd18, %rd13, %rd13);
	// inline asm
	ld.f32 	%f9, [%rd15+8];
	ld.f32 	%f8, [%rd15+4];
	ld.f32 	%f7, [%rd15];
	mul.f32 	%f318, %f7, 0f3456BF95;
	mul.f32 	%f319, %f8, 0f3456BF95;
	mul.f32 	%f320, %f9, 0f3456BF95;
	abs.f32 	%f321, %f1480;
	div.rn.f32 	%f322, %f318, %f321;
	abs.f32 	%f323, %f1481;
	div.rn.f32 	%f324, %f319, %f323;
	abs.f32 	%f325, %f1482;
	div.rn.f32 	%f326, %f320, %f325;
	abs.f32 	%f327, %f322;
	abs.f32 	%f328, %f324;
	abs.f32 	%f329, %f326;
	mov.f32 	%f330, 0f38D1B717;
	max.f32 	%f331, %f327, %f330;
	max.f32 	%f332, %f328, %f330;
	max.f32 	%f333, %f329, %f330;
	fma.rn.f32 	%f10, %f1480, %f331, %f7;
	fma.rn.f32 	%f11, %f1481, %f332, %f8;
	fma.rn.f32 	%f12, %f1482, %f333, %f9;
	ld.global.v2.u32 	{%r51, %r52}, [pixelID];
	cvt.rn.f32.u32	%f13, %r51;
	cvt.rn.f32.u32	%f14, %r52;
	mov.u64 	%rd27, localLights;
	cvta.global.u64 	%rd25, %rd27;
	mov.u32 	%r45, 1;
	mov.u32 	%r46, 96;
	// inline asm
	call (%rd21, %rd22, %rd23, %rd24), _rt_buffer_get_size_64, (%rd25, %r45, %r46);
	// inline asm
	cvt.u32.u64	%r4, %rd21;
	setp.eq.s32	%p15, %r4, 0;
	mov.f32 	%f1483, 0f00000000;
	mov.f32 	%f1484, %f1483;
	mov.f32 	%f1485, %f1483;
	mov.f32 	%f1486, %f1483;
	mov.f32 	%f1487, %f1483;
	mov.f32 	%f1488, %f1483;
	mov.f32 	%f1489, %f1483;
	mov.f32 	%f1490, %f1483;
	mov.f32 	%f1491, %f1483;
	mov.f32 	%f1492, %f1483;
	mov.f32 	%f1493, %f1483;
	mov.f32 	%f1494, %f1483;
	mov.f32 	%f1495, %f1483;
	mov.f32 	%f1496, %f1483;
	mov.f32 	%f1497, %f1483;
	mov.f32 	%f1498, %f1483;
	@%p15 bra 	BB0_57;

	mov.f32 	%f350, 0f40000000;
	cvt.rzi.f32.f32	%f351, %f350;
	add.f32 	%f352, %f351, %f351;
	mov.f32 	%f353, 0f40800000;
	sub.f32 	%f354, %f353, %f352;
	abs.f32 	%f15, %f354;
	mul.f32 	%f16, %f10, 0f3456BF95;
	mul.f32 	%f17, %f11, 0f3456BF95;
	mul.f32 	%f18, %f12, 0f3456BF95;
	mul.f32 	%f19, %f13, 0f3DD32618;
	mul.f32 	%f20, %f14, 0f3DD2F1AA;
	mov.f32 	%f349, 0f00000000;
	mov.u32 	%r264, 0;
	abs.f32 	%f547, %f16;
	abs.f32 	%f548, %f17;
	max.f32 	%f549, %f547, %f548;
	abs.f32 	%f550, %f18;
	max.f32 	%f551, %f549, %f550;
	mov.f32 	%f1483, %f349;
	mov.f32 	%f1484, %f349;
	mov.f32 	%f1485, %f349;
	mov.f32 	%f1486, %f349;
	mov.f32 	%f1487, %f349;
	mov.f32 	%f1488, %f349;
	mov.f32 	%f1489, %f349;
	mov.f32 	%f1490, %f349;
	mov.f32 	%f1491, %f349;
	mov.f32 	%f1492, %f349;
	mov.f32 	%f1493, %f349;
	mov.f32 	%f1494, %f349;
	mov.f32 	%f1495, %f349;
	mov.f32 	%f1496, %f349;
	mov.f32 	%f1497, %f349;
	mov.f32 	%f1498, %f349;

BB0_5:
	cvt.u64.u32	%rd30, %r264;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd25, %r45, %r46, %rd30, %rd13, %rd13, %rd13);
	// inline asm
	ld.v4.f32 	{%f357, %f358, %f359, %f360}, [%rd28+80];
	ld.v4.f32 	{%f361, %f362, %f363, %f364}, [%rd28+64];
	ld.v4.f32 	{%f365, %f366, %f367, %f368}, [%rd28+48];
	ld.v4.f32 	{%f369, %f1503, %f1504, %f372}, [%rd28+32];
	ld.v4.f32 	{%f373, %f374, %f375, %f376}, [%rd28+16];
	ld.v4.f32 	{%f377, %f378, %f379, %f380}, [%rd28];
	mov.b32 	 %r6, %f360;
	sub.f32 	%f382, %f378, %f7;
	sub.f32 	%f383, %f379, %f8;
	sub.f32 	%f384, %f380, %f9;
	mul.f32 	%f385, %f383, %f383;
	fma.rn.f32 	%f386, %f382, %f382, %f385;
	fma.rn.f32 	%f387, %f384, %f384, %f386;
	sqrt.rn.f32 	%f63, %f387;
	rcp.rn.f32 	%f388, %f63;
	mul.f32 	%f64, %f382, %f388;
	mul.f32 	%f65, %f383, %f388;
	mul.f32 	%f66, %f384, %f388;
	mul.f32 	%f67, %f63, %f376;
	abs.f32 	%f68, %f67;
	setp.lt.f32	%p16, %f68, 0f00800000;
	mul.f32 	%f389, %f68, 0f4B800000;
	selp.f32	%f390, 0fC3170000, 0fC2FE0000, %p16;
	selp.f32	%f391, %f389, %f68, %p16;
	mov.b32 	 %r58, %f391;
	and.b32  	%r59, %r58, 8388607;
	or.b32  	%r60, %r59, 1065353216;
	mov.b32 	 %f392, %r60;
	shr.u32 	%r61, %r58, 23;
	cvt.rn.f32.u32	%f393, %r61;
	add.f32 	%f394, %f390, %f393;
	setp.gt.f32	%p17, %f392, 0f3FB504F3;
	mul.f32 	%f395, %f392, 0f3F000000;
	add.f32 	%f396, %f394, 0f3F800000;
	selp.f32	%f397, %f395, %f392, %p17;
	selp.f32	%f398, %f396, %f394, %p17;
	add.f32 	%f399, %f397, 0fBF800000;
	add.f32 	%f356, %f397, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f355,%f356;
	// inline asm
	add.f32 	%f400, %f399, %f399;
	mul.f32 	%f401, %f355, %f400;
	mul.f32 	%f402, %f401, %f401;
	mov.f32 	%f403, 0f3C4CAF63;
	mov.f32 	%f404, 0f3B18F0FE;
	fma.rn.f32 	%f405, %f404, %f402, %f403;
	mov.f32 	%f406, 0f3DAAAABD;
	fma.rn.f32 	%f407, %f405, %f402, %f406;
	mul.rn.f32 	%f408, %f407, %f402;
	mul.rn.f32 	%f409, %f408, %f401;
	sub.f32 	%f410, %f399, %f401;
	neg.f32 	%f411, %f401;
	add.f32 	%f412, %f410, %f410;
	fma.rn.f32 	%f413, %f411, %f399, %f412;
	mul.rn.f32 	%f414, %f355, %f413;
	add.f32 	%f415, %f409, %f401;
	sub.f32 	%f416, %f401, %f415;
	add.f32 	%f417, %f409, %f416;
	add.f32 	%f418, %f414, %f417;
	add.f32 	%f419, %f415, %f418;
	sub.f32 	%f420, %f415, %f419;
	add.f32 	%f421, %f418, %f420;
	mov.f32 	%f422, 0f3F317200;
	mul.rn.f32 	%f423, %f398, %f422;
	mov.f32 	%f424, 0f35BFBE8E;
	mul.rn.f32 	%f425, %f398, %f424;
	add.f32 	%f426, %f423, %f419;
	sub.f32 	%f427, %f423, %f426;
	add.f32 	%f428, %f419, %f427;
	add.f32 	%f429, %f421, %f428;
	add.f32 	%f430, %f425, %f429;
	add.f32 	%f431, %f426, %f430;
	sub.f32 	%f432, %f426, %f431;
	add.f32 	%f433, %f430, %f432;
	mul.rn.f32 	%f69, %f353, %f431;
	neg.f32 	%f435, %f69;
	fma.rn.f32 	%f436, %f353, %f431, %f435;
	fma.rn.f32 	%f437, %f353, %f433, %f436;
	fma.rn.f32 	%f70, %f349, %f431, %f437;
	add.rn.f32 	%f71, %f69, %f70;
	mov.b32 	 %r62, %f71;
	setp.eq.s32	%p1, %r62, 1118925336;
	add.s32 	%r63, %r62, -1;
	mov.b32 	 %f439, %r63;
	selp.f32	%f440, %f439, %f71, %p1;
	mul.f32 	%f441, %f440, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f442, %f441;
	mov.f32 	%f443, 0fBF317200;
	fma.rn.f32 	%f444, %f442, %f443, %f440;
	mov.f32 	%f445, 0fB5BFBE8E;
	fma.rn.f32 	%f446, %f442, %f445, %f444;
	mul.f32 	%f447, %f446, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f448, %f447;
	add.f32 	%f449, %f442, 0f00000000;
	ex2.approx.f32 	%f450, %f449;
	mul.f32 	%f451, %f448, %f450;
	setp.lt.f32	%p18, %f440, 0fC2D20000;
	selp.f32	%f452, 0f00000000, %f451, %p18;
	setp.gt.f32	%p19, %f440, 0f42D20000;
	selp.f32	%f1499, 0f7F800000, %f452, %p19;
	setp.eq.f32	%p20, %f1499, 0f7F800000;
	@%p20 bra 	BB0_7;

	neg.f32 	%f453, %f71;
	add.rn.f32 	%f454, %f69, %f453;
	add.rn.f32 	%f455, %f454, %f70;
	add.f32 	%f456, %f455, 0f37000000;
	selp.f32	%f457, %f456, %f455, %p1;
	fma.rn.f32 	%f1499, %f1499, %f457, %f1499;

BB0_7:
	setp.lt.f32	%p21, %f67, 0f00000000;
	setp.eq.f32	%p22, %f15, 0f3F800000;
	and.pred  	%p2, %p21, %p22;
	mov.b32 	 %r64, %f1499;
	xor.b32  	%r65, %r64, -2147483648;
	mov.b32 	 %f458, %r65;
	selp.f32	%f1501, %f458, %f1499, %p2;
	setp.eq.f32	%p23, %f67, 0f00000000;
	@%p23 bra 	BB0_10;
	bra.uni 	BB0_8;

BB0_10:
	add.f32 	%f461, %f67, %f67;
	selp.f32	%f1501, %f461, 0f00000000, %p22;
	bra.uni 	BB0_11;

BB0_8:
	setp.geu.f32	%p24, %f67, 0f00000000;
	@%p24 bra 	BB0_11;

	cvt.rzi.f32.f32	%f460, %f353;
	setp.neu.f32	%p25, %f460, 0f40800000;
	selp.f32	%f1501, 0f7FFFFFFF, %f1501, %p25;

BB0_11:
	add.f32 	%f462, %f68, 0f40800000;
	mov.b32 	 %r66, %f462;
	setp.lt.s32	%p27, %r66, 2139095040;
	@%p27 bra 	BB0_16;

	setp.gtu.f32	%p28, %f68, 0f7F800000;
	@%p28 bra 	BB0_15;
	bra.uni 	BB0_13;

BB0_15:
	add.f32 	%f1501, %f67, 0f40800000;
	bra.uni 	BB0_16;

BB0_13:
	setp.neu.f32	%p29, %f68, 0f7F800000;
	@%p29 bra 	BB0_16;

	selp.f32	%f1501, 0fFF800000, 0f7F800000, %p2;

BB0_16:
	mul.f32 	%f463, %f63, %f374;
	mov.f32 	%f1526, 0f3F800000;
	sub.f32 	%f465, %f1526, %f1501;
	setp.eq.f32	%p30, %f67, 0f3F800000;
	selp.f32	%f466, 0f00000000, %f465, %p30;
	cvt.sat.f32.f32	%f467, %f466;
	fma.rn.f32 	%f468, %f463, %f463, %f375;
	div.rn.f32 	%f97, %f467, %f468;
	mul.f32 	%f469, %f1481, %f65;
	fma.rn.f32 	%f470, %f1480, %f64, %f469;
	fma.rn.f32 	%f471, %f1482, %f66, %f470;
	ld.global.u32 	%r67, [ignoreNormal];
	setp.eq.s32	%p31, %r67, 0;
	selp.f32	%f98, %f471, 0f3F800000, %p31;
	mul.f32 	%f472, %f98, 0f40800000;
	cvt.sat.f32.f32	%f99, %f472;
	setp.eq.f32	%p32, %f377, 0f3F800000;
	@%p32 bra 	BB0_23;
	bra.uni 	BB0_17;

BB0_23:
	setp.leu.f32	%p36, %f372, 0f00000000;
	@%p36 bra 	BB0_19;

	mul.f32 	%f503, %f357, %f64;
	mul.f32 	%f504, %f358, %f65;
	neg.f32 	%f505, %f504;
	sub.f32 	%f506, %f505, %f503;
	mul.f32 	%f507, %f359, %f66;
	sub.f32 	%f508, %f506, %f507;
	setp.gt.f32	%p37, %f508, 0f00000000;
	selp.f32	%f509, 0f3F800000, 0f00000000, %p37;
	mul.f32 	%f510, %f366, %f65;
	fma.rn.f32 	%f511, %f365, %f64, %f510;
	mul.f32 	%f512, %f362, %f65;
	fma.rn.f32 	%f513, %f361, %f64, %f512;
	fma.rn.f32 	%f514, %f367, %f66, %f511;
	fma.rn.f32 	%f515, %f363, %f66, %f513;
	fma.rn.f32 	%f516, %f368, %f514, 0f3F000000;
	mov.f32 	%f517, 0f3F800000;
	sub.f32 	%f499, %f517, %f516;
	fma.rn.f32 	%f500, %f368, %f515, 0f3F000000;
	cvt.rzi.s32.f32	%r71, %f372;
	mov.f32 	%f502, 0f00000000;
	// inline asm
	call (%f495, %f496, %f497, %f498), _rt_texture_get_f_id, (%r71, %r28, %f499, %f500, %f502, %f502);
	// inline asm
	mul.f32 	%f518, %f509, %f495;
	mul.f32 	%f519, %f509, %f496;
	mul.f32 	%f520, %f509, %f497;
	mul.f32 	%f1502, %f369, %f518;
	mul.f32 	%f1503, %f1503, %f519;
	mul.f32 	%f1504, %f1504, %f520;
	bra.uni 	BB0_25;

BB0_17:
	setp.eq.f32	%p33, %f377, 0f40000000;
	@%p33 bra 	BB0_21;
	bra.uni 	BB0_18;

BB0_21:
	setp.leu.f32	%p35, %f372, 0f00000000;
	@%p35 bra 	BB0_19;

	mul.f32 	%f489, %f366, %f65;
	fma.rn.f32 	%f490, %f365, %f64, %f489;
	mul.f32 	%f491, %f362, %f65;
	fma.rn.f32 	%f492, %f361, %f64, %f491;
	mul.f32 	%f493, %f358, %f65;
	fma.rn.f32 	%f494, %f357, %f64, %f493;
	fma.rn.f32 	%f486, %f367, %f66, %f490;
	fma.rn.f32 	%f487, %f363, %f66, %f492;
	fma.rn.f32 	%f488, %f359, %f66, %f494;
	cvt.rzi.s32.f32	%r68, %f372;
	mov.u32 	%r69, 6;
	mov.u32 	%r70, 0;
	// inline asm
	call (%f482, %f483, %f484, %f485), _rt_texture_get_base_id, (%r68, %r69, %f486, %f487, %f488, %r70);
	// inline asm
	mul.f32 	%f1502, %f369, %f482;
	mul.f32 	%f1503, %f1503, %f483;
	mul.f32 	%f1504, %f1504, %f484;
	bra.uni 	BB0_25;

BB0_18:
	setp.neu.f32	%p34, %f377, 0f40800000;
	@%p34 bra 	BB0_19;

	mul.f32 	%f473, %f357, %f64;
	mul.f32 	%f474, %f358, %f65;
	neg.f32 	%f475, %f474;
	sub.f32 	%f476, %f475, %f473;
	mul.f32 	%f477, %f359, %f66;
	sub.f32 	%f478, %f476, %f477;
	fma.rn.f32 	%f479, %f372, %f478, %f368;
	cvt.sat.f32.f32	%f480, %f479;
	mul.f32 	%f481, %f480, %f480;
	mul.f32 	%f1505, %f97, %f481;
	mov.f32 	%f1502, %f369;
	bra.uni 	BB0_26;

BB0_19:
	mov.f32 	%f1502, %f369;

BB0_25:
	mov.f32 	%f1505, %f97;

BB0_26:
	max.f32 	%f536, %f1502, %f1503;
	max.f32 	%f537, %f536, %f1504;
	mul.f32 	%f538, %f99, %f1505;
	mul.f32 	%f539, %f538, %f537;
	setp.lt.f32	%p39, %f539, 0f3727C5AC;
	mov.pred 	%p164, -1;
	mov.f32 	%f1506, 0f00000000;
	mov.f32 	%f1507, %f1506;
	mov.f32 	%f1508, %f1506;
	mov.f32 	%f129, %f1506;
	mov.f32 	%f1510, %f1506;
	mov.f32 	%f1511, %f1506;
	mov.f32 	%f132, %f1506;
	mov.f32 	%f1513, %f1506;
	mov.f32 	%f1514, %f1506;
	mov.f32 	%f135, %f1506;
	mov.f32 	%f1516, %f1506;
	mov.f32 	%f1517, %f1506;
	mov.f32 	%f138, %f1506;
	mov.f32 	%f1519, %f1506;
	mov.f32 	%f1520, %f1506;
	@%p39 bra 	BB0_28;

	cvt.sat.f32.f32	%f540, %f98;
	mul.f32 	%f541, %f1505, %f540;
	mul.f32 	%f1506, %f1502, %f541;
	mul.f32 	%f1507, %f1503, %f541;
	mul.f32 	%f1508, %f1504, %f541;
	mul.f32 	%f542, %f1505, 0f3E800000;
	mul.f32 	%f543, %f99, %f542;
	mul.f32 	%f129, %f1502, %f543;
	mul.f32 	%f1510, %f1503, %f543;
	mul.f32 	%f1511, %f1504, %f543;
	mul.f32 	%f132, %f64, %f129;
	mul.f32 	%f1513, %f64, %f1510;
	mul.f32 	%f1514, %f64, %f1511;
	mul.f32 	%f135, %f65, %f129;
	mul.f32 	%f1516, %f65, %f1510;
	mul.f32 	%f1517, %f65, %f1511;
	mul.f32 	%f138, %f66, %f129;
	mul.f32 	%f1519, %f66, %f1510;
	mul.f32 	%f1520, %f66, %f1511;
	mov.pred 	%p164, 0;

BB0_28:
	@%p164 bra 	BB0_56;

	setp.eq.s32	%p41, %r6, 0;
	mov.u16 	%rs161, 0;
	@%p41 bra 	BB0_40;

	abs.s32 	%r8, %r6;
	mov.f32 	%f1525, 0f00000000;
	setp.lt.s32	%p42, %r8, 1;
	@%p42 bra 	BB0_39;

	max.f32 	%f142, %f551, %f330;
	and.b32  	%r9, %r8, 3;
	setp.eq.s32	%p43, %r9, 0;
	add.u64 	%rd35, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd35;
	mov.f32 	%f1525, 0f00000000;
	mov.u32 	%r268, 0;
	@%p43 bra 	BB0_37;

	setp.eq.s32	%p44, %r9, 1;
	mov.f32 	%f1522, 0f00000000;
	mov.u32 	%r266, 0;
	@%p44 bra 	BB0_36;

	setp.eq.s32	%p45, %r9, 2;
	mov.f32 	%f1521, 0f00000000;
	mov.u32 	%r265, 0;
	@%p45 bra 	BB0_35;

	cvt.rmi.f32.f32	%f563, %f19;
	sub.f32 	%f564, %f19, %f563;
	cvt.rmi.f32.f32	%f565, %f20;
	sub.f32 	%f566, %f20, %f565;
	add.f32 	%f567, %f566, 0f420551EC;
	add.f32 	%f568, %f564, 0f420551EC;
	mul.f32 	%f569, %f564, %f567;
	fma.rn.f32 	%f570, %f566, %f568, %f569;
	add.f32 	%f571, %f570, 0f00000000;
	add.f32 	%f572, %f564, %f571;
	add.f32 	%f573, %f566, %f571;
	add.f32 	%f574, %f572, %f573;
	mul.f32 	%f575, %f571, %f574;
	cvt.rmi.f32.f32	%f576, %f575;
	sub.f32 	%f577, %f575, %f576;
	add.f32 	%f578, %f572, %f572;
	mul.f32 	%f579, %f573, %f578;
	cvt.rmi.f32.f32	%f580, %f579;
	sub.f32 	%f581, %f579, %f580;
	mul.f32 	%f582, %f572, %f574;
	cvt.rmi.f32.f32	%f583, %f582;
	sub.f32 	%f584, %f582, %f583;
	fma.rn.f32 	%f585, %f577, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f586, %f581, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f587, %f584, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f588, %f373, %f585, %f378;
	fma.rn.f32 	%f589, %f373, %f586, %f379;
	fma.rn.f32 	%f590, %f373, %f587, %f380;
	sub.f32 	%f591, %f588, %f7;
	sub.f32 	%f592, %f589, %f8;
	sub.f32 	%f593, %f590, %f9;
	mul.f32 	%f594, %f592, %f592;
	fma.rn.f32 	%f595, %f591, %f591, %f594;
	fma.rn.f32 	%f596, %f593, %f593, %f595;
	sqrt.rn.f32 	%f562, %f596;
	rcp.rn.f32 	%f597, %f562;
	mul.f32 	%f558, %f597, %f591;
	mul.f32 	%f559, %f597, %f592;
	mul.f32 	%f560, %f597, %f593;
	ld.global.u32 	%r80, [imageEnabled];
	and.b32  	%r81, %r80, 32;
	setp.eq.s32	%p46, %r81, 0;
	selp.f32	%f598, 0f3F800000, 0f41200000, %p46;
	mul.f32 	%f561, %f598, %f142;
	mov.u32 	%r82, 1065353216;
	st.local.u32 	[%rd2], %r82;
	ld.global.u32 	%r76, [root];
	// inline asm
	call _rt_trace_64, (%r76, %f10, %f11, %f12, %f558, %f559, %f560, %r45, %f561, %f562, %rd35, %r29);
	// inline asm
	ld.local.f32 	%f599, [%rd2];
	add.f32 	%f1521, %f599, 0f00000000;
	mov.u32 	%r265, %r45;

BB0_35:
	cvt.rn.f32.s32	%f608, %r265;
	add.f32 	%f609, %f13, %f608;
	sub.f32 	%f610, %f14, %f608;
	mul.f32 	%f611, %f609, 0f3DD32618;
	cvt.rmi.f32.f32	%f612, %f611;
	sub.f32 	%f613, %f611, %f612;
	mul.f32 	%f614, %f610, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f615, %f614;
	sub.f32 	%f616, %f614, %f615;
	mul.f32 	%f617, %f608, 0f3DC74539;
	cvt.rmi.f32.f32	%f618, %f617;
	sub.f32 	%f619, %f617, %f618;
	add.f32 	%f620, %f616, 0f420551EC;
	add.f32 	%f621, %f613, 0f420551EC;
	add.f32 	%f622, %f619, 0f420551EC;
	mul.f32 	%f623, %f613, %f620;
	fma.rn.f32 	%f624, %f616, %f621, %f623;
	fma.rn.f32 	%f625, %f619, %f622, %f624;
	add.f32 	%f626, %f613, %f625;
	add.f32 	%f627, %f616, %f625;
	add.f32 	%f628, %f619, %f625;
	add.f32 	%f629, %f626, %f627;
	mul.f32 	%f630, %f628, %f629;
	cvt.rmi.f32.f32	%f631, %f630;
	sub.f32 	%f632, %f630, %f631;
	add.f32 	%f633, %f626, %f626;
	mul.f32 	%f634, %f627, %f633;
	cvt.rmi.f32.f32	%f635, %f634;
	sub.f32 	%f636, %f634, %f635;
	mul.f32 	%f637, %f626, %f629;
	cvt.rmi.f32.f32	%f638, %f637;
	sub.f32 	%f639, %f637, %f638;
	fma.rn.f32 	%f640, %f632, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f641, %f636, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f642, %f639, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f643, %f373, %f640, %f378;
	fma.rn.f32 	%f644, %f373, %f641, %f379;
	fma.rn.f32 	%f645, %f373, %f642, %f380;
	sub.f32 	%f646, %f643, %f7;
	sub.f32 	%f647, %f644, %f8;
	sub.f32 	%f648, %f645, %f9;
	mul.f32 	%f649, %f647, %f647;
	fma.rn.f32 	%f650, %f646, %f646, %f649;
	fma.rn.f32 	%f651, %f648, %f648, %f650;
	sqrt.rn.f32 	%f607, %f651;
	rcp.rn.f32 	%f652, %f607;
	mul.f32 	%f603, %f652, %f646;
	mul.f32 	%f604, %f652, %f647;
	mul.f32 	%f605, %f652, %f648;
	ld.global.u32 	%r86, [imageEnabled];
	and.b32  	%r87, %r86, 32;
	setp.eq.s32	%p47, %r87, 0;
	selp.f32	%f653, 0f3F800000, 0f41200000, %p47;
	mul.f32 	%f606, %f653, %f142;
	mov.u32 	%r88, 1065353216;
	st.local.u32 	[%rd2], %r88;
	ld.global.u32 	%r83, [root];
	// inline asm
	call _rt_trace_64, (%r83, %f10, %f11, %f12, %f603, %f604, %f605, %r45, %f606, %f607, %rd35, %r29);
	// inline asm
	ld.local.f32 	%f654, [%rd2];
	add.f32 	%f1522, %f1521, %f654;
	add.s32 	%r266, %r265, 1;

BB0_36:
	cvt.rn.f32.s32	%f663, %r266;
	add.f32 	%f664, %f13, %f663;
	sub.f32 	%f665, %f14, %f663;
	mul.f32 	%f666, %f664, 0f3DD32618;
	cvt.rmi.f32.f32	%f667, %f666;
	sub.f32 	%f668, %f666, %f667;
	mul.f32 	%f669, %f665, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f670, %f669;
	sub.f32 	%f671, %f669, %f670;
	mul.f32 	%f672, %f663, 0f3DC74539;
	cvt.rmi.f32.f32	%f673, %f672;
	sub.f32 	%f674, %f672, %f673;
	add.f32 	%f675, %f671, 0f420551EC;
	add.f32 	%f676, %f668, 0f420551EC;
	add.f32 	%f677, %f674, 0f420551EC;
	mul.f32 	%f678, %f668, %f675;
	fma.rn.f32 	%f679, %f671, %f676, %f678;
	fma.rn.f32 	%f680, %f674, %f677, %f679;
	add.f32 	%f681, %f668, %f680;
	add.f32 	%f682, %f671, %f680;
	add.f32 	%f683, %f674, %f680;
	add.f32 	%f684, %f681, %f682;
	mul.f32 	%f685, %f683, %f684;
	cvt.rmi.f32.f32	%f686, %f685;
	sub.f32 	%f687, %f685, %f686;
	add.f32 	%f688, %f681, %f681;
	mul.f32 	%f689, %f682, %f688;
	cvt.rmi.f32.f32	%f690, %f689;
	sub.f32 	%f691, %f689, %f690;
	mul.f32 	%f692, %f681, %f684;
	cvt.rmi.f32.f32	%f693, %f692;
	sub.f32 	%f694, %f692, %f693;
	fma.rn.f32 	%f695, %f687, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f696, %f691, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f697, %f694, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f698, %f373, %f695, %f378;
	fma.rn.f32 	%f699, %f373, %f696, %f379;
	fma.rn.f32 	%f700, %f373, %f697, %f380;
	sub.f32 	%f701, %f698, %f7;
	sub.f32 	%f702, %f699, %f8;
	sub.f32 	%f703, %f700, %f9;
	mul.f32 	%f704, %f702, %f702;
	fma.rn.f32 	%f705, %f701, %f701, %f704;
	fma.rn.f32 	%f706, %f703, %f703, %f705;
	sqrt.rn.f32 	%f662, %f706;
	rcp.rn.f32 	%f707, %f662;
	mul.f32 	%f658, %f707, %f701;
	mul.f32 	%f659, %f707, %f702;
	mul.f32 	%f660, %f707, %f703;
	ld.global.u32 	%r92, [imageEnabled];
	and.b32  	%r93, %r92, 32;
	setp.eq.s32	%p48, %r93, 0;
	selp.f32	%f708, 0f3F800000, 0f41200000, %p48;
	mul.f32 	%f661, %f708, %f142;
	mov.u32 	%r94, 1065353216;
	st.local.u32 	[%rd2], %r94;
	ld.global.u32 	%r89, [root];
	mov.u32 	%r90, 1;
	// inline asm
	call _rt_trace_64, (%r89, %f10, %f11, %f12, %f658, %f659, %f660, %r90, %f661, %f662, %rd35, %r29);
	// inline asm
	ld.local.f32 	%f709, [%rd2];
	add.f32 	%f1525, %f1522, %f709;
	add.s32 	%r268, %r266, 1;

BB0_37:
	setp.lt.u32	%p49, %r8, 4;
	@%p49 bra 	BB0_39;

BB0_38:
	cvt.rn.f32.s32	%f742, %r268;
	add.f32 	%f743, %f13, %f742;
	sub.f32 	%f744, %f14, %f742;
	mul.f32 	%f745, %f743, 0f3DD32618;
	cvt.rmi.f32.f32	%f746, %f745;
	sub.f32 	%f747, %f745, %f746;
	mul.f32 	%f748, %f744, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f749, %f748;
	sub.f32 	%f750, %f748, %f749;
	mul.f32 	%f751, %f742, 0f3DC74539;
	cvt.rmi.f32.f32	%f752, %f751;
	sub.f32 	%f753, %f751, %f752;
	add.f32 	%f754, %f750, 0f420551EC;
	add.f32 	%f755, %f747, 0f420551EC;
	add.f32 	%f756, %f753, 0f420551EC;
	mul.f32 	%f757, %f747, %f754;
	fma.rn.f32 	%f758, %f750, %f755, %f757;
	fma.rn.f32 	%f759, %f753, %f756, %f758;
	add.f32 	%f760, %f747, %f759;
	add.f32 	%f761, %f750, %f759;
	add.f32 	%f762, %f753, %f759;
	add.f32 	%f763, %f760, %f761;
	mul.f32 	%f764, %f762, %f763;
	cvt.rmi.f32.f32	%f765, %f764;
	sub.f32 	%f766, %f764, %f765;
	add.f32 	%f767, %f760, %f760;
	mul.f32 	%f768, %f761, %f767;
	cvt.rmi.f32.f32	%f769, %f768;
	sub.f32 	%f770, %f768, %f769;
	mul.f32 	%f771, %f760, %f763;
	cvt.rmi.f32.f32	%f772, %f771;
	sub.f32 	%f773, %f771, %f772;
	fma.rn.f32 	%f774, %f766, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f775, %f770, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f776, %f773, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f777, %f373, %f774, %f378;
	fma.rn.f32 	%f778, %f373, %f775, %f379;
	fma.rn.f32 	%f779, %f373, %f776, %f380;
	sub.f32 	%f780, %f777, %f7;
	sub.f32 	%f781, %f778, %f8;
	sub.f32 	%f782, %f779, %f9;
	mul.f32 	%f783, %f781, %f781;
	fma.rn.f32 	%f784, %f780, %f780, %f783;
	fma.rn.f32 	%f785, %f782, %f782, %f784;
	sqrt.rn.f32 	%f717, %f785;
	rcp.rn.f32 	%f786, %f717;
	mul.f32 	%f713, %f786, %f780;
	mul.f32 	%f714, %f786, %f781;
	mul.f32 	%f715, %f786, %f782;
	ld.global.u32 	%r107, [imageEnabled];
	and.b32  	%r108, %r107, 32;
	setp.eq.s32	%p50, %r108, 0;
	selp.f32	%f787, 0f3F800000, 0f41200000, %p50;
	mul.f32 	%f716, %f787, %f142;
	mov.u32 	%r109, 1065353216;
	st.local.u32 	[%rd2], %r109;
	ld.global.u32 	%r95, [root];
	mov.u32 	%r105, 1;
	// inline asm
	call _rt_trace_64, (%r95, %f10, %f11, %f12, %f713, %f714, %f715, %r105, %f716, %f717, %rd35, %r29);
	// inline asm
	ld.local.f32 	%f788, [%rd2];
	add.f32 	%f789, %f1525, %f788;
	add.s32 	%r110, %r268, 1;
	cvt.rn.f32.s32	%f790, %r110;
	add.f32 	%f791, %f13, %f790;
	sub.f32 	%f792, %f14, %f790;
	mul.f32 	%f793, %f791, 0f3DD32618;
	cvt.rmi.f32.f32	%f794, %f793;
	sub.f32 	%f795, %f793, %f794;
	mul.f32 	%f796, %f792, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f797, %f796;
	sub.f32 	%f798, %f796, %f797;
	mul.f32 	%f799, %f790, 0f3DC74539;
	cvt.rmi.f32.f32	%f800, %f799;
	sub.f32 	%f801, %f799, %f800;
	add.f32 	%f802, %f798, 0f420551EC;
	add.f32 	%f803, %f795, 0f420551EC;
	add.f32 	%f804, %f801, 0f420551EC;
	mul.f32 	%f805, %f795, %f802;
	fma.rn.f32 	%f806, %f798, %f803, %f805;
	fma.rn.f32 	%f807, %f801, %f804, %f806;
	add.f32 	%f808, %f795, %f807;
	add.f32 	%f809, %f798, %f807;
	add.f32 	%f810, %f801, %f807;
	add.f32 	%f811, %f808, %f809;
	mul.f32 	%f812, %f810, %f811;
	cvt.rmi.f32.f32	%f813, %f812;
	sub.f32 	%f814, %f812, %f813;
	add.f32 	%f815, %f808, %f808;
	mul.f32 	%f816, %f809, %f815;
	cvt.rmi.f32.f32	%f817, %f816;
	sub.f32 	%f818, %f816, %f817;
	mul.f32 	%f819, %f808, %f811;
	cvt.rmi.f32.f32	%f820, %f819;
	sub.f32 	%f821, %f819, %f820;
	fma.rn.f32 	%f822, %f814, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f823, %f818, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f824, %f821, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f825, %f373, %f822, %f378;
	fma.rn.f32 	%f826, %f373, %f823, %f379;
	fma.rn.f32 	%f827, %f373, %f824, %f380;
	sub.f32 	%f828, %f825, %f7;
	sub.f32 	%f829, %f826, %f8;
	sub.f32 	%f830, %f827, %f9;
	mul.f32 	%f831, %f829, %f829;
	fma.rn.f32 	%f832, %f828, %f828, %f831;
	fma.rn.f32 	%f833, %f830, %f830, %f832;
	sqrt.rn.f32 	%f725, %f833;
	rcp.rn.f32 	%f834, %f725;
	mul.f32 	%f721, %f834, %f828;
	mul.f32 	%f722, %f834, %f829;
	mul.f32 	%f723, %f834, %f830;
	ld.global.u32 	%r111, [imageEnabled];
	and.b32  	%r112, %r111, 32;
	setp.eq.s32	%p51, %r112, 0;
	selp.f32	%f835, 0f3F800000, 0f41200000, %p51;
	mul.f32 	%f724, %f835, %f142;
	st.local.u32 	[%rd2], %r109;
	ld.global.u32 	%r98, [root];
	// inline asm
	call _rt_trace_64, (%r98, %f10, %f11, %f12, %f721, %f722, %f723, %r105, %f724, %f725, %rd35, %r29);
	// inline asm
	ld.local.f32 	%f836, [%rd2];
	add.f32 	%f837, %f789, %f836;
	add.s32 	%r113, %r268, 2;
	cvt.rn.f32.s32	%f838, %r113;
	add.f32 	%f839, %f13, %f838;
	sub.f32 	%f840, %f14, %f838;
	mul.f32 	%f841, %f839, 0f3DD32618;
	cvt.rmi.f32.f32	%f842, %f841;
	sub.f32 	%f843, %f841, %f842;
	mul.f32 	%f844, %f840, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f845, %f844;
	sub.f32 	%f846, %f844, %f845;
	mul.f32 	%f847, %f838, 0f3DC74539;
	cvt.rmi.f32.f32	%f848, %f847;
	sub.f32 	%f849, %f847, %f848;
	add.f32 	%f850, %f846, 0f420551EC;
	add.f32 	%f851, %f843, 0f420551EC;
	add.f32 	%f852, %f849, 0f420551EC;
	mul.f32 	%f853, %f843, %f850;
	fma.rn.f32 	%f854, %f846, %f851, %f853;
	fma.rn.f32 	%f855, %f849, %f852, %f854;
	add.f32 	%f856, %f843, %f855;
	add.f32 	%f857, %f846, %f855;
	add.f32 	%f858, %f849, %f855;
	add.f32 	%f859, %f856, %f857;
	mul.f32 	%f860, %f858, %f859;
	cvt.rmi.f32.f32	%f861, %f860;
	sub.f32 	%f862, %f860, %f861;
	add.f32 	%f863, %f856, %f856;
	mul.f32 	%f864, %f857, %f863;
	cvt.rmi.f32.f32	%f865, %f864;
	sub.f32 	%f866, %f864, %f865;
	mul.f32 	%f867, %f856, %f859;
	cvt.rmi.f32.f32	%f868, %f867;
	sub.f32 	%f869, %f867, %f868;
	fma.rn.f32 	%f870, %f862, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f871, %f866, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f872, %f869, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f873, %f373, %f870, %f378;
	fma.rn.f32 	%f874, %f373, %f871, %f379;
	fma.rn.f32 	%f875, %f373, %f872, %f380;
	sub.f32 	%f876, %f873, %f7;
	sub.f32 	%f877, %f874, %f8;
	sub.f32 	%f878, %f875, %f9;
	mul.f32 	%f879, %f877, %f877;
	fma.rn.f32 	%f880, %f876, %f876, %f879;
	fma.rn.f32 	%f881, %f878, %f878, %f880;
	sqrt.rn.f32 	%f733, %f881;
	rcp.rn.f32 	%f882, %f733;
	mul.f32 	%f729, %f882, %f876;
	mul.f32 	%f730, %f882, %f877;
	mul.f32 	%f731, %f882, %f878;
	ld.global.u32 	%r114, [imageEnabled];
	and.b32  	%r115, %r114, 32;
	setp.eq.s32	%p52, %r115, 0;
	selp.f32	%f883, 0f3F800000, 0f41200000, %p52;
	mul.f32 	%f732, %f883, %f142;
	st.local.u32 	[%rd2], %r109;
	ld.global.u32 	%r101, [root];
	// inline asm
	call _rt_trace_64, (%r101, %f10, %f11, %f12, %f729, %f730, %f731, %r105, %f732, %f733, %rd35, %r29);
	// inline asm
	ld.local.f32 	%f884, [%rd2];
	add.f32 	%f885, %f837, %f884;
	add.s32 	%r116, %r268, 3;
	cvt.rn.f32.s32	%f886, %r116;
	add.f32 	%f887, %f13, %f886;
	sub.f32 	%f888, %f14, %f886;
	mul.f32 	%f889, %f887, 0f3DD32618;
	cvt.rmi.f32.f32	%f890, %f889;
	sub.f32 	%f891, %f889, %f890;
	mul.f32 	%f892, %f888, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f893, %f892;
	sub.f32 	%f894, %f892, %f893;
	mul.f32 	%f895, %f886, 0f3DC74539;
	cvt.rmi.f32.f32	%f896, %f895;
	sub.f32 	%f897, %f895, %f896;
	add.f32 	%f898, %f894, 0f420551EC;
	add.f32 	%f899, %f891, 0f420551EC;
	add.f32 	%f900, %f897, 0f420551EC;
	mul.f32 	%f901, %f891, %f898;
	fma.rn.f32 	%f902, %f894, %f899, %f901;
	fma.rn.f32 	%f903, %f897, %f900, %f902;
	add.f32 	%f904, %f891, %f903;
	add.f32 	%f905, %f894, %f903;
	add.f32 	%f906, %f897, %f903;
	add.f32 	%f907, %f904, %f905;
	mul.f32 	%f908, %f906, %f907;
	cvt.rmi.f32.f32	%f909, %f908;
	sub.f32 	%f910, %f908, %f909;
	add.f32 	%f911, %f904, %f904;
	mul.f32 	%f912, %f905, %f911;
	cvt.rmi.f32.f32	%f913, %f912;
	sub.f32 	%f914, %f912, %f913;
	mul.f32 	%f915, %f904, %f907;
	cvt.rmi.f32.f32	%f916, %f915;
	sub.f32 	%f917, %f915, %f916;
	fma.rn.f32 	%f918, %f910, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f919, %f914, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f920, %f917, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f921, %f373, %f918, %f378;
	fma.rn.f32 	%f922, %f373, %f919, %f379;
	fma.rn.f32 	%f923, %f373, %f920, %f380;
	sub.f32 	%f924, %f921, %f7;
	sub.f32 	%f925, %f922, %f8;
	sub.f32 	%f926, %f923, %f9;
	mul.f32 	%f927, %f925, %f925;
	fma.rn.f32 	%f928, %f924, %f924, %f927;
	fma.rn.f32 	%f929, %f926, %f926, %f928;
	sqrt.rn.f32 	%f741, %f929;
	rcp.rn.f32 	%f930, %f741;
	mul.f32 	%f737, %f930, %f924;
	mul.f32 	%f738, %f930, %f925;
	mul.f32 	%f739, %f930, %f926;
	ld.global.u32 	%r117, [imageEnabled];
	and.b32  	%r118, %r117, 32;
	setp.eq.s32	%p53, %r118, 0;
	selp.f32	%f931, 0f3F800000, 0f41200000, %p53;
	mul.f32 	%f740, %f931, %f142;
	st.local.u32 	[%rd2], %r109;
	ld.global.u32 	%r104, [root];
	// inline asm
	call _rt_trace_64, (%r104, %f10, %f11, %f12, %f737, %f738, %f739, %r105, %f740, %f741, %rd35, %r29);
	// inline asm
	ld.local.f32 	%f932, [%rd2];
	add.f32 	%f1525, %f885, %f932;
	add.s32 	%r268, %r268, 4;
	setp.lt.s32	%p54, %r268, %r8;
	@%p54 bra 	BB0_38;

BB0_39:
	cvt.rn.f32.s32	%f933, %r8;
	div.rn.f32 	%f1526, %f1525, %f933;
	shr.u32 	%r119, %r6, 31;
	cvt.u16.u32	%rs161, %r119;

BB0_40:
	fma.rn.f32 	%f1498, %f1506, %f1526, %f1498;
	fma.rn.f32 	%f1497, %f1507, %f1526, %f1497;
	fma.rn.f32 	%f1496, %f1508, %f1526, %f1496;
	fma.rn.f32 	%f1495, %f129, %f1526, %f1495;
	fma.rn.f32 	%f1494, %f1510, %f1526, %f1494;
	fma.rn.f32 	%f1493, %f1511, %f1526, %f1493;
	fma.rn.f32 	%f1492, %f132, %f1526, %f1492;
	fma.rn.f32 	%f1491, %f1513, %f1526, %f1491;
	fma.rn.f32 	%f1490, %f1514, %f1526, %f1490;
	fma.rn.f32 	%f1489, %f135, %f1526, %f1489;
	fma.rn.f32 	%f1488, %f1516, %f1526, %f1488;
	fma.rn.f32 	%f1487, %f1517, %f1526, %f1487;
	fma.rn.f32 	%f1486, %f138, %f1526, %f1486;
	fma.rn.f32 	%f1485, %f1519, %f1526, %f1485;
	fma.rn.f32 	%f1484, %f1520, %f1526, %f1484;
	setp.eq.s16	%p55, %rs161, 0;
	@%p55 bra 	BB0_55;

	mov.f32 	%f1479, 0fB5BFBE8E;
	mov.f32 	%f1478, 0fBF317200;
	mov.f32 	%f1477, 0f35BFBE8E;
	mov.f32 	%f1476, 0f3F317200;
	mov.f32 	%f1475, 0f3DAAAABD;
	mov.f32 	%f1474, 0f3C4CAF63;
	mov.f32 	%f1473, 0f3B18F0FE;
	mul.f32 	%f936, %f132, 0f3F000000;
	mul.f32 	%f937, %f135, 0f3F000000;
	mul.f32 	%f938, %f937, %f937;
	fma.rn.f32 	%f939, %f936, %f936, %f938;
	mul.f32 	%f940, %f138, 0f3F000000;
	fma.rn.f32 	%f941, %f940, %f940, %f939;
	sqrt.rn.f32 	%f942, %f941;
	rcp.rn.f32 	%f943, %f942;
	mul.f32 	%f944, %f936, %f943;
	mul.f32 	%f945, %f937, %f943;
	mul.f32 	%f946, %f940, %f943;
	mul.f32 	%f947, %f1481, %f945;
	fma.rn.f32 	%f948, %f1480, %f944, %f947;
	fma.rn.f32 	%f949, %f1482, %f946, %f948;
	fma.rn.f32 	%f169, %f949, 0f3F000000, 0f3F000000;
	add.f32 	%f950, %f942, %f942;
	div.rn.f32 	%f951, %f950, %f129;
	add.f32 	%f170, %f951, 0f3F800000;
	div.rn.f32 	%f952, %f942, %f129;
	mov.f32 	%f953, 0f3F800000;
	sub.f32 	%f954, %f953, %f952;
	add.f32 	%f955, %f952, 0f3F800000;
	div.rn.f32 	%f171, %f954, %f955;
	sub.f32 	%f956, %f953, %f171;
	add.f32 	%f957, %f170, 0f3F800000;
	mul.f32 	%f172, %f957, %f956;
	mul.f32 	%f958, %f170, 0f3F000000;
	cvt.rzi.f32.f32	%f959, %f958;
	add.f32 	%f960, %f959, %f959;
	sub.f32 	%f961, %f170, %f960;
	abs.f32 	%f173, %f961;
	abs.f32 	%f174, %f169;
	setp.lt.f32	%p56, %f174, 0f00800000;
	mul.f32 	%f962, %f174, 0f4B800000;
	selp.f32	%f963, 0fC3170000, 0fC2FE0000, %p56;
	selp.f32	%f964, %f962, %f174, %p56;
	mov.b32 	 %r120, %f964;
	and.b32  	%r121, %r120, 8388607;
	or.b32  	%r122, %r121, 1065353216;
	mov.b32 	 %f965, %r122;
	shr.u32 	%r123, %r120, 23;
	cvt.rn.f32.u32	%f966, %r123;
	add.f32 	%f967, %f963, %f966;
	setp.gt.f32	%p57, %f965, 0f3FB504F3;
	mul.f32 	%f968, %f965, 0f3F000000;
	add.f32 	%f969, %f967, 0f3F800000;
	selp.f32	%f970, %f968, %f965, %p57;
	selp.f32	%f971, %f969, %f967, %p57;
	add.f32 	%f972, %f970, 0fBF800000;
	add.f32 	%f935, %f970, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f934,%f935;
	// inline asm
	add.f32 	%f973, %f972, %f972;
	mul.f32 	%f974, %f934, %f973;
	mul.f32 	%f975, %f974, %f974;
	fma.rn.f32 	%f978, %f1473, %f975, %f1474;
	fma.rn.f32 	%f980, %f978, %f975, %f1475;
	mul.rn.f32 	%f981, %f980, %f975;
	mul.rn.f32 	%f982, %f981, %f974;
	sub.f32 	%f983, %f972, %f974;
	neg.f32 	%f984, %f974;
	add.f32 	%f985, %f983, %f983;
	fma.rn.f32 	%f986, %f984, %f972, %f985;
	mul.rn.f32 	%f987, %f934, %f986;
	add.f32 	%f988, %f982, %f974;
	sub.f32 	%f989, %f974, %f988;
	add.f32 	%f990, %f982, %f989;
	add.f32 	%f991, %f987, %f990;
	add.f32 	%f992, %f988, %f991;
	sub.f32 	%f993, %f988, %f992;
	add.f32 	%f994, %f991, %f993;
	mul.rn.f32 	%f996, %f971, %f1476;
	mul.rn.f32 	%f998, %f971, %f1477;
	add.f32 	%f999, %f996, %f992;
	sub.f32 	%f1000, %f996, %f999;
	add.f32 	%f1001, %f992, %f1000;
	add.f32 	%f1002, %f994, %f1001;
	add.f32 	%f1003, %f998, %f1002;
	add.f32 	%f1004, %f999, %f1003;
	sub.f32 	%f1005, %f999, %f1004;
	add.f32 	%f1006, %f1003, %f1005;
	abs.f32 	%f175, %f170;
	setp.gt.f32	%p58, %f175, 0f77F684DF;
	mul.f32 	%f1007, %f170, 0f39000000;
	selp.f32	%f1008, %f1007, %f170, %p58;
	mul.rn.f32 	%f1009, %f1008, %f1004;
	neg.f32 	%f1010, %f1009;
	fma.rn.f32 	%f1011, %f1008, %f1004, %f1010;
	fma.rn.f32 	%f1012, %f1008, %f1006, %f1011;
	mov.f32 	%f1013, 0f00000000;
	fma.rn.f32 	%f1014, %f1013, %f1004, %f1012;
	add.rn.f32 	%f1015, %f1009, %f1014;
	neg.f32 	%f1016, %f1015;
	add.rn.f32 	%f1017, %f1009, %f1016;
	add.rn.f32 	%f1018, %f1017, %f1014;
	mov.b32 	 %r124, %f1015;
	setp.eq.s32	%p59, %r124, 1118925336;
	add.s32 	%r125, %r124, -1;
	mov.b32 	 %f1019, %r125;
	add.f32 	%f1020, %f1018, 0f37000000;
	selp.f32	%f1021, %f1019, %f1015, %p59;
	selp.f32	%f176, %f1020, %f1018, %p59;
	mul.f32 	%f1022, %f1021, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1023, %f1022;
	fma.rn.f32 	%f1025, %f1023, %f1478, %f1021;
	fma.rn.f32 	%f1027, %f1023, %f1479, %f1025;
	mul.f32 	%f1028, %f1027, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1029, %f1028;
	add.f32 	%f1030, %f1023, 0f00000000;
	ex2.approx.f32 	%f1031, %f1030;
	mul.f32 	%f1032, %f1029, %f1031;
	setp.lt.f32	%p60, %f1021, 0fC2D20000;
	selp.f32	%f1033, 0f00000000, %f1032, %p60;
	setp.gt.f32	%p61, %f1021, 0f42D20000;
	selp.f32	%f1527, 0f7F800000, %f1033, %p61;
	setp.eq.f32	%p62, %f1527, 0f7F800000;
	@%p62 bra 	BB0_43;

	fma.rn.f32 	%f1527, %f1527, %f176, %f1527;

BB0_43:
	setp.lt.f32	%p63, %f169, 0f00000000;
	setp.eq.f32	%p64, %f173, 0f3F800000;
	and.pred  	%p4, %p63, %p64;
	mov.b32 	 %r126, %f1527;
	xor.b32  	%r127, %r126, -2147483648;
	mov.b32 	 %f1034, %r127;
	selp.f32	%f1529, %f1034, %f1527, %p4;
	setp.eq.f32	%p65, %f169, 0f00000000;
	@%p65 bra 	BB0_46;
	bra.uni 	BB0_44;

BB0_46:
	add.f32 	%f1036, %f169, %f169;
	mov.b32 	 %r128, %f1036;
	selp.b32	%r129, %r128, 0, %p64;
	or.b32  	%r130, %r129, 2139095040;
	setp.lt.f32	%p69, %f170, 0f00000000;
	selp.b32	%r131, %r130, %r129, %p69;
	mov.b32 	 %f1529, %r131;
	bra.uni 	BB0_47;

BB0_44:
	setp.geu.f32	%p66, %f169, 0f00000000;
	@%p66 bra 	BB0_47;

	cvt.rzi.f32.f32	%f1035, %f170;
	setp.neu.f32	%p67, %f1035, %f170;
	selp.f32	%f1529, 0f7FFFFFFF, %f1529, %p67;

BB0_47:
	add.f32 	%f1037, %f174, %f175;
	mov.b32 	 %r132, %f1037;
	setp.lt.s32	%p70, %r132, 2139095040;
	@%p70 bra 	BB0_54;

	setp.gtu.f32	%p71, %f174, 0f7F800000;
	setp.gtu.f32	%p72, %f175, 0f7F800000;
	or.pred  	%p73, %p71, %p72;
	@%p73 bra 	BB0_53;
	bra.uni 	BB0_49;

BB0_53:
	add.f32 	%f1529, %f170, %f169;
	bra.uni 	BB0_54;

BB0_49:
	setp.eq.f32	%p74, %f175, 0f7F800000;
	@%p74 bra 	BB0_52;
	bra.uni 	BB0_50;

BB0_52:
	setp.gt.f32	%p77, %f174, 0f3F800000;
	selp.b32	%r136, 2139095040, 0, %p77;
	xor.b32  	%r137, %r136, 2139095040;
	setp.lt.f32	%p78, %f170, 0f00000000;
	selp.b32	%r138, %r137, %r136, %p78;
	mov.b32 	 %f1038, %r138;
	setp.eq.f32	%p79, %f169, 0fBF800000;
	selp.f32	%f1529, 0f3F800000, %f1038, %p79;
	bra.uni 	BB0_54;

BB0_50:
	setp.neu.f32	%p75, %f174, 0f7F800000;
	@%p75 bra 	BB0_54;

	setp.ltu.f32	%p76, %f170, 0f00000000;
	selp.b32	%r133, 0, 2139095040, %p76;
	or.b32  	%r134, %r133, -2147483648;
	selp.b32	%r135, %r134, %r133, %p4;
	mov.b32 	 %f1529, %r135;

BB0_54:
	setp.eq.f32	%p80, %f170, 0f00000000;
	setp.eq.f32	%p81, %f169, 0f3F800000;
	or.pred  	%p82, %p81, %p80;
	selp.f32	%f1039, 0f3F800000, %f1529, %p82;
	fma.rn.f32 	%f1040, %f172, %f1039, %f171;
	mul.f32 	%f1041, %f129, %f1040;
	div.rn.f32 	%f1042, %f1041, %f369;
	div.rn.f32 	%f1043, %f1042, %f97;
	cvt.sat.f32.f32	%f1044, %f1043;
	mul.f32 	%f1526, %f1526, %f1044;

BB0_55:
	add.f32 	%f1483, %f1483, %f1526;

BB0_56:
	add.s32 	%r264, %r264, 1;
	setp.lt.u32	%p83, %r264, %r4;
	@%p83 bra 	BB0_5;

BB0_57:
	ld.global.u32 	%r270, [imageEnabled];
	and.b32  	%r139, %r270, 8;
	setp.eq.s32	%p84, %r139, 0;
	@%p84 bra 	BB0_70;

	cvt.sat.f32.f32	%f223, %f1483;
	cvt.u64.u32	%rd46, %r3;
	cvt.u64.u32	%rd45, %r2;
	mov.u64 	%rd49, image_Mask;
	cvta.global.u64 	%rd44, %rd49;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r28, %r28, %rd45, %rd46, %rd13, %rd13);
	// inline asm
	mov.f32 	%f1047, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f1048, %f1047;
	fma.rn.f32 	%f1049, %f1048, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f224, %f1049;
	abs.f32 	%f225, %f223;
	setp.lt.f32	%p85, %f225, 0f00800000;
	mul.f32 	%f1050, %f225, 0f4B800000;
	selp.f32	%f1051, 0fC3170000, 0fC2FE0000, %p85;
	selp.f32	%f1052, %f1050, %f225, %p85;
	mov.b32 	 %r142, %f1052;
	and.b32  	%r143, %r142, 8388607;
	or.b32  	%r144, %r143, 1065353216;
	mov.b32 	 %f1053, %r144;
	shr.u32 	%r145, %r142, 23;
	cvt.rn.f32.u32	%f1054, %r145;
	add.f32 	%f1055, %f1051, %f1054;
	setp.gt.f32	%p86, %f1053, 0f3FB504F3;
	mul.f32 	%f1056, %f1053, 0f3F000000;
	add.f32 	%f1057, %f1055, 0f3F800000;
	selp.f32	%f1058, %f1056, %f1053, %p86;
	selp.f32	%f1059, %f1057, %f1055, %p86;
	add.f32 	%f1060, %f1058, 0fBF800000;
	add.f32 	%f1046, %f1058, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1045,%f1046;
	// inline asm
	add.f32 	%f1061, %f1060, %f1060;
	mul.f32 	%f1062, %f1045, %f1061;
	mul.f32 	%f1063, %f1062, %f1062;
	mov.f32 	%f1064, 0f3C4CAF63;
	mov.f32 	%f1065, 0f3B18F0FE;
	fma.rn.f32 	%f1066, %f1065, %f1063, %f1064;
	mov.f32 	%f1067, 0f3DAAAABD;
	fma.rn.f32 	%f1068, %f1066, %f1063, %f1067;
	mul.rn.f32 	%f1069, %f1068, %f1063;
	mul.rn.f32 	%f1070, %f1069, %f1062;
	sub.f32 	%f1071, %f1060, %f1062;
	neg.f32 	%f1072, %f1062;
	add.f32 	%f1073, %f1071, %f1071;
	fma.rn.f32 	%f1074, %f1072, %f1060, %f1073;
	mul.rn.f32 	%f1075, %f1045, %f1074;
	add.f32 	%f1076, %f1070, %f1062;
	sub.f32 	%f1077, %f1062, %f1076;
	add.f32 	%f1078, %f1070, %f1077;
	add.f32 	%f1079, %f1075, %f1078;
	add.f32 	%f1080, %f1076, %f1079;
	sub.f32 	%f1081, %f1076, %f1080;
	add.f32 	%f1082, %f1079, %f1081;
	mov.f32 	%f1083, 0f3F317200;
	mul.rn.f32 	%f1084, %f1059, %f1083;
	mov.f32 	%f1085, 0f35BFBE8E;
	mul.rn.f32 	%f1086, %f1059, %f1085;
	add.f32 	%f1087, %f1084, %f1080;
	sub.f32 	%f1088, %f1084, %f1087;
	add.f32 	%f1089, %f1080, %f1088;
	add.f32 	%f1090, %f1082, %f1089;
	add.f32 	%f1091, %f1086, %f1090;
	add.f32 	%f1092, %f1087, %f1091;
	sub.f32 	%f1093, %f1087, %f1092;
	add.f32 	%f1094, %f1091, %f1093;
	mov.f32 	%f1095, 0f3EE8BA2E;
	mul.rn.f32 	%f1096, %f1095, %f1092;
	neg.f32 	%f1097, %f1096;
	fma.rn.f32 	%f1098, %f1095, %f1092, %f1097;
	fma.rn.f32 	%f1099, %f1095, %f1094, %f1098;
	mov.f32 	%f1100, 0f00000000;
	fma.rn.f32 	%f1101, %f1100, %f1092, %f1099;
	add.rn.f32 	%f1102, %f1096, %f1101;
	neg.f32 	%f1103, %f1102;
	add.rn.f32 	%f1104, %f1096, %f1103;
	add.rn.f32 	%f1105, %f1104, %f1101;
	mov.b32 	 %r146, %f1102;
	setp.eq.s32	%p87, %r146, 1118925336;
	add.s32 	%r147, %r146, -1;
	mov.b32 	 %f1106, %r147;
	add.f32 	%f1107, %f1105, 0f37000000;
	selp.f32	%f1108, %f1106, %f1102, %p87;
	selp.f32	%f226, %f1107, %f1105, %p87;
	mul.f32 	%f1109, %f1108, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1110, %f1109;
	mov.f32 	%f1111, 0fBF317200;
	fma.rn.f32 	%f1112, %f1110, %f1111, %f1108;
	mov.f32 	%f1113, 0fB5BFBE8E;
	fma.rn.f32 	%f1114, %f1110, %f1113, %f1112;
	mul.f32 	%f1115, %f1114, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1116, %f1115;
	add.f32 	%f1117, %f1110, 0f00000000;
	ex2.approx.f32 	%f1118, %f1117;
	mul.f32 	%f1119, %f1116, %f1118;
	setp.lt.f32	%p88, %f1108, 0fC2D20000;
	selp.f32	%f1120, 0f00000000, %f1119, %p88;
	setp.gt.f32	%p89, %f1108, 0f42D20000;
	selp.f32	%f1563, 0f7F800000, %f1120, %p89;
	setp.eq.f32	%p90, %f1563, 0f7F800000;
	@%p90 bra 	BB0_60;

	fma.rn.f32 	%f1563, %f1563, %f226, %f1563;

BB0_60:
	setp.lt.f32	%p91, %f223, 0f00000000;
	setp.eq.f32	%p92, %f224, 0f3F800000;
	and.pred  	%p5, %p91, %p92;
	mov.b32 	 %r148, %f1563;
	xor.b32  	%r149, %r148, -2147483648;
	mov.b32 	 %f1121, %r149;
	selp.f32	%f1565, %f1121, %f1563, %p5;
	setp.eq.f32	%p93, %f223, 0f00000000;
	@%p93 bra 	BB0_63;
	bra.uni 	BB0_61;

BB0_63:
	add.f32 	%f1124, %f223, %f223;
	selp.f32	%f1565, %f1124, 0f00000000, %p92;
	bra.uni 	BB0_64;

BB0_128:
	mov.u64 	%rd190, image_HDR;
	cvta.global.u64 	%rd185, %rd190;
	mov.u32 	%r235, 8;
	// inline asm
	call (%rd184), _rt_buffer_get_64, (%rd185, %r28, %r235, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	mov.f32 	%f1444, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs107, %f1444;}

	// inline asm
	mov.u16 	%rs108, 0;
	st.v4.u16 	[%rd184], {%rs107, %rs107, %rs107, %rs108};

BB0_129:
	ld.global.u32 	%r236, [additive];
	setp.eq.s32	%p160, %r236, 0;
	@%p160 bra 	BB0_131;

	mov.u64 	%rd203, image_RNM0;
	cvta.global.u64 	%rd192, %rd203;
	mov.u32 	%r240, 8;
	// inline asm
	call (%rd191), _rt_buffer_get_64, (%rd192, %r28, %r240, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs115, %rs116, %rs117, %rs118}, [%rd191];
	// inline asm
	{  cvt.f32.f16 %f1445, %rs115;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1446, %rs116;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1447, %rs117;}

	// inline asm
	// inline asm
	call (%rd197), _rt_buffer_get_64, (%rd192, %r28, %r240, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	add.f32 	%f1448, %f1445, 0f00000000;
	add.f32 	%f1449, %f1446, 0f00000000;
	add.f32 	%f1450, %f1447, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs114, %f1450;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs113, %f1449;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs112, %f1448;}

	// inline asm
	mov.u16 	%rs119, 0;
	st.v4.u16 	[%rd197], {%rs112, %rs113, %rs114, %rs119};
	bra.uni 	BB0_132;

BB0_131:
	mov.u64 	%rd210, image_RNM0;
	cvta.global.u64 	%rd205, %rd210;
	mov.u32 	%r242, 8;
	// inline asm
	call (%rd204), _rt_buffer_get_64, (%rd205, %r28, %r242, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	mov.f32 	%f1451, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs120, %f1451;}

	// inline asm
	mov.u16 	%rs121, 0;
	st.v4.u16 	[%rd204], {%rs120, %rs120, %rs120, %rs121};

BB0_132:
	ld.global.u32 	%r243, [additive];
	setp.eq.s32	%p161, %r243, 0;
	@%p161 bra 	BB0_134;

	mov.u64 	%rd223, image_RNM1;
	cvta.global.u64 	%rd212, %rd223;
	mov.u32 	%r247, 8;
	// inline asm
	call (%rd211), _rt_buffer_get_64, (%rd212, %r28, %r247, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs128, %rs129, %rs130, %rs131}, [%rd211];
	// inline asm
	{  cvt.f32.f16 %f1452, %rs128;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1453, %rs129;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1454, %rs130;}

	// inline asm
	// inline asm
	call (%rd217), _rt_buffer_get_64, (%rd212, %r28, %r247, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	add.f32 	%f1455, %f1452, 0f00000000;
	add.f32 	%f1456, %f1453, 0f00000000;
	add.f32 	%f1457, %f1454, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs127, %f1457;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs126, %f1456;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs125, %f1455;}

	// inline asm
	mov.u16 	%rs132, 0;
	st.v4.u16 	[%rd217], {%rs125, %rs126, %rs127, %rs132};
	bra.uni 	BB0_135;

BB0_134:
	mov.u64 	%rd230, image_RNM1;
	cvta.global.u64 	%rd225, %rd230;
	mov.u32 	%r249, 8;
	// inline asm
	call (%rd224), _rt_buffer_get_64, (%rd225, %r28, %r249, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	mov.f32 	%f1458, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs133, %f1458;}

	// inline asm
	mov.u16 	%rs134, 0;
	st.v4.u16 	[%rd224], {%rs133, %rs133, %rs133, %rs134};

BB0_135:
	ld.global.u32 	%r250, [additive];
	setp.eq.s32	%p162, %r250, 0;
	@%p162 bra 	BB0_137;

	mov.u64 	%rd243, image_RNM2;
	cvta.global.u64 	%rd232, %rd243;
	mov.u32 	%r254, 8;
	// inline asm
	call (%rd231), _rt_buffer_get_64, (%rd232, %r28, %r254, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs141, %rs142, %rs143, %rs144}, [%rd231];
	// inline asm
	{  cvt.f32.f16 %f1459, %rs141;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1460, %rs142;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1461, %rs143;}

	// inline asm
	// inline asm
	call (%rd237), _rt_buffer_get_64, (%rd232, %r28, %r254, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	add.f32 	%f1462, %f1459, 0f00000000;
	add.f32 	%f1463, %f1460, 0f00000000;
	add.f32 	%f1464, %f1461, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs140, %f1464;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs139, %f1463;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs138, %f1462;}

	// inline asm
	mov.u16 	%rs145, 0;
	st.v4.u16 	[%rd237], {%rs138, %rs139, %rs140, %rs145};
	bra.uni 	BB0_138;

BB0_137:
	mov.u64 	%rd250, image_RNM2;
	cvta.global.u64 	%rd245, %rd250;
	mov.u32 	%r256, 8;
	// inline asm
	call (%rd244), _rt_buffer_get_64, (%rd245, %r28, %r256, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	mov.f32 	%f1465, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs146, %f1465;}

	// inline asm
	mov.u16 	%rs147, 0;
	st.v4.u16 	[%rd244], {%rs146, %rs146, %rs146, %rs147};

BB0_138:
	ld.global.u32 	%r257, [additive];
	setp.eq.s32	%p163, %r257, 0;
	@%p163 bra 	BB0_140;

	mov.u64 	%rd263, image_RNM3;
	cvta.global.u64 	%rd252, %rd263;
	mov.u32 	%r261, 8;
	// inline asm
	call (%rd251), _rt_buffer_get_64, (%rd252, %r28, %r261, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs154, %rs155, %rs156, %rs157}, [%rd251];
	// inline asm
	{  cvt.f32.f16 %f1466, %rs154;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1467, %rs155;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1468, %rs156;}

	// inline asm
	// inline asm
	call (%rd257), _rt_buffer_get_64, (%rd252, %r28, %r261, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	add.f32 	%f1469, %f1466, 0f00000000;
	add.f32 	%f1470, %f1467, 0f00000000;
	add.f32 	%f1471, %f1468, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs153, %f1471;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs152, %f1470;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs151, %f1469;}

	// inline asm
	mov.u16 	%rs158, 0;
	st.v4.u16 	[%rd257], {%rs151, %rs152, %rs153, %rs158};
	bra.uni 	BB0_141;

BB0_140:
	mov.u64 	%rd270, image_RNM3;
	cvta.global.u64 	%rd265, %rd270;
	mov.u32 	%r263, 8;
	// inline asm
	call (%rd264), _rt_buffer_get_64, (%rd265, %r28, %r263, %rd6, %rd7, %rd13, %rd13);
	// inline asm
	mov.f32 	%f1472, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs159, %f1472;}

	// inline asm
	mov.u16 	%rs160, 0;
	st.v4.u16 	[%rd264], {%rs159, %rs159, %rs159, %rs160};
	bra.uni 	BB0_141;

BB0_61:
	setp.geu.f32	%p94, %f223, 0f00000000;
	@%p94 bra 	BB0_64;

	cvt.rzi.f32.f32	%f1123, %f1095;
	setp.neu.f32	%p95, %f1123, 0f3EE8BA2E;
	selp.f32	%f1565, 0f7FFFFFFF, %f1565, %p95;

BB0_64:
	add.f32 	%f1125, %f225, 0f3EE8BA2E;
	mov.b32 	 %r150, %f1125;
	setp.lt.s32	%p97, %r150, 2139095040;
	@%p97 bra 	BB0_69;

	setp.gtu.f32	%p98, %f225, 0f7F800000;
	@%p98 bra 	BB0_68;
	bra.uni 	BB0_66;

BB0_68:
	add.f32 	%f1565, %f223, 0f3EE8BA2E;
	bra.uni 	BB0_69;

BB0_66:
	setp.neu.f32	%p99, %f225, 0f7F800000;
	@%p99 bra 	BB0_69;

	selp.f32	%f1565, 0fFF800000, 0f7F800000, %p5;

BB0_69:
	mul.f32 	%f1126, %f1565, 0f437F0000;
	setp.eq.f32	%p100, %f223, 0f3F800000;
	selp.f32	%f1127, 0f437F0000, %f1126, %p100;
	cvt.rzi.u32.f32	%r151, %f1127;
	cvt.u16.u32	%rs17, %r151;
	mov.u16 	%rs18, 255;
	st.v2.u8 	[%rd43], {%rs17, %rs18};
	ld.global.u32 	%r270, [imageEnabled];

BB0_70:
	and.b32  	%r152, %r270, 1;
	setp.eq.b32	%p101, %r152, 1;
	@!%p101 bra 	BB0_105;
	bra.uni 	BB0_71;

BB0_71:
	mov.f32 	%f1130, 0f3E666666;
	cvt.rzi.f32.f32	%f1131, %f1130;
	fma.rn.f32 	%f1132, %f1131, 0fC0000000, 0f3EE66666;
	abs.f32 	%f237, %f1132;
	abs.f32 	%f238, %f1498;
	setp.lt.f32	%p102, %f238, 0f00800000;
	mul.f32 	%f1133, %f238, 0f4B800000;
	selp.f32	%f1134, 0fC3170000, 0fC2FE0000, %p102;
	selp.f32	%f1135, %f1133, %f238, %p102;
	mov.b32 	 %r153, %f1135;
	and.b32  	%r154, %r153, 8388607;
	or.b32  	%r155, %r154, 1065353216;
	mov.b32 	 %f1136, %r155;
	shr.u32 	%r156, %r153, 23;
	cvt.rn.f32.u32	%f1137, %r156;
	add.f32 	%f1138, %f1134, %f1137;
	setp.gt.f32	%p103, %f1136, 0f3FB504F3;
	mul.f32 	%f1139, %f1136, 0f3F000000;
	add.f32 	%f1140, %f1138, 0f3F800000;
	selp.f32	%f1141, %f1139, %f1136, %p103;
	selp.f32	%f1142, %f1140, %f1138, %p103;
	add.f32 	%f1143, %f1141, 0fBF800000;
	add.f32 	%f1129, %f1141, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1128,%f1129;
	// inline asm
	add.f32 	%f1144, %f1143, %f1143;
	mul.f32 	%f1145, %f1128, %f1144;
	mul.f32 	%f1146, %f1145, %f1145;
	mov.f32 	%f1147, 0f3C4CAF63;
	mov.f32 	%f1148, 0f3B18F0FE;
	fma.rn.f32 	%f1149, %f1148, %f1146, %f1147;
	mov.f32 	%f1150, 0f3DAAAABD;
	fma.rn.f32 	%f1151, %f1149, %f1146, %f1150;
	mul.rn.f32 	%f1152, %f1151, %f1146;
	mul.rn.f32 	%f1153, %f1152, %f1145;
	sub.f32 	%f1154, %f1143, %f1145;
	neg.f32 	%f1155, %f1145;
	add.f32 	%f1156, %f1154, %f1154;
	fma.rn.f32 	%f1157, %f1155, %f1143, %f1156;
	mul.rn.f32 	%f1158, %f1128, %f1157;
	add.f32 	%f1159, %f1153, %f1145;
	sub.f32 	%f1160, %f1145, %f1159;
	add.f32 	%f1161, %f1153, %f1160;
	add.f32 	%f1162, %f1158, %f1161;
	add.f32 	%f1163, %f1159, %f1162;
	sub.f32 	%f1164, %f1159, %f1163;
	add.f32 	%f1165, %f1162, %f1164;
	mov.f32 	%f1166, 0f3F317200;
	mul.rn.f32 	%f1167, %f1142, %f1166;
	mov.f32 	%f1168, 0f35BFBE8E;
	mul.rn.f32 	%f1169, %f1142, %f1168;
	add.f32 	%f1170, %f1167, %f1163;
	sub.f32 	%f1171, %f1167, %f1170;
	add.f32 	%f1172, %f1163, %f1171;
	add.f32 	%f1173, %f1165, %f1172;
	add.f32 	%f1174, %f1169, %f1173;
	add.f32 	%f1175, %f1170, %f1174;
	sub.f32 	%f1176, %f1170, %f1175;
	add.f32 	%f1177, %f1174, %f1176;
	mov.f32 	%f1178, 0f3EE66666;
	mul.rn.f32 	%f1179, %f1178, %f1175;
	neg.f32 	%f1180, %f1179;
	fma.rn.f32 	%f1181, %f1178, %f1175, %f1180;
	fma.rn.f32 	%f1182, %f1178, %f1177, %f1181;
	mov.f32 	%f1183, 0f00000000;
	fma.rn.f32 	%f1184, %f1183, %f1175, %f1182;
	add.rn.f32 	%f1185, %f1179, %f1184;
	neg.f32 	%f1186, %f1185;
	add.rn.f32 	%f1187, %f1179, %f1186;
	add.rn.f32 	%f1188, %f1187, %f1184;
	mov.b32 	 %r157, %f1185;
	setp.eq.s32	%p104, %r157, 1118925336;
	add.s32 	%r158, %r157, -1;
	mov.b32 	 %f1189, %r158;
	add.f32 	%f1190, %f1188, 0f37000000;
	selp.f32	%f1191, %f1189, %f1185, %p104;
	selp.f32	%f239, %f1190, %f1188, %p104;
	mul.f32 	%f1192, %f1191, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1193, %f1192;
	mov.f32 	%f1194, 0fBF317200;
	fma.rn.f32 	%f1195, %f1193, %f1194, %f1191;
	mov.f32 	%f1196, 0fB5BFBE8E;
	fma.rn.f32 	%f1197, %f1193, %f1196, %f1195;
	mul.f32 	%f1198, %f1197, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1199, %f1198;
	add.f32 	%f1200, %f1193, 0f00000000;
	ex2.approx.f32 	%f1201, %f1200;
	mul.f32 	%f1202, %f1199, %f1201;
	setp.lt.f32	%p105, %f1191, 0fC2D20000;
	selp.f32	%f1203, 0f00000000, %f1202, %p105;
	setp.gt.f32	%p106, %f1191, 0f42D20000;
	selp.f32	%f1566, 0f7F800000, %f1203, %p106;
	setp.eq.f32	%p107, %f1566, 0f7F800000;
	@%p107 bra 	BB0_73;

	fma.rn.f32 	%f1566, %f1566, %f239, %f1566;

BB0_73:
	setp.lt.f32	%p108, %f1498, 0f00000000;
	setp.eq.f32	%p109, %f237, 0f3F800000;
	and.pred  	%p6, %p108, %p109;
	mov.b32 	 %r159, %f1566;
	xor.b32  	%r160, %r159, -2147483648;
	mov.b32 	 %f1204, %r160;
	selp.f32	%f1568, %f1204, %f1566, %p6;
	setp.eq.f32	%p110, %f1498, 0f00000000;
	@%p110 bra 	BB0_76;
	bra.uni 	BB0_74;

BB0_76:
	add.f32 	%f1207, %f1498, %f1498;
	selp.f32	%f1568, %f1207, 0f00000000, %p109;
	bra.uni 	BB0_77;

BB0_74:
	setp.geu.f32	%p111, %f1498, 0f00000000;
	@%p111 bra 	BB0_77;

	cvt.rzi.f32.f32	%f1206, %f1178;
	setp.neu.f32	%p112, %f1206, 0f3EE66666;
	selp.f32	%f1568, 0f7FFFFFFF, %f1568, %p112;

BB0_77:
	add.f32 	%f1208, %f238, 0f3EE66666;
	mov.b32 	 %r161, %f1208;
	setp.lt.s32	%p114, %r161, 2139095040;
	@%p114 bra 	BB0_82;

	setp.gtu.f32	%p115, %f238, 0f7F800000;
	@%p115 bra 	BB0_81;
	bra.uni 	BB0_79;

BB0_81:
	add.f32 	%f1568, %f1498, 0f3EE66666;
	bra.uni 	BB0_82;

BB0_79:
	setp.neu.f32	%p116, %f238, 0f7F800000;
	@%p116 bra 	BB0_82;

	selp.f32	%f1568, 0fFF800000, 0f7F800000, %p6;

BB0_82:
	setp.eq.f32	%p117, %f1498, 0f3F800000;
	selp.f32	%f250, 0f3F800000, %f1568, %p117;
	abs.f32 	%f251, %f1497;
	setp.lt.f32	%p118, %f251, 0f00800000;
	mul.f32 	%f1211, %f251, 0f4B800000;
	selp.f32	%f1212, 0fC3170000, 0fC2FE0000, %p118;
	selp.f32	%f1213, %f1211, %f251, %p118;
	mov.b32 	 %r162, %f1213;
	and.b32  	%r163, %r162, 8388607;
	or.b32  	%r164, %r163, 1065353216;
	mov.b32 	 %f1214, %r164;
	shr.u32 	%r165, %r162, 23;
	cvt.rn.f32.u32	%f1215, %r165;
	add.f32 	%f1216, %f1212, %f1215;
	setp.gt.f32	%p119, %f1214, 0f3FB504F3;
	mul.f32 	%f1217, %f1214, 0f3F000000;
	add.f32 	%f1218, %f1216, 0f3F800000;
	selp.f32	%f1219, %f1217, %f1214, %p119;
	selp.f32	%f1220, %f1218, %f1216, %p119;
	add.f32 	%f1221, %f1219, 0fBF800000;
	add.f32 	%f1210, %f1219, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1209,%f1210;
	// inline asm
	add.f32 	%f1222, %f1221, %f1221;
	mul.f32 	%f1223, %f1209, %f1222;
	mul.f32 	%f1224, %f1223, %f1223;
	fma.rn.f32 	%f1227, %f1148, %f1224, %f1147;
	fma.rn.f32 	%f1229, %f1227, %f1224, %f1150;
	mul.rn.f32 	%f1230, %f1229, %f1224;
	mul.rn.f32 	%f1231, %f1230, %f1223;
	sub.f32 	%f1232, %f1221, %f1223;
	neg.f32 	%f1233, %f1223;
	add.f32 	%f1234, %f1232, %f1232;
	fma.rn.f32 	%f1235, %f1233, %f1221, %f1234;
	mul.rn.f32 	%f1236, %f1209, %f1235;
	add.f32 	%f1237, %f1231, %f1223;
	sub.f32 	%f1238, %f1223, %f1237;
	add.f32 	%f1239, %f1231, %f1238;
	add.f32 	%f1240, %f1236, %f1239;
	add.f32 	%f1241, %f1237, %f1240;
	sub.f32 	%f1242, %f1237, %f1241;
	add.f32 	%f1243, %f1240, %f1242;
	mul.rn.f32 	%f1245, %f1220, %f1166;
	mul.rn.f32 	%f1247, %f1220, %f1168;
	add.f32 	%f1248, %f1245, %f1241;
	sub.f32 	%f1249, %f1245, %f1248;
	add.f32 	%f1250, %f1241, %f1249;
	add.f32 	%f1251, %f1243, %f1250;
	add.f32 	%f1252, %f1247, %f1251;
	add.f32 	%f1253, %f1248, %f1252;
	sub.f32 	%f1254, %f1248, %f1253;
	add.f32 	%f1255, %f1252, %f1254;
	mul.rn.f32 	%f1257, %f1178, %f1253;
	neg.f32 	%f1258, %f1257;
	fma.rn.f32 	%f1259, %f1178, %f1253, %f1258;
	fma.rn.f32 	%f1260, %f1178, %f1255, %f1259;
	fma.rn.f32 	%f1262, %f1183, %f1253, %f1260;
	add.rn.f32 	%f1263, %f1257, %f1262;
	neg.f32 	%f1264, %f1263;
	add.rn.f32 	%f1265, %f1257, %f1264;
	add.rn.f32 	%f1266, %f1265, %f1262;
	mov.b32 	 %r166, %f1263;
	setp.eq.s32	%p120, %r166, 1118925336;
	add.s32 	%r167, %r166, -1;
	mov.b32 	 %f1267, %r167;
	add.f32 	%f1268, %f1266, 0f37000000;
	selp.f32	%f1269, %f1267, %f1263, %p120;
	selp.f32	%f252, %f1268, %f1266, %p120;
	mul.f32 	%f1270, %f1269, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1271, %f1270;
	fma.rn.f32 	%f1273, %f1271, %f1194, %f1269;
	fma.rn.f32 	%f1275, %f1271, %f1196, %f1273;
	mul.f32 	%f1276, %f1275, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1277, %f1276;
	add.f32 	%f1278, %f1271, 0f00000000;
	ex2.approx.f32 	%f1279, %f1278;
	mul.f32 	%f1280, %f1277, %f1279;
	setp.lt.f32	%p121, %f1269, 0fC2D20000;
	selp.f32	%f1281, 0f00000000, %f1280, %p121;
	setp.gt.f32	%p122, %f1269, 0f42D20000;
	selp.f32	%f1569, 0f7F800000, %f1281, %p122;
	setp.eq.f32	%p123, %f1569, 0f7F800000;
	@%p123 bra 	BB0_84;

	fma.rn.f32 	%f1569, %f1569, %f252, %f1569;

BB0_84:
	setp.lt.f32	%p124, %f1497, 0f00000000;
	and.pred  	%p7, %p124, %p109;
	mov.b32 	 %r168, %f1569;
	xor.b32  	%r169, %r168, -2147483648;
	mov.b32 	 %f1282, %r169;
	selp.f32	%f1571, %f1282, %f1569, %p7;
	setp.eq.f32	%p126, %f1497, 0f00000000;
	@%p126 bra 	BB0_87;
	bra.uni 	BB0_85;

BB0_87:
	add.f32 	%f1285, %f1497, %f1497;
	selp.f32	%f1571, %f1285, 0f00000000, %p109;
	bra.uni 	BB0_88;

BB0_85:
	setp.geu.f32	%p127, %f1497, 0f00000000;
	@%p127 bra 	BB0_88;

	cvt.rzi.f32.f32	%f1284, %f1178;
	setp.neu.f32	%p128, %f1284, 0f3EE66666;
	selp.f32	%f1571, 0f7FFFFFFF, %f1571, %p128;

BB0_88:
	add.f32 	%f1286, %f251, 0f3EE66666;
	mov.b32 	 %r170, %f1286;
	setp.lt.s32	%p130, %r170, 2139095040;
	@%p130 bra 	BB0_93;

	setp.gtu.f32	%p131, %f251, 0f7F800000;
	@%p131 bra 	BB0_92;
	bra.uni 	BB0_90;

BB0_92:
	add.f32 	%f1571, %f1497, 0f3EE66666;
	bra.uni 	BB0_93;

BB0_90:
	setp.neu.f32	%p132, %f251, 0f7F800000;
	@%p132 bra 	BB0_93;

	selp.f32	%f1571, 0fFF800000, 0f7F800000, %p7;

BB0_93:
	setp.eq.f32	%p133, %f1497, 0f3F800000;
	selp.f32	%f263, 0f3F800000, %f1571, %p133;
	abs.f32 	%f264, %f1496;
	setp.lt.f32	%p134, %f264, 0f00800000;
	mul.f32 	%f1289, %f264, 0f4B800000;
	selp.f32	%f1290, 0fC3170000, 0fC2FE0000, %p134;
	selp.f32	%f1291, %f1289, %f264, %p134;
	mov.b32 	 %r171, %f1291;
	and.b32  	%r172, %r171, 8388607;
	or.b32  	%r173, %r172, 1065353216;
	mov.b32 	 %f1292, %r173;
	shr.u32 	%r174, %r171, 23;
	cvt.rn.f32.u32	%f1293, %r174;
	add.f32 	%f1294, %f1290, %f1293;
	setp.gt.f32	%p135, %f1292, 0f3FB504F3;
	mul.f32 	%f1295, %f1292, 0f3F000000;
	add.f32 	%f1296, %f1294, 0f3F800000;
	selp.f32	%f1297, %f1295, %f1292, %p135;
	selp.f32	%f1298, %f1296, %f1294, %p135;
	add.f32 	%f1299, %f1297, 0fBF800000;
	add.f32 	%f1288, %f1297, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1287,%f1288;
	// inline asm
	add.f32 	%f1300, %f1299, %f1299;
	mul.f32 	%f1301, %f1287, %f1300;
	mul.f32 	%f1302, %f1301, %f1301;
	fma.rn.f32 	%f1305, %f1148, %f1302, %f1147;
	fma.rn.f32 	%f1307, %f1305, %f1302, %f1150;
	mul.rn.f32 	%f1308, %f1307, %f1302;
	mul.rn.f32 	%f1309, %f1308, %f1301;
	sub.f32 	%f1310, %f1299, %f1301;
	neg.f32 	%f1311, %f1301;
	add.f32 	%f1312, %f1310, %f1310;
	fma.rn.f32 	%f1313, %f1311, %f1299, %f1312;
	mul.rn.f32 	%f1314, %f1287, %f1313;
	add.f32 	%f1315, %f1309, %f1301;
	sub.f32 	%f1316, %f1301, %f1315;
	add.f32 	%f1317, %f1309, %f1316;
	add.f32 	%f1318, %f1314, %f1317;
	add.f32 	%f1319, %f1315, %f1318;
	sub.f32 	%f1320, %f1315, %f1319;
	add.f32 	%f1321, %f1318, %f1320;
	mul.rn.f32 	%f1323, %f1298, %f1166;
	mul.rn.f32 	%f1325, %f1298, %f1168;
	add.f32 	%f1326, %f1323, %f1319;
	sub.f32 	%f1327, %f1323, %f1326;
	add.f32 	%f1328, %f1319, %f1327;
	add.f32 	%f1329, %f1321, %f1328;
	add.f32 	%f1330, %f1325, %f1329;
	add.f32 	%f1331, %f1326, %f1330;
	sub.f32 	%f1332, %f1326, %f1331;
	add.f32 	%f1333, %f1330, %f1332;
	mul.rn.f32 	%f1335, %f1178, %f1331;
	neg.f32 	%f1336, %f1335;
	fma.rn.f32 	%f1337, %f1178, %f1331, %f1336;
	fma.rn.f32 	%f1338, %f1178, %f1333, %f1337;
	fma.rn.f32 	%f1340, %f1183, %f1331, %f1338;
	add.rn.f32 	%f1341, %f1335, %f1340;
	neg.f32 	%f1342, %f1341;
	add.rn.f32 	%f1343, %f1335, %f1342;
	add.rn.f32 	%f1344, %f1343, %f1340;
	mov.b32 	 %r175, %f1341;
	setp.eq.s32	%p136, %r175, 1118925336;
	add.s32 	%r176, %r175, -1;
	mov.b32 	 %f1345, %r176;
	add.f32 	%f1346, %f1344, 0f37000000;
	selp.f32	%f1347, %f1345, %f1341, %p136;
	selp.f32	%f265, %f1346, %f1344, %p136;
	mul.f32 	%f1348, %f1347, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1349, %f1348;
	fma.rn.f32 	%f1351, %f1349, %f1194, %f1347;
	fma.rn.f32 	%f1353, %f1349, %f1196, %f1351;
	mul.f32 	%f1354, %f1353, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1355, %f1354;
	add.f32 	%f1356, %f1349, 0f00000000;
	ex2.approx.f32 	%f1357, %f1356;
	mul.f32 	%f1358, %f1355, %f1357;
	setp.lt.f32	%p137, %f1347, 0fC2D20000;
	selp.f32	%f1359, 0f00000000, %f1358, %p137;
	setp.gt.f32	%p138, %f1347, 0f42D20000;
	selp.f32	%f1572, 0f7F800000, %f1359, %p138;
	setp.eq.f32	%p139, %f1572, 0f7F800000;
	@%p139 bra 	BB0_95;

	fma.rn.f32 	%f1572, %f1572, %f265, %f1572;

BB0_95:
	setp.lt.f32	%p140, %f1496, 0f00000000;
	and.pred  	%p8, %p140, %p109;
	mov.b32 	 %r177, %f1572;
	xor.b32  	%r178, %r177, -2147483648;
	mov.b32 	 %f1360, %r178;
	selp.f32	%f1574, %f1360, %f1572, %p8;
	setp.eq.f32	%p142, %f1496, 0f00000000;
	@%p142 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f1363, %f1496, %f1496;
	selp.f32	%f1574, %f1363, 0f00000000, %p109;
	bra.uni 	BB0_99;

BB0_96:
	setp.geu.f32	%p143, %f1496, 0f00000000;
	@%p143 bra 	BB0_99;

	cvt.rzi.f32.f32	%f1362, %f1178;
	setp.neu.f32	%p144, %f1362, 0f3EE66666;
	selp.f32	%f1574, 0f7FFFFFFF, %f1574, %p144;

BB0_99:
	add.f32 	%f1364, %f264, 0f3EE66666;
	mov.b32 	 %r179, %f1364;
	setp.lt.s32	%p146, %r179, 2139095040;
	@%p146 bra 	BB0_104;

	setp.gtu.f32	%p147, %f264, 0f7F800000;
	@%p147 bra 	BB0_103;
	bra.uni 	BB0_101;

BB0_103:
	add.f32 	%f1574, %f1496, 0f3EE66666;
	bra.uni 	BB0_104;

BB0_101:
	setp.neu.f32	%p148, %f264, 0f7F800000;
	@%p148 bra 	BB0_104;

	selp.f32	%f1574, 0fFF800000, 0f7F800000, %p8;

BB0_104:
	setp.eq.f32	%p149, %f1496, 0f3F800000;
	selp.f32	%f1365, 0f3F800000, %f1574, %p149;
	cvt.u64.u32	%rd53, %r3;
	cvt.u64.u32	%rd52, %r2;
	mov.u64 	%rd56, image;
	cvta.global.u64 	%rd51, %rd56;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd51, %r28, %r29, %rd52, %rd53, %rd13, %rd13);
	// inline asm
	cvt.sat.f32.f32	%f1366, %f1365;
	mul.f32 	%f1367, %f1366, 0f437FFD71;
	cvt.rzi.u32.f32	%r182, %f1367;
	cvt.sat.f32.f32	%f1368, %f263;
	mul.f32 	%f1369, %f1368, 0f437FFD71;
	cvt.rzi.u32.f32	%r183, %f1369;
	cvt.sat.f32.f32	%f1370, %f250;
	mul.f32 	%f1371, %f1370, 0f437FFD71;
	cvt.rzi.u32.f32	%r184, %f1371;
	cvt.u16.u32	%rs19, %r182;
	cvt.u16.u32	%rs20, %r184;
	cvt.u16.u32	%rs21, %r183;
	mov.u16 	%rs22, 255;
	st.v4.u8 	[%rd50], {%rs19, %rs21, %rs20, %rs22};
	ld.global.u32 	%r270, [imageEnabled];

BB0_105:
	cvt.u64.u32	%rd4, %r2;
	cvt.u64.u32	%rd5, %r3;
	and.b32  	%r185, %r270, 4;
	setp.eq.s32	%p150, %r185, 0;
	@%p150 bra 	BB0_109;

	ld.global.u32 	%r186, [additive];
	setp.eq.s32	%p151, %r186, 0;
	mov.f32 	%f1372, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f1372;}

	// inline asm
	@%p151 bra 	BB0_108;

	mov.u64 	%rd69, image_HDR;
	cvta.global.u64 	%rd58, %rd69;
	mov.u32 	%r190, 8;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd58, %r28, %r190, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs30, %rs31, %rs32, %rs33}, [%rd57];
	// inline asm
	{  cvt.f32.f16 %f1373, %rs30;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1374, %rs31;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1375, %rs32;}

	// inline asm
	// inline asm
	call (%rd63), _rt_buffer_get_64, (%rd58, %r28, %r190, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	add.f32 	%f1376, %f1498, %f1373;
	add.f32 	%f1377, %f1497, %f1374;
	add.f32 	%f1378, %f1496, %f1375;
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f1378;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f1377;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f1376;}

	// inline asm
	st.v4.u16 	[%rd63], {%rs27, %rs28, %rs29, %rs23};
	bra.uni 	BB0_109;

BB0_108:
	mov.u64 	%rd76, image_HDR;
	cvta.global.u64 	%rd71, %rd76;
	mov.u32 	%r192, 8;
	// inline asm
	call (%rd70), _rt_buffer_get_64, (%rd71, %r28, %r192, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs36, %f1496;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs35, %f1497;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f1498;}

	// inline asm
	st.v4.u16 	[%rd70], {%rs34, %rs35, %rs36, %rs23};

BB0_109:
	mov.f32 	%f1383, 0f34000000;
	max.f32 	%f1384, %f1495, %f1383;
	div.rn.f32 	%f1385, %f1492, %f1384;
	max.f32 	%f1386, %f1494, %f1383;
	div.rn.f32 	%f1387, %f1491, %f1386;
	max.f32 	%f1388, %f1493, %f1383;
	div.rn.f32 	%f1389, %f1490, %f1388;
	fma.rn.f32 	%f276, %f1385, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f277, %f1387, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f278, %f1389, 0f3F000000, 0f3F000000;
	div.rn.f32 	%f1390, %f1489, %f1384;
	div.rn.f32 	%f1391, %f1488, %f1386;
	div.rn.f32 	%f1392, %f1487, %f1388;
	fma.rn.f32 	%f279, %f1390, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f280, %f1391, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f281, %f1392, 0f3F000000, 0f3F000000;
	div.rn.f32 	%f1393, %f1486, %f1384;
	div.rn.f32 	%f1394, %f1485, %f1386;
	div.rn.f32 	%f1395, %f1484, %f1388;
	fma.rn.f32 	%f282, %f1393, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f283, %f1394, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f284, %f1395, 0f3F000000, 0f3F000000;
	ld.global.u32 	%r193, [additive];
	setp.eq.s32	%p152, %r193, 0;
	mov.f32 	%f1382, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f1382;}

	// inline asm
	@%p152 bra 	BB0_111;

	mov.u64 	%rd89, image_RNM0;
	cvta.global.u64 	%rd78, %rd89;
	mov.u32 	%r197, 8;
	// inline asm
	call (%rd77), _rt_buffer_get_64, (%rd78, %r28, %r197, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs44, %rs45, %rs46, %rs47}, [%rd77];
	// inline asm
	{  cvt.f32.f16 %f1396, %rs44;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1397, %rs45;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1398, %rs46;}

	// inline asm
	// inline asm
	call (%rd83), _rt_buffer_get_64, (%rd78, %r28, %r197, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	add.f32 	%f1399, %f1495, %f1396;
	add.f32 	%f1400, %f1494, %f1397;
	add.f32 	%f1401, %f1493, %f1398;
	// inline asm
	{  cvt.rn.f16.f32 %rs43, %f1401;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f1400;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f1399;}

	// inline asm
	st.v4.u16 	[%rd83], {%rs41, %rs42, %rs43, %rs37};
	bra.uni 	BB0_112;

BB0_111:
	mov.u64 	%rd96, image_RNM0;
	cvta.global.u64 	%rd91, %rd96;
	mov.u32 	%r199, 8;
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd91, %r28, %r199, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f1493;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f1494;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f1495;}

	// inline asm
	st.v4.u16 	[%rd90], {%rs48, %rs49, %rs50, %rs37};

BB0_112:
	ld.global.u32 	%r200, [additive];
	setp.eq.s32	%p153, %r200, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f1382;}

	// inline asm
	@%p153 bra 	BB0_114;

	mov.u64 	%rd109, image_RNM1;
	cvta.global.u64 	%rd98, %rd109;
	mov.u32 	%r204, 8;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r28, %r204, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs58, %rs59, %rs60, %rs61}, [%rd97];
	// inline asm
	{  cvt.f32.f16 %f1406, %rs58;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1407, %rs59;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1408, %rs60;}

	// inline asm
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd98, %r28, %r204, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	add.f32 	%f1409, %f276, %f1406;
	add.f32 	%f1410, %f277, %f1407;
	add.f32 	%f1411, %f278, %f1408;
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f1411;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f1410;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f1409;}

	// inline asm
	st.v4.u16 	[%rd103], {%rs55, %rs56, %rs57, %rs51};
	bra.uni 	BB0_115;

BB0_114:
	mov.u64 	%rd116, image_RNM1;
	cvta.global.u64 	%rd111, %rd116;
	mov.u32 	%r206, 8;
	// inline asm
	call (%rd110), _rt_buffer_get_64, (%rd111, %r28, %r206, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f278;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f277;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f276;}

	// inline asm
	st.v4.u16 	[%rd110], {%rs62, %rs63, %rs64, %rs51};

BB0_115:
	ld.global.u32 	%r207, [additive];
	setp.eq.s32	%p154, %r207, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f1382;}

	// inline asm
	@%p154 bra 	BB0_117;

	mov.u64 	%rd129, image_RNM2;
	cvta.global.u64 	%rd118, %rd129;
	mov.u32 	%r211, 8;
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd118, %r28, %r211, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs72, %rs73, %rs74, %rs75}, [%rd117];
	// inline asm
	{  cvt.f32.f16 %f1416, %rs72;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1417, %rs73;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1418, %rs74;}

	// inline asm
	// inline asm
	call (%rd123), _rt_buffer_get_64, (%rd118, %r28, %r211, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	add.f32 	%f1419, %f279, %f1416;
	add.f32 	%f1420, %f280, %f1417;
	add.f32 	%f1421, %f281, %f1418;
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f1421;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f1420;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f1419;}

	// inline asm
	st.v4.u16 	[%rd123], {%rs69, %rs70, %rs71, %rs65};
	bra.uni 	BB0_118;

BB0_117:
	mov.u64 	%rd136, image_RNM2;
	cvta.global.u64 	%rd131, %rd136;
	mov.u32 	%r213, 8;
	// inline asm
	call (%rd130), _rt_buffer_get_64, (%rd131, %r28, %r213, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f281;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f280;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f279;}

	// inline asm
	st.v4.u16 	[%rd130], {%rs76, %rs77, %rs78, %rs65};

BB0_118:
	ld.global.u32 	%r214, [additive];
	setp.eq.s32	%p155, %r214, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs79, %f1382;}

	// inline asm
	@%p155 bra 	BB0_120;

	mov.u64 	%rd149, image_RNM3;
	cvta.global.u64 	%rd138, %rd149;
	mov.u32 	%r218, 8;
	// inline asm
	call (%rd137), _rt_buffer_get_64, (%rd138, %r28, %r218, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	ld.v4.u16 	{%rs86, %rs87, %rs88, %rs89}, [%rd137];
	// inline asm
	{  cvt.f32.f16 %f1426, %rs86;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1427, %rs87;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1428, %rs88;}

	// inline asm
	// inline asm
	call (%rd143), _rt_buffer_get_64, (%rd138, %r28, %r218, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	add.f32 	%f1429, %f282, %f1426;
	add.f32 	%f1430, %f283, %f1427;
	add.f32 	%f1431, %f284, %f1428;
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f1431;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs84, %f1430;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f1429;}

	// inline asm
	st.v4.u16 	[%rd143], {%rs83, %rs84, %rs85, %rs79};
	bra.uni 	BB0_141;

BB0_120:
	mov.u64 	%rd156, image_RNM3;
	cvta.global.u64 	%rd151, %rd156;
	mov.u32 	%r220, 8;
	// inline asm
	call (%rd150), _rt_buffer_get_64, (%rd151, %r28, %r220, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f284;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f283;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f282;}

	// inline asm
	st.v4.u16 	[%rd150], {%rs90, %rs91, %rs92, %rs79};

BB0_141:
	ret;
}


