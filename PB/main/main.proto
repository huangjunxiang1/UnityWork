///目前简单测试了下 就是下面这些 我测试的标准pb版本是3.4.1的 互相编码解码都能通过
///注意项:
///1.赞未支持message里面再定义message或者enum的定义方式 例如下面这种 
///message testA
///{
///  message testb
///  {
///    int32 testb1=1;
///  }
///  int32 testA1=1;
///}
///2.一些目前我基本没用到过的东西 比如oneof什么的 pb定义方式  也都没支持
///3.考虑ilruntime的热更  因此  此pb没有使用任何泛型 反射  对ilruntime比较友好  List<> 之类的泛型除外 这个没法解决


////枚举定义注释
enum COM_Client_Status
{
    S_Disconnected = 0;
    S_Connected = 1;//枚举注释
    S_Logined = 2;
    S_Loading = 3;
    //S_Creating = 4;//注释忽略测试
    S_Playing = 5;
    S_Relocating = 6;
}

//类定义注释
message TestPBmain
{
  bool test =1;//字段注释
  int32 test2 =2;
  sint32 test3 =3;
  int64 test4 =4;
  sint64 test5 =5;
  float test6 =6;
  string test7 =7;
  TestPB2 test8 =8;
  map<string, TestPB2> test9  = 9; // map<string, TestPB2> test9  = 9;
  map<int64,bool> test10=10;
  map<sint32,sint64> test11=11;
  bytes test12=12;
  //int32 tst13 =13;//注释行测试
  fixed32 test14=14;
  fixed64 test16=16;
  COM_Client_Status test15=15;
  double test18=18;
  map<fixed32,double> test19=19;

  repeated bool test21 =21;
  repeated int32 test22 =22;
  repeated sint32 test23 =23;
  repeated int64 test24 =24;
  repeated sint64 test25 =25;
  repeated float test26 =26;
  repeated string test27 =27;
  repeated TestPB2 test28 =28;
  repeated fixed32 test29 =29;
  repeated fixed64 test31 =31;
  repeated double test33 =33;

  float2 test34 =34;
  float3 test35 =35;
  float4 test36 =36;
}
message TestPB2
{
   int32 test2 =2;
   repeated int32 test22 =22;
}

//测试空行 跳行不被认为是注释
message C2S_Login{
	string acc=1;
	string pw=2;
}
message S2C_Login{
	string error=1;
	fixed64 token=2;
	string ip=3;
	int32 port=4;
}
message C2S_LoginGame{
 fixed64 token=1;
}
message S2C_LoginGame{
	string error=1;
}

message RoomInfo
{
  int64 id=1;
  string name=2;
  repeated UnitInfo infos= 3;//玩家
  map<int32,RoomLinkItem> link=4;
}
message UnitInfo{
	int64 id=1;
	string name=2;
}
message UnitInfo2{
	int64 id=1;
	game.S2C_SyncTransform t=2;
	map<int32,int64> attribute=3;
}
message UnitAttribute{
	int32 id=1;
	int64 v=2;
}
message RoomLinkItem
{
    int32 index=1;//唯一下标
    int2 xy=2;//room xy
    int32 dir=3;//0=左 1=下 2=右  3=上

    int32 link=4;//链接对象
	int32 colorIndex=5;
}

//表明我是udp链接
message C2S_UDPConnect{}
message C2S_RoomList
{

}
message S2C_RoomList
{
   repeated RoomInfo lst=1;
}

message C2S_CreateRoom
{
	string name=1;
}
message S2C_CreateRoom{
	RoomInfo info=1;
}

message C2S_JoinRoom
{
	int64 id=1;
}
message S2C_JoinRoom{
	RoomInfo info=1;
	repeated UnitInfo2 units=2;
	int64 myid=3;
}
message S2C_PlayerJoinRoom{
	UnitInfo2 info=1;
}

message C2S_DisRoom
{
	int64 id=1;
}
message S2C_DisRoom
{
	int64 id=1;
}
message C2S_PlayerQuit{
	
}
message S2C_PlayerQuit{
	int64 id=1;
}